{"ast":null,"code":"import { isNumber, ONE_YEAR, round } from './utils';\nexport function relativeToClocks(relative) {\n  return {\n    relative: relative,\n    timeStamp: getCorrectedTimeStamp(relative)\n  };\n}\n\nfunction getCorrectedTimeStamp(relativeTime) {\n  var correctedOrigin = Date.now() - performance.now(); // apply correction only for positive drift\n\n  if (correctedOrigin > getNavigationStart()) {\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    return Math.round(correctedOrigin + relativeTime);\n  }\n\n  return getTimeStamp(relativeTime);\n}\n\nexport function currentDrift() {\n  // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n  return Math.round(Date.now() - (getNavigationStart() + performance.now()));\n}\nexport function toServerDuration(duration) {\n  if (!isNumber(duration)) {\n    return duration;\n  }\n\n  return round(duration * 1e6, 0);\n}\nexport function timeStampNow() {\n  return Date.now();\n}\nexport function relativeNow() {\n  return performance.now();\n}\nexport function clocksNow() {\n  return {\n    relative: relativeNow(),\n    timeStamp: timeStampNow()\n  };\n}\nexport function clocksOrigin() {\n  return {\n    relative: 0,\n    timeStamp: getNavigationStart()\n  };\n}\nexport function elapsed(start, end) {\n  return end - start;\n}\n/**\n * Get the time since the navigation was started.\n *\n * Note: this does not use `performance.timeOrigin` because it doesn't seem to reflect the actual\n * time on which the navigation has started: it may be much farther in the past, at least in Firefox 71.\n * Related issue in Firefox: https://bugzilla.mozilla.org/show_bug.cgi?id=1429926\n */\n\nexport function getRelativeTime(timestamp) {\n  return timestamp - getNavigationStart();\n}\nexport function getTimeStamp(relativeTime) {\n  // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n  return Math.round(getNavigationStart() + relativeTime);\n}\nexport function looksLikeRelativeTime(time) {\n  return time < ONE_YEAR;\n}\n/**\n * Navigation start slightly change on some rare cases\n */\n\nvar navigationStart;\n\nfunction getNavigationStart() {\n  if (navigationStart === undefined) {\n    navigationStart = performance.timing.navigationStart;\n  }\n\n  return navigationStart;\n}\n\nexport function resetNavigationStart() {\n  navigationStart = undefined;\n}","map":{"version":3,"sources":["../../src/tools/timeUtils.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,EAAmB,QAAnB,EAA6B,KAA7B,QAA0C,SAA1C;AAQA,OAAM,SAAU,gBAAV,CAA2B,QAA3B,EAAiD;AACrD,SAAO;AAAE,IAAA,QAAQ,EAAA,QAAV;AAAY,IAAA,SAAS,EAAE,qBAAqB,CAAC,QAAD;AAA5C,GAAP;AACD;;AAED,SAAS,qBAAT,CAA+B,YAA/B,EAAyD;AACvD,MAAM,eAAe,GAAG,IAAI,CAAC,GAAL,KAAa,WAAW,CAAC,GAAZ,EAArC,CADuD,CAEvD;;AACA,MAAI,eAAe,GAAG,kBAAkB,EAAxC,EAA4C;AAC1C;AACA,WAAO,IAAI,CAAC,KAAL,CAAW,eAAe,GAAG,YAA7B,CAAP;AACD;;AACD,SAAO,YAAY,CAAC,YAAD,CAAnB;AACD;;AAED,OAAM,SAAU,YAAV,GAAsB;AAC1B;AACA,SAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,GAAL,MAAc,kBAAkB,KAAK,WAAW,CAAC,GAAZ,EAArC,CAAX,CAAP;AACD;AAID,OAAM,SAAU,gBAAV,CAA2B,QAA3B,EAAyD;AAC7D,MAAI,CAAC,QAAQ,CAAC,QAAD,CAAb,EAAyB;AACvB,WAAO,QAAP;AACD;;AACD,SAAO,KAAK,CAAC,QAAQ,GAAG,GAAZ,EAAiB,CAAjB,CAAZ;AACD;AAED,OAAM,SAAU,YAAV,GAAsB;AAC1B,SAAO,IAAI,CAAC,GAAL,EAAP;AACD;AAED,OAAM,SAAU,WAAV,GAAqB;AACzB,SAAO,WAAW,CAAC,GAAZ,EAAP;AACD;AAED,OAAM,SAAU,SAAV,GAAmB;AACvB,SAAO;AAAE,IAAA,QAAQ,EAAE,WAAW,EAAvB;AAA2B,IAAA,SAAS,EAAE,YAAY;AAAlD,GAAP;AACD;AAED,OAAM,SAAU,YAAV,GAAsB;AAC1B,SAAO;AAAE,IAAA,QAAQ,EAAE,CAAZ;AAA+B,IAAA,SAAS,EAAE,kBAAkB;AAA5D,GAAP;AACD;AAID,OAAM,SAAU,OAAV,CAAkB,KAAlB,EAAiC,GAAjC,EAA4C;AAChD,SAAQ,GAAG,GAAG,KAAd;AACD;AAED;;;;;;AAMG;;AACH,OAAM,SAAU,eAAV,CAA0B,SAA1B,EAA8C;AAClD,SAAQ,SAAS,GAAG,kBAAkB,EAAtC;AACD;AAED,OAAM,SAAU,YAAV,CAAuB,YAAvB,EAAiD;AACrD;AACA,SAAO,IAAI,CAAC,KAAL,CAAW,kBAAkB,KAAK,YAAlC,CAAP;AACD;AAED,OAAM,SAAU,qBAAV,CAAgC,IAAhC,EAA8D;AAClE,SAAO,IAAI,GAAG,QAAd;AACD;AAED;;AAEG;;AACH,IAAI,eAAJ;;AAEA,SAAS,kBAAT,GAA2B;AACzB,MAAI,eAAe,KAAK,SAAxB,EAAmC;AACjC,IAAA,eAAe,GAAG,WAAW,CAAC,MAAZ,CAAmB,eAArC;AACD;;AACD,SAAO,eAAP;AACD;;AAED,OAAM,SAAU,oBAAV,GAA8B;AAClC,EAAA,eAAe,GAAG,SAAlB;AACD","sourceRoot":"","sourcesContent":["import { isNumber, ONE_YEAR, round } from './utils';\nexport function relativeToClocks(relative) {\n    return { relative: relative, timeStamp: getCorrectedTimeStamp(relative) };\n}\nfunction getCorrectedTimeStamp(relativeTime) {\n    var correctedOrigin = Date.now() - performance.now();\n    // apply correction only for positive drift\n    if (correctedOrigin > getNavigationStart()) {\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        return Math.round(correctedOrigin + relativeTime);\n    }\n    return getTimeStamp(relativeTime);\n}\nexport function currentDrift() {\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    return Math.round(Date.now() - (getNavigationStart() + performance.now()));\n}\nexport function toServerDuration(duration) {\n    if (!isNumber(duration)) {\n        return duration;\n    }\n    return round(duration * 1e6, 0);\n}\nexport function timeStampNow() {\n    return Date.now();\n}\nexport function relativeNow() {\n    return performance.now();\n}\nexport function clocksNow() {\n    return { relative: relativeNow(), timeStamp: timeStampNow() };\n}\nexport function clocksOrigin() {\n    return { relative: 0, timeStamp: getNavigationStart() };\n}\nexport function elapsed(start, end) {\n    return (end - start);\n}\n/**\n * Get the time since the navigation was started.\n *\n * Note: this does not use `performance.timeOrigin` because it doesn't seem to reflect the actual\n * time on which the navigation has started: it may be much farther in the past, at least in Firefox 71.\n * Related issue in Firefox: https://bugzilla.mozilla.org/show_bug.cgi?id=1429926\n */\nexport function getRelativeTime(timestamp) {\n    return (timestamp - getNavigationStart());\n}\nexport function getTimeStamp(relativeTime) {\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    return Math.round(getNavigationStart() + relativeTime);\n}\nexport function looksLikeRelativeTime(time) {\n    return time < ONE_YEAR;\n}\n/**\n * Navigation start slightly change on some rare cases\n */\nvar navigationStart;\nfunction getNavigationStart() {\n    if (navigationStart === undefined) {\n        navigationStart = performance.timing.navigationStart;\n    }\n    return navigationStart;\n}\nexport function resetNavigationStart() {\n    navigationStart = undefined;\n}\n//# sourceMappingURL=timeUtils.js.map"]},"metadata":{},"sourceType":"module"}