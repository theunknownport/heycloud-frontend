{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { extendDataItem, getter, Keys, mapTree, hasRelativeStackingContext } from '@progress/kendo-react-common';\nimport { TABLE_COL_INDEX_ATTRIBUTE, TABLE_ROW_INDEX_ATTRIBUTE } from './constants';\nvar GROUP_SUBITEMS_COLLECTION = 'items';\nvar LAST_SELECTION_STATE = {};\n\nvar getCellSelection = function (currentSelection, selectedColumn) {\n  if (!currentSelection || Array.isArray(currentSelection) && currentSelection.length === 0) {\n    return [selectedColumn];\n  } else {\n    var foundIndex = currentSelection.findIndex(function (columnIndex) {\n      return columnIndex === selectedColumn;\n    });\n\n    if (foundIndex > -1) {\n      return currentSelection.filter(function (columnIndex) {\n        return columnIndex === selectedColumn;\n      });\n    } else {\n      return __spreadArray(__spreadArray([], currentSelection, true), [selectedColumn], false);\n    }\n  }\n};\n/** @hidden */\n\n\nexport var closestTagName = function (target, tagName) {\n  var currentTarget = target;\n\n  while (currentTarget) {\n    if (currentTarget.tagName === tagName) {\n      return currentTarget;\n    } else if (currentTarget.tagName === 'TABLE') {\n      return null;\n    }\n\n    currentTarget = currentTarget.parentElement;\n  }\n\n  return null;\n};\n/** @hidden */\n\nexport var getRowIndex = function (element) {\n  if (!element) {\n    return;\n  }\n\n  var rowIndex = element.getAttribute(TABLE_ROW_INDEX_ATTRIBUTE);\n  return rowIndex ? parseInt(rowIndex, 10) : undefined;\n};\n/** @hidden */\n\nexport var getColumnIndex = function (element) {\n  if (!element) {\n    return;\n  }\n\n  var colIndex = element.getAttribute(TABLE_COL_INDEX_ATTRIBUTE);\n  return colIndex ? parseInt(colIndex, 10) : undefined;\n};\n/**\n * @hidden\n *\n * Apply the selected field to the data items based on the selected state.\n *\n * @param {{data: any, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string; selectedField: string; subItemsField?: string; }} options\n * @returns {any[]}\n */\n\nexport var setSelectedState = function (options) {\n  var subItemsField = options.subItemsField || GROUP_SUBITEMS_COLLECTION;\n  var idGetter = getter(options.dataItemKey);\n  return mapTree(options.data, subItemsField, function (item) {\n    var _a;\n\n    return extendDataItem(item, subItemsField, (_a = {}, _a[options.selectedField] = options.selectedState[idGetter(item)], _a));\n  });\n};\n/**\n * Get selected state from the component KeyDown event.\n *\n * @param {{event: TableKeyDownEvent, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string}} options\n * @returns {{[id: string]: boolean | number[]}} - The new selected state.\n */\n\nexport var getSelectedStateFromKeyDown = function (options) {\n  var event = options.event,\n      dataItemKey = options.dataItemKey,\n      selectedState = options.selectedState;\n  var syntheticEvent = event.syntheticEvent,\n      nativeEvent = event.nativeEvent,\n      dataItems = event.dataItems,\n      componentId = event.componentId,\n      mode = event.mode,\n      cell = event.cell,\n      selectedField = event.selectedField;\n  var target = nativeEvent.target,\n      ctrlKey = nativeEvent.ctrlKey,\n      metaKey = nativeEvent.metaKey,\n      altKey = nativeEvent.altKey,\n      shiftKey = nativeEvent.shiftKey;\n\n  if (syntheticEvent.isDefaultPrevented() || nativeEvent.keyCode !== Keys.enter) {\n    return selectedState;\n  }\n\n  var tdElement = closestTagName(target, 'TD');\n  var trElement = closestTagName(target, 'TR');\n  var colIndex = getColumnIndex(tdElement);\n  var rowIndex = getRowIndex(trElement);\n  var selectionState = {};\n\n  if (tdElement && trElement && rowIndex !== undefined && colIndex !== undefined) {\n    selectionState = getSelectedState({\n      selectedState: selectedState,\n      dataItemKey: dataItemKey,\n      event: {\n        ctrlKey: ctrlKey,\n        metaKey: metaKey,\n        altKey: altKey,\n        shiftKey: shiftKey,\n        dataItems: dataItems,\n        cell: cell,\n        mode: mode,\n        selectedField: selectedField,\n        componentId: componentId,\n        startColIndex: colIndex,\n        endColIndex: colIndex,\n        startRowIndex: rowIndex,\n        endRowIndex: rowIndex,\n        isDrag: false,\n        syntheticEvent: syntheticEvent,\n        nativeEvent: nativeEvent,\n        target: event.target,\n        dataItem: null\n      }\n    });\n  }\n\n  return selectionState;\n};\n/**\n * Get selected state from the component selection event.\n *\n * @param {{event: TableSelectionChangeEvent, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string}} options\n * @returns {{[id: string]: boolean | number[]}} - The new selected state.\n */\n\nexport var getSelectedState = function (options) {\n  var event = options.event,\n      dataItemKey = options.dataItemKey,\n      prevSelectedState = options.selectedState;\n  var dataItems = event.dataItems,\n      startRowIndex = event.startRowIndex,\n      endRowIndex = event.endRowIndex,\n      startColIndex = event.startColIndex,\n      endColIndex = event.endColIndex,\n      cell = event.cell,\n      isDrag = event.isDrag,\n      ctrlKey = event.ctrlKey,\n      shiftKey = event.shiftKey,\n      metaKey = event.metaKey,\n      componentId = event.componentId,\n      mode = event.mode,\n      dataItem = event.dataItem;\n  var idGetter = getter(dataItemKey);\n  var selectionState = {};\n  var isInputEvent = dataItem !== null;\n\n  if (mode === 'single') {\n    var currentDataItem = dataItems.slice(startRowIndex, startRowIndex + 1)[0];\n    var itemId = idGetter(currentDataItem);\n    LAST_SELECTION_STATE[componentId] = {\n      rowIndex: startRowIndex,\n      colIndex: startColIndex\n    };\n    selectionState[itemId] = cell ? [startColIndex] : true;\n  } else if (isDrag || !shiftKey && !ctrlKey && !metaKey && !isInputEvent) {\n    if (!isDrag) {\n      LAST_SELECTION_STATE[componentId] = {\n        rowIndex: startRowIndex,\n        colIndex: startColIndex\n      };\n    }\n\n    var selectedColumns_1 = [];\n\n    for (var i = startColIndex; i <= endColIndex; i++) {\n      selectedColumns_1.push(i);\n    }\n\n    var selectedDataItems = dataItems.slice(startRowIndex, endRowIndex + 1);\n    selectedDataItems.forEach(function (currentItem) {\n      var itemId = idGetter(currentItem);\n      selectionState[itemId] = cell ? __spreadArray([], selectedColumns_1, true) : true;\n    });\n  } else {\n    if (ctrlKey || metaKey || isInputEvent) {\n      LAST_SELECTION_STATE[componentId] = {\n        rowIndex: startRowIndex,\n        colIndex: startColIndex\n      };\n      var selectedDataItems = dataItems.slice(startRowIndex, endRowIndex + 1);\n      var currentDataItem = selectedDataItems[0];\n      var itemId = idGetter(currentDataItem);\n      selectionState = __assign({}, prevSelectedState);\n      selectionState[itemId] = cell && !isInputEvent ? getCellSelection(selectionState[itemId], startColIndex) : !selectionState[itemId];\n    } else if (shiftKey) {\n      var lastRowIndex = LAST_SELECTION_STATE[componentId] && LAST_SELECTION_STATE[componentId].rowIndex || 0;\n      var lastColIndex = LAST_SELECTION_STATE[componentId] && LAST_SELECTION_STATE[componentId].colIndex || 0;\n      var currentStartRowIndex = Math.min(lastRowIndex, startRowIndex, endRowIndex);\n      var currentEndRowIndex = Math.max(lastRowIndex, startRowIndex, endRowIndex);\n      var currentStarColIndex = Math.min(lastColIndex, startColIndex, endColIndex);\n      var currentEndColIndex = Math.max(lastColIndex, startColIndex, endColIndex);\n      var selectedColumns_2 = [];\n\n      for (var i = currentStarColIndex; i <= currentEndColIndex; i++) {\n        selectedColumns_2.push(i);\n      }\n\n      var selectedDataItems = dataItems.slice(currentStartRowIndex, currentEndRowIndex + 1);\n      selectedDataItems.forEach(function (currentItem) {\n        var itemId = idGetter(currentItem);\n        selectionState[itemId] = cell ? __spreadArray([], selectedColumns_2, true) : true;\n      });\n    }\n  }\n\n  return selectionState;\n};\n/** @hidden */\n\nvar HAS_RELATIVE_STACKING_CONTEXT = hasRelativeStackingContext();\n/** @hidden */\n\nexport var relativeContextElement = function (element) {\n  if (!element || !HAS_RELATIVE_STACKING_CONTEXT) {\n    return null;\n  }\n\n  var node = element.parentElement;\n\n  while (node) {\n    if (window.getComputedStyle(node).transform !== 'none') {\n      return node;\n    }\n\n    node = node.parentElement;\n  }\n};\n/** @hidden */\n\nexport var getOffset = function (offsetParent) {\n  if (offsetParent && offsetParent.ownerDocument) {\n    if (offsetParent !== offsetParent.ownerDocument.body) {\n      var rect = offsetParent.getBoundingClientRect();\n      return {\n        left: rect.left - offsetParent.scrollLeft,\n        top: rect.top - offsetParent.scrollTop\n      };\n    }\n  }\n\n  return {\n    left: 0,\n    top: 0\n  };\n};\n/** @hidden */\n\nexport var getSelectionOptions = function (selectable) {\n  var enabled = selectable ? typeof selectable.enabled === 'boolean' ? selectable.enabled : true : false;\n  var drag = selectable ? Boolean(selectable.drag) : false;\n  var mode = selectable && selectable.mode ? selectable.mode : 'multiple';\n  var cell = Boolean(selectable && selectable.cell);\n  return {\n    enabled: enabled,\n    drag: drag,\n    mode: mode,\n    cell: cell\n  };\n};","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-data-tools/dist/es/selection/utils.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArray","to","from","pack","l","ar","Array","slice","concat","extendDataItem","getter","Keys","mapTree","hasRelativeStackingContext","TABLE_COL_INDEX_ATTRIBUTE","TABLE_ROW_INDEX_ATTRIBUTE","GROUP_SUBITEMS_COLLECTION","LAST_SELECTION_STATE","getCellSelection","currentSelection","selectedColumn","isArray","foundIndex","findIndex","columnIndex","filter","closestTagName","target","tagName","currentTarget","parentElement","getRowIndex","element","rowIndex","getAttribute","parseInt","undefined","getColumnIndex","colIndex","setSelectedState","options","subItemsField","idGetter","dataItemKey","data","item","_a","selectedField","selectedState","getSelectedStateFromKeyDown","event","syntheticEvent","nativeEvent","dataItems","componentId","mode","cell","ctrlKey","metaKey","altKey","shiftKey","isDefaultPrevented","keyCode","enter","tdElement","trElement","selectionState","getSelectedState","startColIndex","endColIndex","startRowIndex","endRowIndex","isDrag","dataItem","prevSelectedState","isInputEvent","currentDataItem","itemId","selectedColumns_1","push","selectedDataItems","forEach","currentItem","lastRowIndex","lastColIndex","currentStartRowIndex","Math","min","currentEndRowIndex","max","currentStarColIndex","currentEndColIndex","selectedColumns_2","HAS_RELATIVE_STACKING_CONTEXT","relativeContextElement","node","window","getComputedStyle","transform","getOffset","offsetParent","ownerDocument","body","rect","getBoundingClientRect","left","scrollLeft","top","scrollTop","getSelectionOptions","selectable","enabled","drag","Boolean"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,aAAa,GAAI,QAAQ,KAAKA,aAAd,IAAgC,UAAUC,EAAV,EAAcC,IAAd,EAAoBC,IAApB,EAA0B;AAC1E,MAAIA,IAAI,IAAIV,SAAS,CAACC,MAAV,KAAqB,CAAjC,EAAoC,KAAK,IAAIH,CAAC,GAAG,CAAR,EAAWa,CAAC,GAAGF,IAAI,CAACR,MAApB,EAA4BW,EAAjC,EAAqCd,CAAC,GAAGa,CAAzC,EAA4Cb,CAAC,EAA7C,EAAiD;AACjF,QAAIc,EAAE,IAAI,EAAEd,CAAC,IAAIW,IAAP,CAAV,EAAwB;AACpB,UAAI,CAACG,EAAL,EAASA,EAAE,GAAGC,KAAK,CAACV,SAAN,CAAgBW,KAAhB,CAAsBT,IAAtB,CAA2BI,IAA3B,EAAiC,CAAjC,EAAoCX,CAApC,CAAL;AACTc,MAAAA,EAAE,CAACd,CAAD,CAAF,GAAQW,IAAI,CAACX,CAAD,CAAZ;AACH;AACJ;AACD,SAAOU,EAAE,CAACO,MAAH,CAAUH,EAAE,IAAIC,KAAK,CAACV,SAAN,CAAgBW,KAAhB,CAAsBT,IAAtB,CAA2BI,IAA3B,CAAhB,CAAP;AACH,CARD;;AASA,SAASO,cAAT,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,OAAvC,EAAgDC,0BAAhD,QAAkF,8BAAlF;AACA,SAASC,yBAAT,EAAoCC,yBAApC,QAAqE,aAArE;AACA,IAAIC,yBAAyB,GAAG,OAAhC;AACA,IAAIC,oBAAoB,GAAG,EAA3B;;AACA,IAAIC,gBAAgB,GAAG,UAAUC,gBAAV,EAA4BC,cAA5B,EAA4C;AAC/D,MAAI,CAACD,gBAAD,IAAsBb,KAAK,CAACe,OAAN,CAAcF,gBAAd,KAAmCA,gBAAgB,CAACzB,MAAjB,KAA4B,CAAzF,EAA6F;AACzF,WAAO,CAAC0B,cAAD,CAAP;AACH,GAFD,MAGK;AACD,QAAIE,UAAU,GAAGH,gBAAgB,CAACI,SAAjB,CAA2B,UAAUC,WAAV,EAAuB;AAAE,aAAOA,WAAW,KAAKJ,cAAvB;AAAwC,KAA5F,CAAjB;;AACA,QAAIE,UAAU,GAAG,CAAC,CAAlB,EAAqB;AACjB,aAAOH,gBAAgB,CAACM,MAAjB,CAAwB,UAAUD,WAAV,EAAuB;AAAE,eAAOA,WAAW,KAAKJ,cAAvB;AAAwC,OAAzF,CAAP;AACH,KAFD,MAGK;AACD,aAAOpB,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKmB,gBAAL,EAAuB,IAAvB,CAAd,EAA4C,CAACC,cAAD,CAA5C,EAA8D,KAA9D,CAApB;AACH;AACJ;AACJ,CAbD;AAcA;;;AACA,OAAO,IAAIM,cAAc,GAAG,UAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AACnD,MAAIC,aAAa,GAAGF,MAApB;;AACA,SAAOE,aAAP,EAAsB;AAClB,QAAIA,aAAa,CAACD,OAAd,KAA0BA,OAA9B,EAAuC;AACnC,aAAOC,aAAP;AACH,KAFD,MAGK,IAAIA,aAAa,CAACD,OAAd,KAA0B,OAA9B,EAAuC;AACxC,aAAO,IAAP;AACH;;AACDC,IAAAA,aAAa,GAAGA,aAAa,CAACC,aAA9B;AACH;;AACD,SAAO,IAAP;AACH,CAZM;AAaP;;AACA,OAAO,IAAIC,WAAW,GAAG,UAAUC,OAAV,EAAmB;AACxC,MAAI,CAACA,OAAL,EAAc;AACV;AACH;;AACD,MAAIC,QAAQ,GAAGD,OAAO,CAACE,YAAR,CAAqBnB,yBAArB,CAAf;AACA,SAAOkB,QAAQ,GAAGE,QAAQ,CAACF,QAAD,EAAW,EAAX,CAAX,GAA4BG,SAA3C;AACH,CANM;AAOP;;AACA,OAAO,IAAIC,cAAc,GAAG,UAAUL,OAAV,EAAmB;AAC3C,MAAI,CAACA,OAAL,EAAc;AACV;AACH;;AACD,MAAIM,QAAQ,GAAGN,OAAO,CAACE,YAAR,CAAqBpB,yBAArB,CAAf;AACA,SAAOwB,QAAQ,GAAGH,QAAQ,CAACG,QAAD,EAAW,EAAX,CAAX,GAA4BF,SAA3C;AACH,CANM;AAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIG,gBAAgB,GAAG,UAAUC,OAAV,EAAmB;AAC7C,MAAIC,aAAa,GAAGD,OAAO,CAACC,aAAR,IAAyBzB,yBAA7C;AACA,MAAI0B,QAAQ,GAAGhC,MAAM,CAAC8B,OAAO,CAACG,WAAT,CAArB;AACA,SAAO/B,OAAO,CAAC4B,OAAO,CAACI,IAAT,EAAeH,aAAf,EAA8B,UAAUI,IAAV,EAAgB;AACxD,QAAIC,EAAJ;;AACA,WAAOrC,cAAc,CAACoC,IAAD,EAAOJ,aAAP,GAAuBK,EAAE,GAAG,EAAL,EACxCA,EAAE,CAACN,OAAO,CAACO,aAAT,CAAF,GAA4BP,OAAO,CAACQ,aAAR,CAAsBN,QAAQ,CAACG,IAAD,CAA9B,CADY,EAExCC,EAFiB,EAArB;AAGH,GALa,CAAd;AAMH,CATM;AAUP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIG,2BAA2B,GAAG,UAAUT,OAAV,EAAmB;AACxD,MAAIU,KAAK,GAAGV,OAAO,CAACU,KAApB;AAAA,MAA2BP,WAAW,GAAGH,OAAO,CAACG,WAAjD;AAAA,MAA8DK,aAAa,GAAGR,OAAO,CAACQ,aAAtF;AACA,MAAIG,cAAc,GAAGD,KAAK,CAACC,cAA3B;AAAA,MAA2CC,WAAW,GAAGF,KAAK,CAACE,WAA/D;AAAA,MAA4EC,SAAS,GAAGH,KAAK,CAACG,SAA9F;AAAA,MAAyGC,WAAW,GAAGJ,KAAK,CAACI,WAA7H;AAAA,MAA0IC,IAAI,GAAGL,KAAK,CAACK,IAAvJ;AAAA,MAA6JC,IAAI,GAAGN,KAAK,CAACM,IAA1K;AAAA,MAAgLT,aAAa,GAAGG,KAAK,CAACH,aAAtM;AACA,MAAIpB,MAAM,GAAGyB,WAAW,CAACzB,MAAzB;AAAA,MAAiC8B,OAAO,GAAGL,WAAW,CAACK,OAAvD;AAAA,MAAgEC,OAAO,GAAGN,WAAW,CAACM,OAAtF;AAAA,MAA+FC,MAAM,GAAGP,WAAW,CAACO,MAApH;AAAA,MAA4HC,QAAQ,GAAGR,WAAW,CAACQ,QAAnJ;;AACA,MAAIT,cAAc,CAACU,kBAAf,MAAuCT,WAAW,CAACU,OAAZ,KAAwBnD,IAAI,CAACoD,KAAxE,EAA+E;AAC3E,WAAOf,aAAP;AACH;;AACD,MAAIgB,SAAS,GAAGtC,cAAc,CAACC,MAAD,EAAS,IAAT,CAA9B;AACA,MAAIsC,SAAS,GAAGvC,cAAc,CAACC,MAAD,EAAS,IAAT,CAA9B;AACA,MAAIW,QAAQ,GAAGD,cAAc,CAAC2B,SAAD,CAA7B;AACA,MAAI/B,QAAQ,GAAGF,WAAW,CAACkC,SAAD,CAA1B;AACA,MAAIC,cAAc,GAAG,EAArB;;AACA,MAAIF,SAAS,IAAIC,SAAb,IAA0BhC,QAAQ,KAAKG,SAAvC,IAAoDE,QAAQ,KAAKF,SAArE,EAAgF;AAC5E8B,IAAAA,cAAc,GAAGC,gBAAgB,CAAC;AAC9BnB,MAAAA,aAAa,EAAEA,aADe;AAE9BL,MAAAA,WAAW,EAAEA,WAFiB;AAG9BO,MAAAA,KAAK,EAAE;AACHO,QAAAA,OAAO,EAAEA,OADN;AAEHC,QAAAA,OAAO,EAAEA,OAFN;AAGHC,QAAAA,MAAM,EAAEA,MAHL;AAIHC,QAAAA,QAAQ,EAAEA,QAJP;AAKHP,QAAAA,SAAS,EAAEA,SALR;AAMHG,QAAAA,IAAI,EAAEA,IANH;AAOHD,QAAAA,IAAI,EAAEA,IAPH;AAQHR,QAAAA,aAAa,EAAEA,aARZ;AASHO,QAAAA,WAAW,EAAEA,WATV;AAUHc,QAAAA,aAAa,EAAE9B,QAVZ;AAUsB+B,QAAAA,WAAW,EAAE/B,QAVnC;AAU6CgC,QAAAA,aAAa,EAAErC,QAV5D;AAUsEsC,QAAAA,WAAW,EAAEtC,QAVnF;AAWHuC,QAAAA,MAAM,EAAE,KAXL;AAYHrB,QAAAA,cAAc,EAAEA,cAZb;AAaHC,QAAAA,WAAW,EAAEA,WAbV;AAcHzB,QAAAA,MAAM,EAAEuB,KAAK,CAACvB,MAdX;AAeH8C,QAAAA,QAAQ,EAAE;AAfP;AAHuB,KAAD,CAAjC;AAqBH;;AACD,SAAOP,cAAP;AACH,CApCM;AAqCP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,gBAAgB,GAAG,UAAU3B,OAAV,EAAmB;AAC7C,MAAIU,KAAK,GAAGV,OAAO,CAACU,KAApB;AAAA,MAA2BP,WAAW,GAAGH,OAAO,CAACG,WAAjD;AAAA,MAA8D+B,iBAAiB,GAAGlC,OAAO,CAACQ,aAA1F;AACA,MAAIK,SAAS,GAAGH,KAAK,CAACG,SAAtB;AAAA,MAAiCiB,aAAa,GAAGpB,KAAK,CAACoB,aAAvD;AAAA,MAAsEC,WAAW,GAAGrB,KAAK,CAACqB,WAA1F;AAAA,MAAuGH,aAAa,GAAGlB,KAAK,CAACkB,aAA7H;AAAA,MAA4IC,WAAW,GAAGnB,KAAK,CAACmB,WAAhK;AAAA,MAA6Kb,IAAI,GAAGN,KAAK,CAACM,IAA1L;AAAA,MAAgMgB,MAAM,GAAGtB,KAAK,CAACsB,MAA/M;AAAA,MAAuNf,OAAO,GAAGP,KAAK,CAACO,OAAvO;AAAA,MAAgPG,QAAQ,GAAGV,KAAK,CAACU,QAAjQ;AAAA,MAA2QF,OAAO,GAAGR,KAAK,CAACQ,OAA3R;AAAA,MAAoSJ,WAAW,GAAGJ,KAAK,CAACI,WAAxT;AAAA,MAAqUC,IAAI,GAAGL,KAAK,CAACK,IAAlV;AAAA,MAAwVkB,QAAQ,GAAGvB,KAAK,CAACuB,QAAzW;AACA,MAAI/B,QAAQ,GAAGhC,MAAM,CAACiC,WAAD,CAArB;AACA,MAAIuB,cAAc,GAAG,EAArB;AACA,MAAIS,YAAY,GAAGF,QAAQ,KAAK,IAAhC;;AACA,MAAIlB,IAAI,KAAK,QAAb,EAAuB;AACnB,QAAIqB,eAAe,GAAGvB,SAAS,CAAC9C,KAAV,CAAgB+D,aAAhB,EAA+BA,aAAa,GAAG,CAA/C,EAAkD,CAAlD,CAAtB;AACA,QAAIO,MAAM,GAAGnC,QAAQ,CAACkC,eAAD,CAArB;AACA3D,IAAAA,oBAAoB,CAACqC,WAAD,CAApB,GAAoC;AAChCrB,MAAAA,QAAQ,EAAEqC,aADsB;AAEhChC,MAAAA,QAAQ,EAAE8B;AAFsB,KAApC;AAIAF,IAAAA,cAAc,CAACW,MAAD,CAAd,GAAyBrB,IAAI,GAAG,CAACY,aAAD,CAAH,GAAqB,IAAlD;AACH,GARD,MASK,IAAII,MAAM,IAAK,CAACZ,QAAD,IAAa,CAACH,OAAd,IAAyB,CAACC,OAA1B,IAAqC,CAACiB,YAArD,EAAoE;AACrE,QAAI,CAACH,MAAL,EAAa;AACTvD,MAAAA,oBAAoB,CAACqC,WAAD,CAApB,GAAoC;AAChCrB,QAAAA,QAAQ,EAAEqC,aADsB;AAEhChC,QAAAA,QAAQ,EAAE8B;AAFsB,OAApC;AAIH;;AACD,QAAIU,iBAAiB,GAAG,EAAxB;;AACA,SAAK,IAAIvF,CAAC,GAAG6E,aAAb,EAA4B7E,CAAC,IAAI8E,WAAjC,EAA8C9E,CAAC,EAA/C,EAAmD;AAC/CuF,MAAAA,iBAAiB,CAACC,IAAlB,CAAuBxF,CAAvB;AACH;;AACD,QAAIyF,iBAAiB,GAAG3B,SAAS,CAAC9C,KAAV,CAAgB+D,aAAhB,EAA+BC,WAAW,GAAG,CAA7C,CAAxB;AACAS,IAAAA,iBAAiB,CAACC,OAAlB,CAA0B,UAAUC,WAAV,EAAuB;AAC7C,UAAIL,MAAM,GAAGnC,QAAQ,CAACwC,WAAD,CAArB;AACAhB,MAAAA,cAAc,CAACW,MAAD,CAAd,GAAyBrB,IAAI,GAAGxD,aAAa,CAAC,EAAD,EAAK8E,iBAAL,EAAwB,IAAxB,CAAhB,GAAgD,IAA7E;AACH,KAHD;AAIH,GAhBI,MAiBA;AACD,QAAIrB,OAAO,IAAIC,OAAX,IAAsBiB,YAA1B,EAAwC;AACpC1D,MAAAA,oBAAoB,CAACqC,WAAD,CAApB,GAAoC;AAChCrB,QAAAA,QAAQ,EAAEqC,aADsB;AAEhChC,QAAAA,QAAQ,EAAE8B;AAFsB,OAApC;AAIA,UAAIY,iBAAiB,GAAG3B,SAAS,CAAC9C,KAAV,CAAgB+D,aAAhB,EAA+BC,WAAW,GAAG,CAA7C,CAAxB;AACA,UAAIK,eAAe,GAAGI,iBAAiB,CAAC,CAAD,CAAvC;AACA,UAAIH,MAAM,GAAGnC,QAAQ,CAACkC,eAAD,CAArB;AACAV,MAAAA,cAAc,GAAGhF,QAAQ,CAAC,EAAD,EAAKwF,iBAAL,CAAzB;AACAR,MAAAA,cAAc,CAACW,MAAD,CAAd,GAAyBrB,IAAI,IAAI,CAACmB,YAAT,GAAwBzD,gBAAgB,CAACgD,cAAc,CAACW,MAAD,CAAf,EAAyBT,aAAzB,CAAxC,GAAkF,CAACF,cAAc,CAACW,MAAD,CAA1H;AACH,KAVD,MAWK,IAAIjB,QAAJ,EAAc;AACf,UAAIuB,YAAY,GAAIlE,oBAAoB,CAACqC,WAAD,CAApB,IAAqCrC,oBAAoB,CAACqC,WAAD,CAApB,CAAkCrB,QAAxE,IAAqF,CAAxG;AACA,UAAImD,YAAY,GAAInE,oBAAoB,CAACqC,WAAD,CAApB,IAAqCrC,oBAAoB,CAACqC,WAAD,CAApB,CAAkChB,QAAxE,IAAqF,CAAxG;AACA,UAAI+C,oBAAoB,GAAGC,IAAI,CAACC,GAAL,CAASJ,YAAT,EAAuBb,aAAvB,EAAsCC,WAAtC,CAA3B;AACA,UAAIiB,kBAAkB,GAAGF,IAAI,CAACG,GAAL,CAASN,YAAT,EAAuBb,aAAvB,EAAsCC,WAAtC,CAAzB;AACA,UAAImB,mBAAmB,GAAGJ,IAAI,CAACC,GAAL,CAASH,YAAT,EAAuBhB,aAAvB,EAAsCC,WAAtC,CAA1B;AACA,UAAIsB,kBAAkB,GAAGL,IAAI,CAACG,GAAL,CAASL,YAAT,EAAuBhB,aAAvB,EAAsCC,WAAtC,CAAzB;AACA,UAAIuB,iBAAiB,GAAG,EAAxB;;AACA,WAAK,IAAIrG,CAAC,GAAGmG,mBAAb,EAAkCnG,CAAC,IAAIoG,kBAAvC,EAA2DpG,CAAC,EAA5D,EAAgE;AAC5DqG,QAAAA,iBAAiB,CAACb,IAAlB,CAAuBxF,CAAvB;AACH;;AACD,UAAIyF,iBAAiB,GAAG3B,SAAS,CAAC9C,KAAV,CAAgB8E,oBAAhB,EAAsCG,kBAAkB,GAAG,CAA3D,CAAxB;AACAR,MAAAA,iBAAiB,CAACC,OAAlB,CAA0B,UAAUC,WAAV,EAAuB;AAC7C,YAAIL,MAAM,GAAGnC,QAAQ,CAACwC,WAAD,CAArB;AACAhB,QAAAA,cAAc,CAACW,MAAD,CAAd,GAAyBrB,IAAI,GAAGxD,aAAa,CAAC,EAAD,EAAK4F,iBAAL,EAAwB,IAAxB,CAAhB,GAAgD,IAA7E;AACH,OAHD;AAIH;AACJ;;AACD,SAAO1B,cAAP;AACH,CA/DM;AAgEP;;AACA,IAAI2B,6BAA6B,GAAGhF,0BAA0B,EAA9D;AACA;;AACA,OAAO,IAAIiF,sBAAsB,GAAG,UAAU9D,OAAV,EAAmB;AACnD,MAAI,CAACA,OAAD,IAAY,CAAC6D,6BAAjB,EAAgD;AAC5C,WAAO,IAAP;AACH;;AACD,MAAIE,IAAI,GAAG/D,OAAO,CAACF,aAAnB;;AACA,SAAOiE,IAAP,EAAa;AACT,QAAIC,MAAM,CAACC,gBAAP,CAAwBF,IAAxB,EAA8BG,SAA9B,KAA4C,MAAhD,EAAwD;AACpD,aAAOH,IAAP;AACH;;AACDA,IAAAA,IAAI,GAAGA,IAAI,CAACjE,aAAZ;AACH;AACJ,CAXM;AAYP;;AACA,OAAO,IAAIqE,SAAS,GAAG,UAAUC,YAAV,EAAwB;AAC3C,MAAIA,YAAY,IAAIA,YAAY,CAACC,aAAjC,EAAgD;AAC5C,QAAID,YAAY,KAAKA,YAAY,CAACC,aAAb,CAA2BC,IAAhD,EAAsD;AAClD,UAAIC,IAAI,GAAGH,YAAY,CAACI,qBAAb,EAAX;AACA,aAAO;AACHC,QAAAA,IAAI,EAAEF,IAAI,CAACE,IAAL,GAAYL,YAAY,CAACM,UAD5B;AAEHC,QAAAA,GAAG,EAAEJ,IAAI,CAACI,GAAL,GAAWP,YAAY,CAACQ;AAF1B,OAAP;AAIH;AACJ;;AACD,SAAO;AAAEH,IAAAA,IAAI,EAAE,CAAR;AAAWE,IAAAA,GAAG,EAAE;AAAhB,GAAP;AACH,CAXM;AAYP;;AACA,OAAO,IAAIE,mBAAmB,GAAG,UAAUC,UAAV,EAAsB;AACnD,MAAIC,OAAO,GAAGD,UAAU,GACnB,OAAOA,UAAU,CAACC,OAAlB,KAA8B,SAA9B,GAA0CD,UAAU,CAACC,OAArD,GAA+D,IAD5C,GAEpB,KAFJ;AAGA,MAAIC,IAAI,GAAGF,UAAU,GAAGG,OAAO,CAACH,UAAU,CAACE,IAAZ,CAAV,GAA8B,KAAnD;AACA,MAAIzD,IAAI,GAAGuD,UAAU,IAAIA,UAAU,CAACvD,IAAzB,GAAgCuD,UAAU,CAACvD,IAA3C,GAAkD,UAA7D;AACA,MAAIC,IAAI,GAAGyD,OAAO,CAACH,UAAU,IAAIA,UAAU,CAACtD,IAA1B,CAAlB;AACA,SAAO;AAAEuD,IAAAA,OAAO,EAAEA,OAAX;AAAoBC,IAAAA,IAAI,EAAEA,IAA1B;AAAgCzD,IAAAA,IAAI,EAAEA,IAAtC;AAA4CC,IAAAA,IAAI,EAAEA;AAAlD,GAAP;AACH,CARM","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { extendDataItem, getter, Keys, mapTree, hasRelativeStackingContext } from '@progress/kendo-react-common';\nimport { TABLE_COL_INDEX_ATTRIBUTE, TABLE_ROW_INDEX_ATTRIBUTE } from './constants';\nvar GROUP_SUBITEMS_COLLECTION = 'items';\nvar LAST_SELECTION_STATE = {};\nvar getCellSelection = function (currentSelection, selectedColumn) {\n    if (!currentSelection || (Array.isArray(currentSelection) && currentSelection.length === 0)) {\n        return [selectedColumn];\n    }\n    else {\n        var foundIndex = currentSelection.findIndex(function (columnIndex) { return columnIndex === selectedColumn; });\n        if (foundIndex > -1) {\n            return currentSelection.filter(function (columnIndex) { return columnIndex === selectedColumn; });\n        }\n        else {\n            return __spreadArray(__spreadArray([], currentSelection, true), [selectedColumn], false);\n        }\n    }\n};\n/** @hidden */\nexport var closestTagName = function (target, tagName) {\n    var currentTarget = target;\n    while (currentTarget) {\n        if (currentTarget.tagName === tagName) {\n            return currentTarget;\n        }\n        else if (currentTarget.tagName === 'TABLE') {\n            return null;\n        }\n        currentTarget = currentTarget.parentElement;\n    }\n    return null;\n};\n/** @hidden */\nexport var getRowIndex = function (element) {\n    if (!element) {\n        return;\n    }\n    var rowIndex = element.getAttribute(TABLE_ROW_INDEX_ATTRIBUTE);\n    return rowIndex ? parseInt(rowIndex, 10) : undefined;\n};\n/** @hidden */\nexport var getColumnIndex = function (element) {\n    if (!element) {\n        return;\n    }\n    var colIndex = element.getAttribute(TABLE_COL_INDEX_ATTRIBUTE);\n    return colIndex ? parseInt(colIndex, 10) : undefined;\n};\n/**\n * @hidden\n *\n * Apply the selected field to the data items based on the selected state.\n *\n * @param {{data: any, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string; selectedField: string; subItemsField?: string; }} options\n * @returns {any[]}\n */\nexport var setSelectedState = function (options) {\n    var subItemsField = options.subItemsField || GROUP_SUBITEMS_COLLECTION;\n    var idGetter = getter(options.dataItemKey);\n    return mapTree(options.data, subItemsField, function (item) {\n        var _a;\n        return extendDataItem(item, subItemsField, (_a = {},\n            _a[options.selectedField] = options.selectedState[idGetter(item)],\n            _a));\n    });\n};\n/**\n * Get selected state from the component KeyDown event.\n *\n * @param {{event: TableKeyDownEvent, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string}} options\n * @returns {{[id: string]: boolean | number[]}} - The new selected state.\n */\nexport var getSelectedStateFromKeyDown = function (options) {\n    var event = options.event, dataItemKey = options.dataItemKey, selectedState = options.selectedState;\n    var syntheticEvent = event.syntheticEvent, nativeEvent = event.nativeEvent, dataItems = event.dataItems, componentId = event.componentId, mode = event.mode, cell = event.cell, selectedField = event.selectedField;\n    var target = nativeEvent.target, ctrlKey = nativeEvent.ctrlKey, metaKey = nativeEvent.metaKey, altKey = nativeEvent.altKey, shiftKey = nativeEvent.shiftKey;\n    if (syntheticEvent.isDefaultPrevented() || nativeEvent.keyCode !== Keys.enter) {\n        return selectedState;\n    }\n    var tdElement = closestTagName(target, 'TD');\n    var trElement = closestTagName(target, 'TR');\n    var colIndex = getColumnIndex(tdElement);\n    var rowIndex = getRowIndex(trElement);\n    var selectionState = {};\n    if (tdElement && trElement && rowIndex !== undefined && colIndex !== undefined) {\n        selectionState = getSelectedState({\n            selectedState: selectedState,\n            dataItemKey: dataItemKey,\n            event: {\n                ctrlKey: ctrlKey,\n                metaKey: metaKey,\n                altKey: altKey,\n                shiftKey: shiftKey,\n                dataItems: dataItems,\n                cell: cell,\n                mode: mode,\n                selectedField: selectedField,\n                componentId: componentId,\n                startColIndex: colIndex, endColIndex: colIndex, startRowIndex: rowIndex, endRowIndex: rowIndex,\n                isDrag: false,\n                syntheticEvent: syntheticEvent,\n                nativeEvent: nativeEvent,\n                target: event.target,\n                dataItem: null\n            }\n        });\n    }\n    return selectionState;\n};\n/**\n * Get selected state from the component selection event.\n *\n * @param {{event: TableSelectionChangeEvent, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string}} options\n * @returns {{[id: string]: boolean | number[]}} - The new selected state.\n */\nexport var getSelectedState = function (options) {\n    var event = options.event, dataItemKey = options.dataItemKey, prevSelectedState = options.selectedState;\n    var dataItems = event.dataItems, startRowIndex = event.startRowIndex, endRowIndex = event.endRowIndex, startColIndex = event.startColIndex, endColIndex = event.endColIndex, cell = event.cell, isDrag = event.isDrag, ctrlKey = event.ctrlKey, shiftKey = event.shiftKey, metaKey = event.metaKey, componentId = event.componentId, mode = event.mode, dataItem = event.dataItem;\n    var idGetter = getter(dataItemKey);\n    var selectionState = {};\n    var isInputEvent = dataItem !== null;\n    if (mode === 'single') {\n        var currentDataItem = dataItems.slice(startRowIndex, startRowIndex + 1)[0];\n        var itemId = idGetter(currentDataItem);\n        LAST_SELECTION_STATE[componentId] = {\n            rowIndex: startRowIndex,\n            colIndex: startColIndex\n        };\n        selectionState[itemId] = cell ? [startColIndex] : true;\n    }\n    else if (isDrag || (!shiftKey && !ctrlKey && !metaKey && !isInputEvent)) {\n        if (!isDrag) {\n            LAST_SELECTION_STATE[componentId] = {\n                rowIndex: startRowIndex,\n                colIndex: startColIndex\n            };\n        }\n        var selectedColumns_1 = [];\n        for (var i = startColIndex; i <= endColIndex; i++) {\n            selectedColumns_1.push(i);\n        }\n        var selectedDataItems = dataItems.slice(startRowIndex, endRowIndex + 1);\n        selectedDataItems.forEach(function (currentItem) {\n            var itemId = idGetter(currentItem);\n            selectionState[itemId] = cell ? __spreadArray([], selectedColumns_1, true) : true;\n        });\n    }\n    else {\n        if (ctrlKey || metaKey || isInputEvent) {\n            LAST_SELECTION_STATE[componentId] = {\n                rowIndex: startRowIndex,\n                colIndex: startColIndex\n            };\n            var selectedDataItems = dataItems.slice(startRowIndex, endRowIndex + 1);\n            var currentDataItem = selectedDataItems[0];\n            var itemId = idGetter(currentDataItem);\n            selectionState = __assign({}, prevSelectedState);\n            selectionState[itemId] = cell && !isInputEvent ? getCellSelection(selectionState[itemId], startColIndex) : !selectionState[itemId];\n        }\n        else if (shiftKey) {\n            var lastRowIndex = (LAST_SELECTION_STATE[componentId] && LAST_SELECTION_STATE[componentId].rowIndex) || 0;\n            var lastColIndex = (LAST_SELECTION_STATE[componentId] && LAST_SELECTION_STATE[componentId].colIndex) || 0;\n            var currentStartRowIndex = Math.min(lastRowIndex, startRowIndex, endRowIndex);\n            var currentEndRowIndex = Math.max(lastRowIndex, startRowIndex, endRowIndex);\n            var currentStarColIndex = Math.min(lastColIndex, startColIndex, endColIndex);\n            var currentEndColIndex = Math.max(lastColIndex, startColIndex, endColIndex);\n            var selectedColumns_2 = [];\n            for (var i = currentStarColIndex; i <= currentEndColIndex; i++) {\n                selectedColumns_2.push(i);\n            }\n            var selectedDataItems = dataItems.slice(currentStartRowIndex, currentEndRowIndex + 1);\n            selectedDataItems.forEach(function (currentItem) {\n                var itemId = idGetter(currentItem);\n                selectionState[itemId] = cell ? __spreadArray([], selectedColumns_2, true) : true;\n            });\n        }\n    }\n    return selectionState;\n};\n/** @hidden */\nvar HAS_RELATIVE_STACKING_CONTEXT = hasRelativeStackingContext();\n/** @hidden */\nexport var relativeContextElement = function (element) {\n    if (!element || !HAS_RELATIVE_STACKING_CONTEXT) {\n        return null;\n    }\n    var node = element.parentElement;\n    while (node) {\n        if (window.getComputedStyle(node).transform !== 'none') {\n            return node;\n        }\n        node = node.parentElement;\n    }\n};\n/** @hidden */\nexport var getOffset = function (offsetParent) {\n    if (offsetParent && offsetParent.ownerDocument) {\n        if (offsetParent !== offsetParent.ownerDocument.body) {\n            var rect = offsetParent.getBoundingClientRect();\n            return {\n                left: rect.left - offsetParent.scrollLeft,\n                top: rect.top - offsetParent.scrollTop\n            };\n        }\n    }\n    return { left: 0, top: 0 };\n};\n/** @hidden */\nexport var getSelectionOptions = function (selectable) {\n    var enabled = selectable ?\n        (typeof selectable.enabled === 'boolean' ? selectable.enabled : true) :\n        false;\n    var drag = selectable ? Boolean(selectable.drag) : false;\n    var mode = selectable && selectable.mode ? selectable.mode : 'multiple';\n    var cell = Boolean(selectable && selectable.cell);\n    return { enabled: enabled, drag: drag, mode: mode, cell: cell };\n};\n"]},"metadata":{},"sourceType":"module"}