{"ast":null,"code":"import * as React from 'react';\nimport { useDroppable } from './hooks';\n/**\n * Represents the KendoReact Droppable component.\n *\n * Accepts properties of type [DroppableProps]({% slug api_common_droppableprops %}),\n * and returns an object of type [DroppableHandle]({% slug api_common_droppablehandle %}) when the `ref` is obtained.\n */\n\nexport var Droppable = React.forwardRef(function (props, ref) {\n  var childRef = React.useRef(null);\n  var target = React.useRef(null);\n  var getElement = React.useCallback(function () {\n    return childRef.current && childRef.current.element ? childRef.current.element : childRef.current;\n  }, [childRef]);\n  React.useImperativeHandle(target, function () {\n    return {\n      element: getElement() || undefined\n    };\n  });\n  React.useImperativeHandle(ref, function () {\n    return target.current;\n  });\n  React.useImperativeHandle(props.childRef, function () {\n    return childRef.current;\n  });\n  var handleDragEnter = React.useCallback(function (event) {\n    if (!props.onDragEnter) {\n      return;\n    }\n\n    props.onDragEnter({\n      element: getElement(),\n      target: target.current,\n      event: event\n    });\n  }, [props.onDragEnter, getElement]);\n  var handleDragOver = React.useCallback(function (event) {\n    if (!props.onDragOver) {\n      return;\n    }\n\n    props.onDragOver({\n      element: getElement(),\n      target: target.current,\n      event: event\n    });\n  }, [getElement, props.onDragOver]);\n  var handleDragLeave = React.useCallback(function (event) {\n    if (!props.onDragLeave) {\n      return;\n    }\n\n    props.onDragLeave({\n      element: getElement(),\n      target: target.current,\n      event: event\n    });\n  }, [props.onDragLeave, getElement]);\n  var handleDrop = React.useCallback(function (event) {\n    if (!props.onDrop) {\n      return;\n    }\n\n    props.onDrop({\n      element: getElement(),\n      target: target.current,\n      event: event\n    });\n  }, [props.onDrop, getElement]);\n  useDroppable(childRef, {\n    onDragEnter: handleDragEnter,\n    onDragOver: handleDragOver,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop\n  });\n  return props.children ? React.cloneElement(React.Children.only(props.children), {\n    ref: childRef\n  }) : null;\n});\nDroppable.displayName = 'KendoReactDroppable';","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-common/dist/es/Droppable.js"],"names":["React","useDroppable","Droppable","forwardRef","props","ref","childRef","useRef","target","getElement","useCallback","current","element","useImperativeHandle","undefined","handleDragEnter","event","onDragEnter","handleDragOver","onDragOver","handleDragLeave","onDragLeave","handleDrop","onDrop","children","cloneElement","Children","only","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useDroppable } from './hooks';\n/**\n * Represents the KendoReact Droppable component.\n *\n * Accepts properties of type [DroppableProps]({% slug api_common_droppableprops %}),\n * and returns an object of type [DroppableHandle]({% slug api_common_droppablehandle %}) when the `ref` is obtained.\n */\nexport var Droppable = React.forwardRef(function (props, ref) {\n    var childRef = React.useRef(null);\n    var target = React.useRef(null);\n    var getElement = React.useCallback(function () { return childRef.current && childRef.current.element\n        ? childRef.current.element\n        : childRef.current; }, [childRef]);\n    React.useImperativeHandle(target, function () { return ({ element: getElement() || undefined }); });\n    React.useImperativeHandle(ref, function () { return target.current; });\n    React.useImperativeHandle(props.childRef, function () { return childRef.current; });\n    var handleDragEnter = React.useCallback(function (event) {\n        if (!props.onDragEnter) {\n            return;\n        }\n        props.onDragEnter({\n            element: getElement(),\n            target: target.current,\n            event: event\n        });\n    }, [props.onDragEnter, getElement]);\n    var handleDragOver = React.useCallback(function (event) {\n        if (!props.onDragOver) {\n            return;\n        }\n        props.onDragOver({\n            element: getElement(),\n            target: target.current,\n            event: event\n        });\n    }, [getElement, props.onDragOver]);\n    var handleDragLeave = React.useCallback(function (event) {\n        if (!props.onDragLeave) {\n            return;\n        }\n        props.onDragLeave({\n            element: getElement(),\n            target: target.current,\n            event: event\n        });\n    }, [props.onDragLeave, getElement]);\n    var handleDrop = React.useCallback(function (event) {\n        if (!props.onDrop) {\n            return;\n        }\n        props.onDrop({\n            element: getElement(),\n            target: target.current,\n            event: event\n        });\n    }, [props.onDrop, getElement]);\n    useDroppable(childRef, {\n        onDragEnter: handleDragEnter,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        onDrop: handleDrop\n    });\n    return props.children\n        ? (React.cloneElement(React.Children.only(props.children), { ref: childRef }))\n        : null;\n});\nDroppable.displayName = 'KendoReactDroppable';\n"]},"metadata":{},"sourceType":"module"}