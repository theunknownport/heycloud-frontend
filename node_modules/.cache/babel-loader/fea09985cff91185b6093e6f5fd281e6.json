{"ast":null,"code":"import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames, focusFirstFocusableChild } from '@progress/kendo-react-common';\n/**\n * Represents the [KendoReact AppBarSpacer component]({% slug contentarrangement_appbar %}#toc-defining-spacings).\n * Used to give additional white space between the AppBar sections and provides a way for customizing its width.\n *\n * @example\n * ```jsx\n *\n * const App = () => {\n *   return (\n *       <AppBar>\n *           <AppBarSection>\n *               <span className=\"k-icon k-i-menu\" />\n *           </AppBarSection>\n *\n *           <AppBarSpacer style={{ width: 8 }} />\n *\n *           <AppBarSection>\n *               <h1 className=\"title\">{tc.text} AppBar</h1>\n *           </AppBarSection>\n *\n *           <AppBarSpacer />\n *\n *           <AppBarSection>\n *               <BadgeContainer>\n *                   <span className=\"k-icon k-i-bell\" />\n *                   <Badge themeColor=\"info\" shape=\"dot\" />\n *               </BadgeContainer>\n *           </AppBarSection>\n *      </AppBar>\n *   );\n * };\n *    ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nexport var AppBarSpacer = React.forwardRef(function (props, target) {\n  var children = props.children,\n      className = props.className,\n      style = props.style;\n  var elementRef = React.useRef(null);\n  var focusElement = React.useCallback(function () {\n    if (elementRef.current) {\n      focusFirstFocusableChild(elementRef.current);\n    }\n  }, []);\n  var getImperativeHandle = React.useCallback(function () {\n    return {\n      element: elementRef.current,\n      focus: focusElement\n    };\n  }, [focusElement]);\n  React.useImperativeHandle(target, getImperativeHandle);\n  var spacerClasses = React.useMemo(function () {\n    return classNames('k-appbar-spacer', {\n      'k-appbar-spacer-sized': style && style.width && style.width !== null\n    }, className);\n  }, [className, style]);\n  var spacerStyles = React.useMemo(function () {\n    return {\n      flexBasis: style && style.width ? style.width : undefined\n    };\n  }, [style]);\n  return React.createElement(\"span\", {\n    className: spacerClasses,\n    style: spacerStyles\n  }, children);\n});\nAppBarSpacer.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  style: PropTypes.object\n};\nAppBarSpacer.displayName = 'KendoAppBarSpacer';","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-layout/dist/es/appbar/AppBarSpacer.js"],"names":["React","PropTypes","classNames","focusFirstFocusableChild","AppBarSpacer","forwardRef","props","target","children","className","style","elementRef","useRef","focusElement","useCallback","current","getImperativeHandle","element","focus","useImperativeHandle","spacerClasses","useMemo","width","spacerStyles","flexBasis","undefined","createElement","propTypes","any","string","object","displayName"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SAASC,UAAT,EAAqBC,wBAArB,QAAqD,8BAArD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,YAAY,GAAGJ,KAAK,CAACK,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAChE,MAAIC,QAAQ,GAAGF,KAAK,CAACE,QAArB;AAAA,MAA+BC,SAAS,GAAGH,KAAK,CAACG,SAAjD;AAAA,MAA4DC,KAAK,GAAGJ,KAAK,CAACI,KAA1E;AACA,MAAIC,UAAU,GAAGX,KAAK,CAACY,MAAN,CAAa,IAAb,CAAjB;AACA,MAAIC,YAAY,GAAGb,KAAK,CAACc,WAAN,CAAkB,YAAY;AAC7C,QAAIH,UAAU,CAACI,OAAf,EAAwB;AACpBZ,MAAAA,wBAAwB,CAACQ,UAAU,CAACI,OAAZ,CAAxB;AACH;AACJ,GAJkB,EAIhB,EAJgB,CAAnB;AAKA,MAAIC,mBAAmB,GAAGhB,KAAK,CAACc,WAAN,CAAkB,YAAY;AAAE,WAAQ;AAC9DG,MAAAA,OAAO,EAAEN,UAAU,CAACI,OAD0C;AAE9DG,MAAAA,KAAK,EAAEL;AAFuD,KAAR;AAGrD,GAHqB,EAGnB,CAACA,YAAD,CAHmB,CAA1B;AAIAb,EAAAA,KAAK,CAACmB,mBAAN,CAA0BZ,MAA1B,EAAkCS,mBAAlC;AACA,MAAII,aAAa,GAAGpB,KAAK,CAACqB,OAAN,CAAc,YAAY;AAAE,WAAOnB,UAAU,CAAC,iBAAD,EAAoB;AACjF,+BAAyBQ,KAAK,IAAIA,KAAK,CAACY,KAAf,IAAwBZ,KAAK,CAACY,KAAN,KAAgB;AADgB,KAApB,EAE9Db,SAF8D,CAAjB;AAEhC,GAFI,EAEF,CAACA,SAAD,EAAYC,KAAZ,CAFE,CAApB;AAGA,MAAIa,YAAY,GAAGvB,KAAK,CAACqB,OAAN,CAAc,YAAY;AACzC,WAAO;AACHG,MAAAA,SAAS,EAAEd,KAAK,IAAIA,KAAK,CAACY,KAAf,GAAuBZ,KAAK,CAACY,KAA7B,GAAqCG;AAD7C,KAAP;AAGH,GAJkB,EAIhB,CAACf,KAAD,CAJgB,CAAnB;AAKA,SAAQV,KAAK,CAAC0B,aAAN,CAAoB,MAApB,EAA4B;AAAEjB,IAAAA,SAAS,EAAEW,aAAb;AAA4BV,IAAAA,KAAK,EAAEa;AAAnC,GAA5B,EAA+Ef,QAA/E,CAAR;AACH,CAtByB,CAAnB;AAuBPJ,YAAY,CAACuB,SAAb,GAAyB;AACrBnB,EAAAA,QAAQ,EAAEP,SAAS,CAAC2B,GADC;AAErBnB,EAAAA,SAAS,EAAER,SAAS,CAAC4B,MAFA;AAGrBnB,EAAAA,KAAK,EAAET,SAAS,CAAC6B;AAHI,CAAzB;AAKA1B,YAAY,CAAC2B,WAAb,GAA2B,mBAA3B","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames, focusFirstFocusableChild } from '@progress/kendo-react-common';\n/**\n * Represents the [KendoReact AppBarSpacer component]({% slug contentarrangement_appbar %}#toc-defining-spacings).\n * Used to give additional white space between the AppBar sections and provides a way for customizing its width.\n *\n * @example\n * ```jsx\n *\n * const App = () => {\n *   return (\n *       <AppBar>\n *           <AppBarSection>\n *               <span className=\"k-icon k-i-menu\" />\n *           </AppBarSection>\n *\n *           <AppBarSpacer style={{ width: 8 }} />\n *\n *           <AppBarSection>\n *               <h1 className=\"title\">{tc.text} AppBar</h1>\n *           </AppBarSection>\n *\n *           <AppBarSpacer />\n *\n *           <AppBarSection>\n *               <BadgeContainer>\n *                   <span className=\"k-icon k-i-bell\" />\n *                   <Badge themeColor=\"info\" shape=\"dot\" />\n *               </BadgeContainer>\n *           </AppBarSection>\n *      </AppBar>\n *   );\n * };\n *    ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nexport var AppBarSpacer = React.forwardRef(function (props, target) {\n    var children = props.children, className = props.className, style = props.style;\n    var elementRef = React.useRef(null);\n    var focusElement = React.useCallback(function () {\n        if (elementRef.current) {\n            focusFirstFocusableChild(elementRef.current);\n        }\n    }, []);\n    var getImperativeHandle = React.useCallback(function () { return ({\n        element: elementRef.current,\n        focus: focusElement\n    }); }, [focusElement]);\n    React.useImperativeHandle(target, getImperativeHandle);\n    var spacerClasses = React.useMemo(function () { return classNames('k-appbar-spacer', {\n        'k-appbar-spacer-sized': style && style.width && style.width !== null\n    }, className); }, [className, style]);\n    var spacerStyles = React.useMemo(function () {\n        return {\n            flexBasis: style && style.width ? style.width : undefined\n        };\n    }, [style]);\n    return (React.createElement(\"span\", { className: spacerClasses, style: spacerStyles }, children));\n});\nAppBarSpacer.propTypes = {\n    children: PropTypes.any,\n    className: PropTypes.string,\n    style: PropTypes.object\n};\nAppBarSpacer.displayName = 'KendoAppBarSpacer';\n"]},"metadata":{},"sourceType":"module"}