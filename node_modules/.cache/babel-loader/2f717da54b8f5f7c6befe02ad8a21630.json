{"ast":null,"code":"import { ADD_NODE_FAIL, ADD_NODE_SUCCESS, ADD_REGION_FAIL, ADD_REGION_SUCCESS } from \"./types\";\nimport adminService from \"../services/admin.service\";\nexport const addRegion = (fullName, shortName, proxHost, proxPort, password, proxUser) => dispatch => {\n  return adminService.addRegion(fullName, shortName, proxHost, proxPort, password, proxUser).then(response => {\n    dispatch({\n      type: ADD_REGION_SUCCESS\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = \"Adding region failed!\";\n    dispatch({\n      type: ADD_REGION_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};\nexport const addNode = (nodeName, nodeIP, nodeUser, nodePort, regionID) => dispatch => {\n  return adminService.addNode(nodeName, nodeIP, nodeUser, nodePort, regionID).then(response => {\n    dispatch({\n      type: ADD_NODE_SUCCESS\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = \"Adding node failed!\";\n    dispatch({\n      type: ADD_NODE_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/src/actions/admin.js"],"names":["ADD_NODE_FAIL","ADD_NODE_SUCCESS","ADD_REGION_FAIL","ADD_REGION_SUCCESS","adminService","addRegion","fullName","shortName","proxHost","proxPort","password","proxUser","dispatch","then","response","type","SET_MESSAGE","payload","data","message","Promise","resolve","error","reject","addNode","nodeName","nodeIP","nodeUser","nodePort","regionID"],"mappings":"AAAA,SACIA,aADJ,EAEIC,gBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,QAKO,SALP;AAOA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,SAAX,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoDC,QAApD,KAAkEC,QAAD,IAAc;AACtG,SAAOR,YAAY,CAACC,SAAb,CAAuBC,QAAvB,EAAiCC,SAAjC,EAA4CC,QAA5C,EAAsDC,QAAtD,EAAgEC,QAAhE,EAA0EC,QAA1E,EAAoFE,IAApF,CACJC,QAAD,IAAc;AACZF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAIAS,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEC,WADC;AAEPC,MAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAFhB,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACC,OAAR,EAAP;AACD,GAZI,EAaJC,KAAD,IAAW;AACT,UAAMH,OAAO,GAAG,uBAAhB;AAEAP,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAIAU,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEC,WADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACG,MAAR,EAAP;AACD,GA1BI,CAAP;AA4BD,CA7BM;AA+BP,OAAO,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,MAAX,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuCC,QAAvC,KAAqDjB,QAAD,IAAc;AACrF,SAAOR,YAAY,CAACoB,OAAb,CAAqBC,QAArB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiDC,QAAjD,EAA2DC,QAA3D,EAAqEhB,IAArE,CACJC,QAAD,IAAc;AACZF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAIAW,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEC,WADC;AAEPC,MAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAFhB,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACC,OAAR,EAAP;AACD,GAZI,EAaJC,KAAD,IAAW;AACT,UAAMH,OAAO,GAAG,qBAAhB;AAEAP,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEf;AADC,KAAD,CAAR;AAIAY,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEC,WADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACG,MAAR,EAAP;AACD,GA1BI,CAAP;AA4BD,CA7BI","sourcesContent":["import {\r\n    ADD_NODE_FAIL,\r\n    ADD_NODE_SUCCESS,\r\n    ADD_REGION_FAIL,\r\n    ADD_REGION_SUCCESS\r\n} from \"./types\";\r\n\r\nimport adminService from \"../services/admin.service\";\r\n\r\nexport const addRegion = (fullName, shortName, proxHost, proxPort, password, proxUser) => (dispatch) => {\r\n  return adminService.addRegion(fullName, shortName, proxHost, proxPort, password, proxUser).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: ADD_REGION_SUCCESS,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: response.data.message,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message = \"Adding region failed!\"\r\n\r\n      dispatch({\r\n        type: ADD_REGION_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const addNode = (nodeName, nodeIP, nodeUser, nodePort, regionID) => (dispatch) => {\r\n    return adminService.addNode(nodeName, nodeIP, nodeUser, nodePort, regionID).then(\r\n      (response) => {\r\n        dispatch({\r\n          type: ADD_NODE_SUCCESS,\r\n        });\r\n  \r\n        dispatch({\r\n          type: SET_MESSAGE,\r\n          payload: response.data.message,\r\n        });\r\n  \r\n        return Promise.resolve();\r\n      },\r\n      (error) => {\r\n        const message = \"Adding node failed!\"\r\n  \r\n        dispatch({\r\n          type: ADD_NODE_FAIL,\r\n        });\r\n  \r\n        dispatch({\r\n          type: SET_MESSAGE,\r\n          payload: message,\r\n        });\r\n  \r\n        return Promise.reject();\r\n      }\r\n    );\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}