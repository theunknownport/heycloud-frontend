{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { orderBy as kendoDataQueryOrderBy, filterBy as kendoDataQueryFilterBy } from '@progress/kendo-data-query'; // Gets and sets the children. Returns the children or the re-created item with the new children.\n\nfunction children(item, subItemsField, subItems) {\n  var _a;\n\n  if (subItems) {\n    return __assign(__assign({}, item), (_a = {}, _a[subItemsField] = subItems.length ? __spreadArray([], subItems, true) : undefined, _a));\n  } else {\n    return item && item[subItemsField] ? __spreadArray([], item[subItemsField], true) : [];\n  }\n}\n\nfunction sortChildren(dataItem, sort, subItemsField) {\n  var _a;\n\n  if (dataItem[subItemsField]) {\n    var item = children(dataItem, subItemsField, kendoDataQueryOrderBy(children(dataItem, subItemsField), sort));\n    var subItems = children(item, subItemsField).map(function (root) {\n      return sortChildren(root, sort, subItemsField);\n    });\n    return __assign(__assign({}, item), (_a = {}, _a[subItemsField] = subItems, _a));\n  }\n\n  return dataItem;\n}\n/**\n * Orders the specified tree according to the provided sort descriptors.\n *\n * @param {T[]} data - The data that will be sorted.\n * @param {SortDescriptor[]} descriptors - The descriptors by which the data will be sorted.\n * @param {string} subItemsField - The field which points to the subitems collection of each data item.\n * @returns {T[]} - The sorted data.\n */\n\n\nexport function orderBy(data, descriptors, subItemsField) {\n  var sorted = kendoDataQueryOrderBy(data, descriptors);\n  sorted = sorted.map(function (dataItem) {\n    return sortChildren(dataItem, descriptors, subItemsField);\n  });\n  return sorted;\n}\n\nfunction filterChildren(dataItem, filters, subItemsField) {\n  var subItems = children(dataItem, subItemsField);\n\n  if (subItems && subItems.length) {\n    subItems = subItems.map(function (item) {\n      return filterChildren(item, filters, subItemsField);\n    });\n    var hasChildrenFilter = {\n      operator: function (item) {\n        return Boolean((item[subItemsField] || []).length);\n      }\n    };\n    var filter = {\n      filters: [{\n        filters: filters,\n        logic: 'and'\n      }, hasChildrenFilter],\n      logic: 'or'\n    };\n    var filtered = kendoDataQueryFilterBy(subItems, filter);\n    return children(dataItem, subItemsField, filtered);\n  }\n\n  return dataItem;\n}\n/**\n * Filters the provided data tree according to the specified `Array<FilterDescriptor|CompositeFilterDescriptor>`.\n *\n * @param {T[]} data - The data that will be filtered.\n * @param {FilterDescriptor[]|CompositeFilterDescriptor[]} descriptors - The filter criteria that will be applied.\n * @param {string} subItemsField - The field which points to the subitems collection of each data item.\n * @returns {T[]} - The filtered data.\n */\n\n\nexport function filterBy(data, descriptors, subItemsField) {\n  var _a;\n\n  var filtered = (_a = {}, _a[subItemsField] = __spreadArray([], data, true), _a);\n  filtered = filterChildren(filtered, descriptors, subItemsField);\n  return filtered[subItemsField] || [];\n}","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-data-tools/dist/es/utils/data-operations.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArray","to","from","pack","l","ar","Array","slice","concat","orderBy","kendoDataQueryOrderBy","filterBy","kendoDataQueryFilterBy","children","item","subItemsField","subItems","_a","undefined","sortChildren","dataItem","sort","map","root","data","descriptors","sorted","filterChildren","filters","hasChildrenFilter","operator","Boolean","filter","logic","filtered"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { orderBy as kendoDataQueryOrderBy, filterBy as kendoDataQueryFilterBy } from '@progress/kendo-data-query';\n// Gets and sets the children. Returns the children or the re-created item with the new children.\nfunction children(item, subItemsField, subItems) {\n    var _a;\n    if (subItems) {\n        return __assign(__assign({}, item), (_a = {}, _a[subItemsField] = subItems.length ? __spreadArray([], subItems, true) : undefined, _a));\n    }\n    else {\n        return item && item[subItemsField] ? __spreadArray([], item[subItemsField], true) : [];\n    }\n}\nfunction sortChildren(dataItem, sort, subItemsField) {\n    var _a;\n    if (dataItem[subItemsField]) {\n        var item = children(dataItem, subItemsField, kendoDataQueryOrderBy(children(dataItem, subItemsField), sort));\n        var subItems = children(item, subItemsField).map(function (root) { return sortChildren(root, sort, subItemsField); });\n        return __assign(__assign({}, item), (_a = {}, _a[subItemsField] = subItems, _a));\n    }\n    return dataItem;\n}\n/**\n * Orders the specified tree according to the provided sort descriptors.\n *\n * @param {T[]} data - The data that will be sorted.\n * @param {SortDescriptor[]} descriptors - The descriptors by which the data will be sorted.\n * @param {string} subItemsField - The field which points to the subitems collection of each data item.\n * @returns {T[]} - The sorted data.\n */\nexport function orderBy(data, descriptors, subItemsField) {\n    var sorted = kendoDataQueryOrderBy(data, descriptors);\n    sorted = sorted.map(function (dataItem) { return sortChildren(dataItem, descriptors, subItemsField); });\n    return sorted;\n}\nfunction filterChildren(dataItem, filters, subItemsField) {\n    var subItems = children(dataItem, subItemsField);\n    if (subItems && subItems.length) {\n        subItems = subItems.map(function (item) { return filterChildren(item, filters, subItemsField); });\n        var hasChildrenFilter = { operator: function (item) { return Boolean((item[subItemsField] || []).length); } };\n        var filter = {\n            filters: [\n                { filters: filters, logic: 'and' },\n                hasChildrenFilter\n            ],\n            logic: 'or'\n        };\n        var filtered = kendoDataQueryFilterBy(subItems, filter);\n        return children(dataItem, subItemsField, filtered);\n    }\n    return dataItem;\n}\n/**\n * Filters the provided data tree according to the specified `Array<FilterDescriptor|CompositeFilterDescriptor>`.\n *\n * @param {T[]} data - The data that will be filtered.\n * @param {FilterDescriptor[]|CompositeFilterDescriptor[]} descriptors - The filter criteria that will be applied.\n * @param {string} subItemsField - The field which points to the subitems collection of each data item.\n * @returns {T[]} - The filtered data.\n */\nexport function filterBy(data, descriptors, subItemsField) {\n    var _a;\n    var filtered = (_a = {}, _a[subItemsField] = __spreadArray([], data, true), _a);\n    filtered = filterChildren(filtered, descriptors, subItemsField);\n    return filtered[subItemsField] || [];\n}\n"]},"metadata":{},"sourceType":"module"}