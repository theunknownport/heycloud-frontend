{"ast":null,"code":"var INVALIDMAXFILESIZE = 'invalidMaxFileSize';\nvar INVALIDMINFILESIZE = 'invalidMinFileSize';\nvar INVALIDFILEEXTENSION = 'invalidFileExtension';\n\nvar validateFileExtension = function (file, allowedExtensions) {\n  if (allowedExtensions.length > 0) {\n    if (allowedExtensions.indexOf((file.extension || '').toLowerCase()) < 0) {\n      file.validationErrors = file.validationErrors || [];\n\n      if (file.validationErrors.indexOf(INVALIDFILEEXTENSION) < 0) {\n        file.validationErrors.push(INVALIDFILEEXTENSION);\n      }\n    }\n  }\n};\n\nvar validateFileSize = function (file, minFileSize, maxFileSize) {\n  if (minFileSize !== 0 && (file.size || 0) < minFileSize) {\n    file.validationErrors = file.validationErrors || [];\n\n    if (file.validationErrors.indexOf(INVALIDMINFILESIZE) < 0) {\n      file.validationErrors.push(INVALIDMINFILESIZE);\n    }\n  }\n\n  if (maxFileSize !== 0 && (file.size || 0) > maxFileSize) {\n    file.validationErrors = file.validationErrors || [];\n\n    if (file.validationErrors.indexOf(INVALIDMAXFILESIZE) < 0) {\n      file.validationErrors.push(INVALIDMAXFILESIZE);\n    }\n  }\n};\n\nvar parseAllowedExtensions = function (extensions) {\n  var allowedExtensions = extensions.map(function (ext) {\n    var parsedExt = ext.substring(0, 1) === '.' ? ext : '.' + ext;\n    return parsedExt.toLowerCase();\n  });\n  return allowedExtensions;\n};\n\nvar validateFiles = function (files, restrictionInfo) {\n  var allowedExtensions = parseAllowedExtensions(restrictionInfo.allowedExtensions || []);\n  var maxFileSize = restrictionInfo.maxFileSize || 0;\n  var minFileSize = restrictionInfo.minFileSize || 0;\n  var i;\n\n  for (i = 0; i < files.length; i++) {\n    validateFileExtension(files[i], allowedExtensions);\n    validateFileSize(files[i], minFileSize, maxFileSize);\n  }\n};\n\nexport default {\n  validateFiles: validateFiles\n};","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-upload/dist/es/utils/validationUtils.js"],"names":["INVALIDMAXFILESIZE","INVALIDMINFILESIZE","INVALIDFILEEXTENSION","validateFileExtension","file","allowedExtensions","length","indexOf","extension","toLowerCase","validationErrors","push","validateFileSize","minFileSize","maxFileSize","size","parseAllowedExtensions","extensions","map","ext","parsedExt","substring","validateFiles","files","restrictionInfo","i"],"mappings":"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","sourcesContent":["var INVALIDMAXFILESIZE = 'invalidMaxFileSize';\nvar INVALIDMINFILESIZE = 'invalidMinFileSize';\nvar INVALIDFILEEXTENSION = 'invalidFileExtension';\nvar validateFileExtension = function (file, allowedExtensions) {\n    if (allowedExtensions.length > 0) {\n        if (allowedExtensions.indexOf((file.extension || '').toLowerCase()) < 0) {\n            file.validationErrors = file.validationErrors || [];\n            if (file.validationErrors.indexOf(INVALIDFILEEXTENSION) < 0) {\n                file.validationErrors.push(INVALIDFILEEXTENSION);\n            }\n        }\n    }\n};\nvar validateFileSize = function (file, minFileSize, maxFileSize) {\n    if (minFileSize !== 0 && (file.size || 0) < minFileSize) {\n        file.validationErrors = file.validationErrors || [];\n        if (file.validationErrors.indexOf(INVALIDMINFILESIZE) < 0) {\n            file.validationErrors.push(INVALIDMINFILESIZE);\n        }\n    }\n    if (maxFileSize !== 0 && (file.size || 0) > maxFileSize) {\n        file.validationErrors = file.validationErrors || [];\n        if (file.validationErrors.indexOf(INVALIDMAXFILESIZE) < 0) {\n            file.validationErrors.push(INVALIDMAXFILESIZE);\n        }\n    }\n};\nvar parseAllowedExtensions = function (extensions) {\n    var allowedExtensions = extensions.map(function (ext) {\n        var parsedExt = (ext.substring(0, 1) === '.') ? ext : ('.' + ext);\n        return parsedExt.toLowerCase();\n    });\n    return allowedExtensions;\n};\nvar validateFiles = function (files, restrictionInfo) {\n    var allowedExtensions = parseAllowedExtensions(restrictionInfo.allowedExtensions || []);\n    var maxFileSize = restrictionInfo.maxFileSize || 0;\n    var minFileSize = restrictionInfo.minFileSize || 0;\n    var i;\n    for (i = 0; i < files.length; i++) {\n        validateFileExtension(files[i], allowedExtensions);\n        validateFileSize(files[i], minFileSize, maxFileSize);\n    }\n};\nexport default {\n    validateFiles: validateFiles\n};\n"]},"metadata":{},"sourceType":"module"}