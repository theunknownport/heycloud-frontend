{"ast":null,"code":"var _jsxFileName = \"/home/finn/Documents/heycloud-frontend/heycloud-frontend/src/common/AuthVerify.js\";\nimport React from \"react\";\nimport { history } from '../helpers/history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst parseJwt = token => {\n  try {\n    return jwt.decode(token);\n  } catch (e) {\n    return null;\n  }\n};\n\nconst AuthVerify = props => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  console.log(user);\n\n  if (user) {\n    console.log(\"heallowoigwioeh\");\n    const decodedJwt = parseJwt(user.access_token);\n\n    if (decodedJwt.exp * 1000 < Date.now()) {\n      props.logOut();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_c = AuthVerify;\nexport default AuthVerify;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthVerify\");","map":{"version":3,"sources":["/home/finn/Documents/heycloud-frontend/heycloud-frontend/src/common/AuthVerify.js"],"names":["React","history","parseJwt","token","jwt","decode","e","AuthVerify","props","user","JSON","parse","localStorage","getItem","console","log","decodedJwt","access_token","exp","Date","now","logOut"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,MAAI;AACF,WAAOC,GAAG,CAACC,MAAJ,CAAWF,KAAX,CAAP;AACD,GAFD,CAEE,OAAOG,CAAP,EAAU;AACV,WAAO,IAAP;AACD;AACF,CAND;;AAQA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AACA,MAAIA,IAAJ,EAAU;AACRK,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAMC,UAAU,GAAGd,QAAQ,CAACO,IAAI,CAACQ,YAAN,CAA3B;;AAEA,QAAID,UAAU,CAACE,GAAX,GAAiB,IAAjB,GAAwBC,IAAI,CAACC,GAAL,EAA5B,EAAwC;AACtCZ,MAAAA,KAAK,CAACa,MAAN;AACD;AACF;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAbD;;KAAMd,U;AAeN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { history } from '../helpers/history';\n\nconst parseJwt = (token) => {\n  try {\n    return jwt.decode(token);\n  } catch (e) {\n    return null;\n  }\n};\n\nconst AuthVerify = (props) => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  console.log(user);\n  if (user) {\n    console.log(\"heallowoigwioeh\");\n    const decodedJwt = parseJwt(user.access_token);\n\n    if (decodedJwt.exp * 1000 < Date.now()) {\n      props.logOut();\n    }\n  }\n\n  return <div></div>;\n};\n\nexport default AuthVerify;"]},"metadata":{},"sourceType":"module"}