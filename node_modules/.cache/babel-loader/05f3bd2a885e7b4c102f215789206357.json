{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * @hidden\n */\n\n\nvar update = function (arr, idx, value) {\n  return __spreadArray(__spreadArray([], arr.slice(0, idx + 1), true), arr.slice(idx + 1).map(function (x) {\n    return x + value;\n  }), true);\n};\n/**\n * @hidden\n */\n\n\nvar RowHeightService =\n/** @class */\nfunction () {\n  function RowHeightService(total, rowHeight, detailRowHeight) {\n    if (total === void 0) {\n      total = 0;\n    }\n\n    this.total = total;\n    this.rowHeight = rowHeight;\n    this.detailRowHeight = detailRowHeight;\n    this.offsets = [];\n    this.heights = [];\n    var agg = 0;\n\n    for (var idx = 0; idx < total; idx++) {\n      this.offsets.push(agg);\n      agg += rowHeight;\n      this.heights.push(rowHeight);\n    }\n  }\n\n  RowHeightService.prototype.height = function (rowIndex) {\n    return this.heights[rowIndex];\n  };\n\n  RowHeightService.prototype.expandDetail = function (rowIndex) {\n    if (this.height(rowIndex) === this.rowHeight) {\n      this.updateRowHeight(rowIndex, this.detailRowHeight);\n    }\n  };\n\n  RowHeightService.prototype.collapseDetail = function (rowIndex) {\n    if (this.height(rowIndex) > this.rowHeight) {\n      this.updateRowHeight(rowIndex, this.detailRowHeight * -1);\n    }\n  };\n\n  RowHeightService.prototype.index = function (position) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      if (position === this.offsets[i]) {\n        return i;\n      }\n\n      if (position < this.offsets[i]) {\n        return i - 1;\n      }\n    }\n\n    return this.total - 1;\n  };\n\n  RowHeightService.prototype.offset = function (rowIndex) {\n    return this.offsets[rowIndex];\n  };\n\n  RowHeightService.prototype.totalHeight = function () {\n    return this.heights.reduce(function (prev, curr) {\n      return prev + curr;\n    }, 0);\n  };\n\n  RowHeightService.prototype.updateRowHeight = function (rowIndex, value) {\n    this.heights[rowIndex] += value;\n    this.offsets = update(this.offsets, rowIndex, value);\n  };\n\n  return RowHeightService;\n}();\n\nexport { RowHeightService };","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-dateinputs/dist/es/virtualization/services/RowHeightService.js"],"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","update","arr","idx","value","map","x","RowHeightService","total","rowHeight","detailRowHeight","offsets","heights","agg","push","height","rowIndex","expandDetail","updateRowHeight","collapseDetail","index","position","offset","totalHeight","reduce","prev","curr"],"mappings":"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","sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * @hidden\n */\nvar update = function (arr, idx, value) { return (__spreadArray(__spreadArray([], arr.slice(0, idx + 1), true), (arr.slice(idx + 1).map(function (x) { return x + value; })), true)); };\n/**\n * @hidden\n */\nvar RowHeightService = /** @class */ (function () {\n    function RowHeightService(total, rowHeight, detailRowHeight) {\n        if (total === void 0) { total = 0; }\n        this.total = total;\n        this.rowHeight = rowHeight;\n        this.detailRowHeight = detailRowHeight;\n        this.offsets = [];\n        this.heights = [];\n        var agg = 0;\n        for (var idx = 0; idx < total; idx++) {\n            this.offsets.push(agg);\n            agg += rowHeight;\n            this.heights.push(rowHeight);\n        }\n    }\n    RowHeightService.prototype.height = function (rowIndex) {\n        return this.heights[rowIndex];\n    };\n    RowHeightService.prototype.expandDetail = function (rowIndex) {\n        if (this.height(rowIndex) === this.rowHeight) {\n            this.updateRowHeight(rowIndex, this.detailRowHeight);\n        }\n    };\n    RowHeightService.prototype.collapseDetail = function (rowIndex) {\n        if (this.height(rowIndex) > this.rowHeight) {\n            this.updateRowHeight(rowIndex, this.detailRowHeight * -1);\n        }\n    };\n    RowHeightService.prototype.index = function (position) {\n        for (var i = 0; i < this.offsets.length; i++) {\n            if (position === this.offsets[i]) {\n                return i;\n            }\n            if (position < this.offsets[i]) {\n                return i - 1;\n            }\n        }\n        return this.total - 1;\n    };\n    RowHeightService.prototype.offset = function (rowIndex) {\n        return this.offsets[rowIndex];\n    };\n    RowHeightService.prototype.totalHeight = function () {\n        return this.heights.reduce(function (prev, curr) { return prev + curr; }, 0);\n    };\n    RowHeightService.prototype.updateRowHeight = function (rowIndex, value) {\n        this.heights[rowIndex] += value;\n        this.offsets = update(this.offsets, rowIndex, value);\n    };\n    return RowHeightService;\n}());\nexport { RowHeightService };\n"]},"metadata":{},"sourceType":"module"}