{"ast":null,"code":"import * as React from 'react';\nimport { useCollection, COLLECTION_ACTION, useControlledState } from '../hooks';\nimport { DragContext, DropContext, DragsContext, DropsContext } from './context';\n/**\n * The `DragAndDrop` component is required for the `droppable` functionality to work properly.\n *\n * It is used internally to synchronize the `drag` and `drop` functionalities.\n * Accepts properties of type [DragAndDropProps]({% slug api_common_draganddropprops %}).\n */\n\nexport var DragAndDrop = function (props) {\n  var _a = useControlledState(null, undefined),\n      drag = _a[0],\n      setDrag = _a[1];\n\n  var _b = useControlledState(null, undefined),\n      drop = _b[0],\n      setDrop = _b[1];\n\n  var _c = useCollection([]),\n      drags = _c[0],\n      dispatchDrags = _c[1];\n\n  var _d = useCollection([]),\n      drops = _d[0],\n      dispatchDrops = _d[1];\n\n  var registerDrag = function (item) {\n    dispatchDrags({\n      type: COLLECTION_ACTION.add,\n      item: item\n    });\n  };\n\n  var deregisterDrag = function (item) {\n    dispatchDrags({\n      type: COLLECTION_ACTION.remove,\n      item: item\n    });\n  };\n\n  var registerDrop = function (item) {\n    dispatchDrops({\n      type: COLLECTION_ACTION.add,\n      item: item\n    });\n  };\n\n  var deregisterDrop = function (item) {\n    dispatchDrops({\n      type: COLLECTION_ACTION.remove,\n      item: item\n    });\n  };\n\n  return React.createElement(DragContext.Provider, {\n    value: [drag, setDrag]\n  }, React.createElement(DropContext.Provider, {\n    value: [drop, setDrop]\n  }, React.createElement(DragsContext.Provider, {\n    value: [drags, registerDrag, deregisterDrag]\n  }, React.createElement(DropsContext.Provider, {\n    value: [drops, registerDrop, deregisterDrop]\n  }, props.children))));\n};\nDragAndDrop.displayName = 'KendoReactDragAndDrop';","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-common/dist/es/drag-n-drop/index.js"],"names":["React","useCollection","COLLECTION_ACTION","useControlledState","DragContext","DropContext","DragsContext","DropsContext","DragAndDrop","props","_a","undefined","drag","setDrag","_b","drop","setDrop","_c","drags","dispatchDrags","_d","drops","dispatchDrops","registerDrag","item","type","add","deregisterDrag","remove","registerDrop","deregisterDrop","createElement","Provider","value","children","displayName"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,EAAwBC,iBAAxB,EAA2CC,kBAA3C,QAAqE,UAArE;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,EAAiDC,YAAjD,QAAqE,WAArE;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,WAAW,GAAG,UAAUC,KAAV,EAAiB;AACtC,MAAIC,EAAE,GAAGP,kBAAkB,CAAC,IAAD,EAAOQ,SAAP,CAA3B;AAAA,MAA8CC,IAAI,GAAGF,EAAE,CAAC,CAAD,CAAvD;AAAA,MAA4DG,OAAO,GAAGH,EAAE,CAAC,CAAD,CAAxE;;AACA,MAAII,EAAE,GAAGX,kBAAkB,CAAC,IAAD,EAAOQ,SAAP,CAA3B;AAAA,MAA8CI,IAAI,GAAGD,EAAE,CAAC,CAAD,CAAvD;AAAA,MAA4DE,OAAO,GAAGF,EAAE,CAAC,CAAD,CAAxE;;AACA,MAAIG,EAAE,GAAGhB,aAAa,CAAC,EAAD,CAAtB;AAAA,MAA4BiB,KAAK,GAAGD,EAAE,CAAC,CAAD,CAAtC;AAAA,MAA2CE,aAAa,GAAGF,EAAE,CAAC,CAAD,CAA7D;;AACA,MAAIG,EAAE,GAAGnB,aAAa,CAAC,EAAD,CAAtB;AAAA,MAA4BoB,KAAK,GAAGD,EAAE,CAAC,CAAD,CAAtC;AAAA,MAA2CE,aAAa,GAAGF,EAAE,CAAC,CAAD,CAA7D;;AACA,MAAIG,YAAY,GAAG,UAAUC,IAAV,EAAgB;AAC/BL,IAAAA,aAAa,CAAC;AACVM,MAAAA,IAAI,EAAEvB,iBAAiB,CAACwB,GADd;AAEVF,MAAAA,IAAI,EAAEA;AAFI,KAAD,CAAb;AAIH,GALD;;AAMA,MAAIG,cAAc,GAAG,UAAUH,IAAV,EAAgB;AACjCL,IAAAA,aAAa,CAAC;AACVM,MAAAA,IAAI,EAAEvB,iBAAiB,CAAC0B,MADd;AAEVJ,MAAAA,IAAI,EAAEA;AAFI,KAAD,CAAb;AAIH,GALD;;AAMA,MAAIK,YAAY,GAAG,UAAUL,IAAV,EAAgB;AAC/BF,IAAAA,aAAa,CAAC;AACVG,MAAAA,IAAI,EAAEvB,iBAAiB,CAACwB,GADd;AAEVF,MAAAA,IAAI,EAAEA;AAFI,KAAD,CAAb;AAIH,GALD;;AAMA,MAAIM,cAAc,GAAG,UAAUN,IAAV,EAAgB;AACjCF,IAAAA,aAAa,CAAC;AACVG,MAAAA,IAAI,EAAEvB,iBAAiB,CAAC0B,MADd;AAEVJ,MAAAA,IAAI,EAAEA;AAFI,KAAD,CAAb;AAIH,GALD;;AAMA,SAAQxB,KAAK,CAAC+B,aAAN,CAAoB3B,WAAW,CAAC4B,QAAhC,EAA0C;AAAEC,IAAAA,KAAK,EAAE,CAACrB,IAAD,EAAOC,OAAP;AAAT,GAA1C,EACJb,KAAK,CAAC+B,aAAN,CAAoB1B,WAAW,CAAC2B,QAAhC,EAA0C;AAAEC,IAAAA,KAAK,EAAE,CAAClB,IAAD,EAAOC,OAAP;AAAT,GAA1C,EACIhB,KAAK,CAAC+B,aAAN,CAAoBzB,YAAY,CAAC0B,QAAjC,EAA2C;AAAEC,IAAAA,KAAK,EAAE,CAACf,KAAD,EAAQK,YAAR,EAAsBI,cAAtB;AAAT,GAA3C,EACI3B,KAAK,CAAC+B,aAAN,CAAoBxB,YAAY,CAACyB,QAAjC,EAA2C;AAAEC,IAAAA,KAAK,EAAE,CAACZ,KAAD,EAAQQ,YAAR,EAAsBC,cAAtB;AAAT,GAA3C,EAA6FrB,KAAK,CAACyB,QAAnG,CADJ,CADJ,CADI,CAAR;AAIH,CAjCM;AAkCP1B,WAAW,CAAC2B,WAAZ,GAA0B,uBAA1B","sourcesContent":["import * as React from 'react';\nimport { useCollection, COLLECTION_ACTION, useControlledState } from '../hooks';\nimport { DragContext, DropContext, DragsContext, DropsContext } from './context';\n/**\n * The `DragAndDrop` component is required for the `droppable` functionality to work properly.\n *\n * It is used internally to synchronize the `drag` and `drop` functionalities.\n * Accepts properties of type [DragAndDropProps]({% slug api_common_draganddropprops %}).\n */\nexport var DragAndDrop = function (props) {\n    var _a = useControlledState(null, undefined), drag = _a[0], setDrag = _a[1];\n    var _b = useControlledState(null, undefined), drop = _b[0], setDrop = _b[1];\n    var _c = useCollection([]), drags = _c[0], dispatchDrags = _c[1];\n    var _d = useCollection([]), drops = _d[0], dispatchDrops = _d[1];\n    var registerDrag = function (item) {\n        dispatchDrags({\n            type: COLLECTION_ACTION.add,\n            item: item\n        });\n    };\n    var deregisterDrag = function (item) {\n        dispatchDrags({\n            type: COLLECTION_ACTION.remove,\n            item: item\n        });\n    };\n    var registerDrop = function (item) {\n        dispatchDrops({\n            type: COLLECTION_ACTION.add,\n            item: item\n        });\n    };\n    var deregisterDrop = function (item) {\n        dispatchDrops({\n            type: COLLECTION_ACTION.remove,\n            item: item\n        });\n    };\n    return (React.createElement(DragContext.Provider, { value: [drag, setDrag] },\n        React.createElement(DropContext.Provider, { value: [drop, setDrop] },\n            React.createElement(DragsContext.Provider, { value: [drags, registerDrag, deregisterDrag] },\n                React.createElement(DropsContext.Provider, { value: [drops, registerDrop, deregisterDrop] }, props.children)))));\n};\nDragAndDrop.displayName = 'KendoReactDragAndDrop';\n"]},"metadata":{},"sourceType":"module"}