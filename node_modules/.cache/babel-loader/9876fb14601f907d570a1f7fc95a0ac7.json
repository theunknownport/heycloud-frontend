{"ast":null,"code":"import { RequestType, initFetchObservable, initXhrObservable } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nimport { isAllowedRequestUrl } from './rumEventsCollection/resource/resourceUtils';\nimport { startTracer } from './tracing/tracer';\nvar nextRequestIndex = 1;\nexport function startRequestCollection(lifeCycle, configuration, session) {\n  var tracer = startTracer(configuration, session);\n  trackXhr(lifeCycle, configuration, tracer);\n  trackFetch(lifeCycle, configuration, tracer);\n}\nexport function trackXhr(lifeCycle, configuration, tracer) {\n  var subscription = initXhrObservable().subscribe(function (rawContext) {\n    var context = rawContext;\n\n    if (!isAllowedRequestUrl(configuration, context.url)) {\n      return;\n    }\n\n    switch (context.state) {\n      case 'start':\n        tracer.traceXhr(context, context.xhr);\n        context.requestIndex = getNextRequestIndex();\n        lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {\n          requestIndex: context.requestIndex\n        });\n        break;\n\n      case 'complete':\n        tracer.clearTracingIfNeeded(context);\n        lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {\n          duration: context.duration,\n          method: context.method,\n          requestIndex: context.requestIndex,\n          responseText: context.responseText,\n          spanId: context.spanId,\n          startClocks: context.startClocks,\n          status: context.status,\n          traceId: context.traceId,\n          type: RequestType.XHR,\n          url: context.url,\n          xhr: context.xhr\n        });\n        break;\n    }\n  });\n  return {\n    stop: function () {\n      return subscription.unsubscribe();\n    }\n  };\n}\nexport function trackFetch(lifeCycle, configuration, tracer) {\n  var subscription = initFetchObservable().subscribe(function (rawContext) {\n    var context = rawContext;\n\n    if (!isAllowedRequestUrl(configuration, context.url)) {\n      return;\n    }\n\n    switch (context.state) {\n      case 'start':\n        tracer.traceFetch(context);\n        context.requestIndex = getNextRequestIndex();\n        lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {\n          requestIndex: context.requestIndex\n        });\n        break;\n\n      case 'complete':\n        tracer.clearTracingIfNeeded(context);\n        lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {\n          duration: context.duration,\n          method: context.method,\n          requestIndex: context.requestIndex,\n          responseText: context.responseText,\n          responseType: context.responseType,\n          spanId: context.spanId,\n          startClocks: context.startClocks,\n          status: context.status,\n          traceId: context.traceId,\n          type: RequestType.FETCH,\n          url: context.url,\n          response: context.response,\n          init: context.init,\n          input: context.input\n        });\n        break;\n    }\n  });\n  return {\n    stop: function () {\n      return subscription.unsubscribe();\n    }\n  };\n}\n\nfunction getNextRequestIndex() {\n  var result = nextRequestIndex;\n  nextRequestIndex += 1;\n  return result;\n}","map":{"version":3,"sources":["../../src/domain/requestCollection.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { RequestType, initFetchObservable, initXhrObservable, } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nimport { isAllowedRequestUrl } from './rumEventsCollection/resource/resourceUtils';\nimport { startTracer } from './tracing/tracer';\nvar nextRequestIndex = 1;\nexport function startRequestCollection(lifeCycle, configuration, session) {\n    var tracer = startTracer(configuration, session);\n    trackXhr(lifeCycle, configuration, tracer);\n    trackFetch(lifeCycle, configuration, tracer);\n}\nexport function trackXhr(lifeCycle, configuration, tracer) {\n    var subscription = initXhrObservable().subscribe(function (rawContext) {\n        var context = rawContext;\n        if (!isAllowedRequestUrl(configuration, context.url)) {\n            return;\n        }\n        switch (context.state) {\n            case 'start':\n                tracer.traceXhr(context, context.xhr);\n                context.requestIndex = getNextRequestIndex();\n                lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {\n                    requestIndex: context.requestIndex,\n                });\n                break;\n            case 'complete':\n                tracer.clearTracingIfNeeded(context);\n                lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {\n                    duration: context.duration,\n                    method: context.method,\n                    requestIndex: context.requestIndex,\n                    responseText: context.responseText,\n                    spanId: context.spanId,\n                    startClocks: context.startClocks,\n                    status: context.status,\n                    traceId: context.traceId,\n                    type: RequestType.XHR,\n                    url: context.url,\n                    xhr: context.xhr,\n                });\n                break;\n        }\n    });\n    return { stop: function () { return subscription.unsubscribe(); } };\n}\nexport function trackFetch(lifeCycle, configuration, tracer) {\n    var subscription = initFetchObservable().subscribe(function (rawContext) {\n        var context = rawContext;\n        if (!isAllowedRequestUrl(configuration, context.url)) {\n            return;\n        }\n        switch (context.state) {\n            case 'start':\n                tracer.traceFetch(context);\n                context.requestIndex = getNextRequestIndex();\n                lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {\n                    requestIndex: context.requestIndex,\n                });\n                break;\n            case 'complete':\n                tracer.clearTracingIfNeeded(context);\n                lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {\n                    duration: context.duration,\n                    method: context.method,\n                    requestIndex: context.requestIndex,\n                    responseText: context.responseText,\n                    responseType: context.responseType,\n                    spanId: context.spanId,\n                    startClocks: context.startClocks,\n                    status: context.status,\n                    traceId: context.traceId,\n                    type: RequestType.FETCH,\n                    url: context.url,\n                    response: context.response,\n                    init: context.init,\n                    input: context.input,\n                });\n                break;\n        }\n    });\n    return { stop: function () { return subscription.unsubscribe(); } };\n}\nfunction getNextRequestIndex() {\n    var result = nextRequestIndex;\n    nextRequestIndex += 1;\n    return result;\n}\n//# sourceMappingURL=requestCollection.js.map"]},"metadata":{},"sourceType":"module"}