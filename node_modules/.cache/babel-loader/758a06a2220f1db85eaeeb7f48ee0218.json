{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar DEFAULT_NUMBER = 1111111.1111111;\nvar MAX_DECIMAL = 0.31111111111111117;\nvar MIN_DECIMAL = 1;\nvar ONE_NUMBER = 1;\nvar ZERO_NUMBER = 0;\nvar DIGITS_REGEX = /\\d/;\nvar MAX_PRECISION = 15;\n/**\n * @hidden\n */\n\nexport var getInitialState = function () {\n  return {\n    eventValue: null,\n    prevLooseValue: '',\n    currentLooseValue: '',\n    focused: false,\n    selectionStart: undefined,\n    selectionEnd: undefined,\n    decimalSelect: false,\n    valueIsCorrected: false,\n    valueIsOutOfRange: false\n  };\n};\n/**\n * @hidden\n */\n\nexport var getStateOrPropsValue = function (value, stateValue) {\n  return value !== undefined ? value : stateValue;\n};\n/**\n * @hidden\n */\n\nexport var formatValue = function (value, format, intlService) {\n  if (value === null && value === undefined) {\n    return '';\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  return intlService.formatNumber(value, format);\n};\n/**\n * @hidden\n */\n\nexport var fractionLength = function (value) {\n  return (String(value).split('.')[1] || '').length;\n};\n/**\n * @hidden\n */\n\nvar maxFractionLength = function (value1, value2) {\n  return Math.max(fractionLength(value1), fractionLength(value2));\n};\n/**\n * @hidden\n */\n\n\nexport var limitPrecision = function (precision) {\n  return Math.min(precision, MAX_PRECISION);\n};\n/**\n * @hidden\n */\n\nexport var toFixedPrecision = function (value, precision) {\n  var maxPrecision = limitPrecision(precision);\n  return parseFloat(value.toFixed(maxPrecision));\n};\n/**\n * @hidden\n */\n\nexport var increaseValue = function (value, newState, step, min, max, format, intlService) {\n  var maxPrecision = maxFractionLength(value || 0, step || 0);\n  var increasedValue = rangeValue(toFixedPrecision((value || 0) + (step || 0), maxPrecision), min, max);\n  newState.eventValue = increasedValue;\n  newState.currentLooseValue = formatValue(increasedValue, format, intlService);\n  newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\n\nexport var decreaseValue = function (value, newState, step, min, max, format, intlService) {\n  var maxPrecision = maxFractionLength(value || 0, step || 0);\n  var decreasedValue = rangeValue(toFixedPrecision((value || 0) - (step || 0), maxPrecision), min, max);\n  newState.eventValue = decreasedValue;\n  newState.currentLooseValue = formatValue(decreasedValue, format, intlService);\n  newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\n\nexport var rangeValue = function (value, min, max) {\n  if (value == null) {\n    return value;\n  }\n\n  if (!(value > 1 || value < 1 || value === 1)) {\n    // null, undefined or NaN\n    return null;\n  }\n\n  if (max !== undefined && min !== undefined && max < min) {\n    return null;\n  }\n\n  if (max !== undefined && value > max) {\n    value = max;\n  }\n\n  if (min !== undefined && value < min) {\n    value = min;\n  }\n\n  return value;\n};\n/**\n * @hidden\n */\n\nexport var getMaxCursorPosition = function (nextValue, formatInfo) {\n  var formatSuffixIndex = formatInfo.findIndex(function (_a) {\n    var _ = _a[0],\n        currSuffix = _a[1];\n    return Boolean(currSuffix) && nextValue.indexOf(currSuffix) === nextValue.length - currSuffix.length;\n  });\n\n  if (formatSuffixIndex === -1) {\n    return -1;\n  }\n\n  var suffix = formatInfo[formatSuffixIndex][1];\n  return nextValue.length - suffix.length;\n};\n/**\n * @hidden\n */\n\nexport var getMinCursorPosition = function (nextValue, formatInfo) {\n  var formatPrefixIndex = formatInfo.findIndex(function (_a) {\n    var currPrefix = _a[0],\n        _ = _a[1];\n    return Boolean(currPrefix) && nextValue.indexOf(currPrefix) === 0;\n  });\n\n  if (formatPrefixIndex === -1) {\n    return -1;\n  }\n\n  var prefix = formatInfo[formatPrefixIndex][0];\n  return prefix.length;\n};\n/**\n * @hidden\n */\n\nexport var rangeSelection = function (nextLooseValue, formatInfo, newState) {\n  var maxPosition = getMaxCursorPosition(nextLooseValue, formatInfo);\n\n  if (maxPosition !== -1 && newState.selectionStart > maxPosition) {\n    newState.selectionStart = newState.selectionEnd = maxPosition;\n    return;\n  }\n\n  if (newState.selectionStart > nextLooseValue.length) {\n    newState.selectionStart = newState.selectionEnd = nextLooseValue.length;\n  }\n\n  var minPosition = getMinCursorPosition(nextLooseValue, formatInfo);\n\n  if (minPosition !== -1 && newState.selectionStart < minPosition) {\n    newState.selectionStart = newState.selectionEnd = minPosition;\n  }\n\n  if (newState.selectionStart === -1) {\n    newState.selectionStart = newState.selectionEnd = 0;\n  }\n};\n/**\n * @hidden\n */\n\nexport var setSelection = function (newState, newIndex, nextLooseValue, formatInfo) {\n  newState.selectionStart = newState.selectionEnd = newIndex;\n  rangeSelection(nextLooseValue, formatInfo, newState);\n};\n/**\n * @hidden\n */\n\nexport var setInvalid = function (newState, format, formatInfo, intlService) {\n  newState.eventValue = intlService.parseNumber(newState.prevLooseValue, format);\n  newState.currentLooseValue = newState.prevLooseValue;\n  newState.valueIsCorrected = true;\n  setSelection(newState, newState.selectionStart, newState.currentLooseValue, formatInfo);\n};\n/**\n * @hidden\n */\n\nexport var isMinusSymbolAdded = function (newState, symbols) {\n  var newText = String(newState.currentLooseValue);\n  var oldText = String(newState.prevLooseValue);\n  return newText.split(symbols.minusSign).length !== oldText.split(symbols.minusSign).length && newText.length === oldText.length + symbols.minusSign.length;\n};\n/**\n * @hidden\n */\n\nexport var isMinusSymbolRemoved = function (newState, symbols) {\n  var newText = String(newState.currentLooseValue);\n  var oldText = String(newState.prevLooseValue);\n  return newText.indexOf(symbols.minusSign) === -1 && oldText.indexOf(symbols.minusSign) !== -1;\n};\n/**\n * @hidden\n */\n\nexport var isDecimalDuplicated = function (newState, symbols) {\n  var newText = String(newState.currentLooseValue);\n  return newText.split(symbols.decimal).length > 2;\n};\n/**\n * @hidden\n */\n\nexport var getFormatPrefixSufix = function (format, intlService) {\n  var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format);\n  var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format);\n  var zeroResult = intlService.formatNumber(ZERO_NUMBER, format);\n  var oneResult = intlService.formatNumber(ONE_NUMBER, format);\n  var positivePrefix = getPrefix(positiveResult);\n  var negativePrefix = getPrefix(negativeResult);\n  var zeroPrefix = getPrefix(zeroResult);\n  var onePrefix = getPrefix(oneResult);\n  var positiveSuffix = getSuffix(positiveResult);\n  var negativeSuffix = getSuffix(negativeResult);\n  var zeroSuffix = getSuffix(zeroResult);\n  var oneSuffix = getSuffix(oneResult);\n  return {\n    positiveInfo: [positivePrefix, positiveSuffix],\n    negativeInfo: [negativePrefix, negativeSuffix],\n    zeroInfo: [zeroPrefix, zeroSuffix],\n    oneInfo: [onePrefix, oneSuffix]\n  };\n};\n/**\n * @hidden\n */\n\nexport var getFormatSymbols = function (format, intlService) {\n  var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format);\n  var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format);\n  var zeroResult = intlService.formatNumber(ZERO_NUMBER, format);\n  var oneResult = intlService.formatNumber(ONE_NUMBER, format);\n  var symbols = intlService.numberSymbols();\n  var sanitizeRegex = new RegExp(\"[\\\\d\\\\\".concat(symbols.decimal).concat(symbols.group, \"]\"), 'g');\n  var resultWithDuplicates = [positiveResult, negativeResult, zeroResult, oneResult].map(function (result) {\n    return result.replace(sanitizeRegex, '');\n  }).join('');\n  return resultWithDuplicates.split('').filter(function (x, n, s) {\n    return s.indexOf(x) === n;\n  }).join('');\n};\n/**\n * @hidden\n */\n\nexport var getInitialPosition = function (nextLooseValue, symbols) {\n  var decimalIdex = nextLooseValue.indexOf(symbols.decimal);\n\n  if (decimalIdex > -1) {\n    return decimalIdex;\n  }\n\n  return getLastNumberIndex(nextLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\n\nexport var reverseString = function (str) {\n  return str.split('').reverse().join('');\n};\n/**\n * @hidden\n */\n\nexport var getLastNumberIndex = function (currentLooseValue, inputRegex) {\n  return currentLooseValue.length - reverseString(currentLooseValue).search(inputRegex);\n};\n/**\n * @hidden\n */\n\nexport var getPrefix = function (str) {\n  return str.split(str[str.search(DIGITS_REGEX)])[0];\n};\n/**\n * @hidden\n */\n\nexport var getSuffix = function (str) {\n  var reversedString = reverseString(str);\n  return reverseString(reversedString.split(reversedString[reversedString.search(DIGITS_REGEX)])[0]);\n};\n/**\n * @hidden\n */\n\nexport var getFirstNumberIndex = function (prevLooseValue, inputRegex) {\n  return prevLooseValue.search(inputRegex);\n};\n/**\n * @hidden\n */\n\nexport var getDecimalCount = function (value, decimal) {\n  var currentDecimalPlace = value.indexOf(decimal);\n  return currentDecimalPlace > -1 ? value.length - currentDecimalPlace - 1 : 0;\n};\n/**\n * @hidden\n */\n\nexport var changeBasedSelection = function (currentValue, nextValue, selectionPosition, isDelete, sanitizeRegex) {\n  var isCurrentLeadingZero = currentValue.replace(sanitizeRegex, '')[0] === '0';\n  var isNextLeadingZero = nextValue.replace(sanitizeRegex, '')[0] === '0';\n\n  if (isCurrentLeadingZero && !isNextLeadingZero) {\n    return selectionPosition - 1;\n  }\n\n  if (isNextLeadingZero && isDelete) {\n    return selectionPosition + 1;\n  }\n\n  var numberCounter = 0;\n\n  for (var idx = 0; idx < selectionPosition; idx++) {\n    if (DIGITS_REGEX.test(currentValue.charAt(idx))) {\n      numberCounter++;\n    }\n  }\n\n  var newSelection = 0;\n\n  while (numberCounter > 0 && nextValue.length > newSelection) {\n    if (DIGITS_REGEX.test(nextValue.charAt(newSelection))) {\n      numberCounter--;\n    }\n\n    newSelection++;\n  }\n\n  return newSelection;\n};\n/**\n * @hidden\n */\n\nexport var sanitizeNumber = function (state, format, intlService) {\n  var newState = __assign({}, state);\n\n  var prevLooseValue = newState.prevLooseValue;\n  var symbols = intlService.numberSymbols();\n  var restrictedSymbols = getFormatSymbols(format, intlService);\n  var currentLooseValueAsString = String(newState.currentLooseValue);\n  var prevLooseValueAsString = String(prevLooseValue);\n  var sanitizeRegex = new RegExp(\"[^\\\\d\\\\\".concat(symbols.decimal, \"]\"), 'g');\n  var sanitizeGroupRegex = new RegExp(\"[^\\\\d\\\\\".concat(symbols.decimal, \"\\\\\").concat(symbols.group, \"]\"), 'g');\n  var allSymbolsRegex = new RegExp(\"[\\\\d\\\\\".concat(symbols.decimal, \"\\\\\").concat(symbols.group, \"]\"));\n  var sanitizedString = currentLooseValueAsString.replace(sanitizeRegex, '');\n  var numberStart = getFirstNumberIndex(currentLooseValueAsString, DIGITS_REGEX);\n  var numberEnd = numberStart === -1 ? -1 : getLastNumberIndex(currentLooseValueAsString, DIGITS_REGEX);\n  var decimalIndex = currentLooseValueAsString.indexOf(symbols.decimal);\n  var sanitizedFormattedString = (currentLooseValueAsString.substring(0, numberStart) + currentLooseValueAsString.substring(numberStart, numberEnd).replace(sanitizeGroupRegex, '') + currentLooseValueAsString.substring(numberEnd, currentLooseValueAsString.length)).split('').filter(function (s) {\n    return restrictedSymbols.indexOf(s) !== -1 || s.search(allSymbolsRegex) !== -1;\n  }).join('');\n  var formattedMax = intlService.formatNumber(MAX_DECIMAL, format).replace(sanitizeRegex, '');\n  var maxDecimalIndex = formattedMax.indexOf(symbols.decimal);\n  var maxDecimalCount = maxDecimalIndex > -1 ? formattedMax.length - maxDecimalIndex - 1 : 0;\n  var formattedMin = intlService.formatNumber(MIN_DECIMAL, format).replace(sanitizeRegex, '');\n  var minDecimalIndex = formattedMin.indexOf(symbols.decimal);\n  var minDecimalCount = minDecimalIndex > -1 ? formattedMin.length - minDecimalIndex - 1 : 0;\n\n  var _a = getFormatPrefixSufix(format, intlService),\n      positiveInfo = _a.positiveInfo,\n      negativeInfo = _a.negativeInfo,\n      zeroInfo = _a.zeroInfo,\n      oneInfo = _a.oneInfo;\n\n  var formatInfo = [positiveInfo, negativeInfo, zeroInfo, oneInfo];\n  var isFormatContainPrefixSuffix = formatInfo.findIndex(function (info) {\n    return info.findIndex(function (nestedInfo) {\n      return Boolean(nestedInfo);\n    }) !== -1;\n  }) !== 1;\n  var isDelete = currentLooseValueAsString.length > 0 && currentLooseValueAsString.length < prevLooseValueAsString.length;\n  var isPercentFormat = typeof format === 'string' && format[0] === 'p' && currentLooseValueAsString && currentLooseValueAsString.indexOf(symbols.percentSign) === -1;\n\n  if (!newState.isPaste) {\n    // 1. Empty input\n    if (currentLooseValueAsString === '') {\n      newState.eventValue = null;\n      newState.currentLooseValue = '';\n      return newState;\n    } // 2. Check is minus sign\n\n\n    if (newState.currentLooseValue === symbols.minusSign && intlService.formatNumber(-0, format) !== prevLooseValueAsString) {\n      newState.eventValue = -0;\n      newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n      setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols), newState.currentLooseValue, formatInfo);\n      return newState;\n    } // 3. Minus sign toggle\n\n\n    if (isMinusSymbolAdded(newState, symbols)) {\n      var nextValue = intlService.parseNumber(prevLooseValue, format);\n      newState.eventValue = -(nextValue !== null ? nextValue : 0);\n      newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n      var currentNumberStart = getFirstNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n      var oldNumberStart = getFirstNumberIndex(prevLooseValueAsString, DIGITS_REGEX);\n      setSelection(newState, newState.selectionEnd - 1 + (currentNumberStart - oldNumberStart), newState.currentLooseValue, formatInfo);\n      return newState;\n    }\n\n    if (isMinusSymbolRemoved(newState, symbols)) {\n      newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n      setSelection(newState, newState.selectionStart, newState.currentLooseValue, formatInfo);\n      return newState;\n    } // 4. Check is decimal symbol\n\n\n    if (newState.currentLooseValue === symbols.decimal) {\n      newState.eventValue = 0;\n      var valueCandidate = formatValue(newState.eventValue, format, intlService);\n\n      if (minDecimalCount === 0 && maxDecimalCount > 0) {\n        var currentLastNumberIndex = getLastNumberIndex(valueCandidate, DIGITS_REGEX);\n        newState.currentLooseValue = valueCandidate.substring(0, currentLastNumberIndex) + symbols.decimal + valueCandidate.substring(currentLastNumberIndex);\n      } else {\n        newState.currentLooseValue = valueCandidate;\n      }\n\n      setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols) + 1, newState.currentLooseValue, formatInfo);\n      return newState;\n    } // 5. Duplicate decimal - it's possible only as trailing\n\n\n    if (isDecimalDuplicated(newState, symbols)) {\n      setInvalid(newState, format, formatInfo, intlService);\n      return newState;\n    } // 6. Percent format\n\n\n    if (isPercentFormat) {\n      newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format) / 100;\n      newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n      return newState;\n    } // 7. More than 15 numeric symbols\n\n\n    var numericSymbols = String(newState.currentLooseValue).replace(/[^\\d]/g, '');\n\n    if (numericSymbols.length > MAX_PRECISION) {\n      setInvalid(newState, format, formatInfo, intlService);\n      return newState;\n    } // 8. Check prefix / suffix for modifications\n\n\n    if (sanitizedString !== currentLooseValueAsString && currentLooseValueAsString && isFormatContainPrefixSuffix) {\n      var formatInfoIndex = formatInfo.findIndex(function (_a) {\n        var prefix = _a[0],\n            suffix = _a[1];\n        var prefixIndex = currentLooseValueAsString.indexOf(prefix);\n        var suffixIndex = currentLooseValueAsString.indexOf(suffix);\n        var prefixFound = prefixIndex === 0;\n        var suffixFound = suffixIndex === currentLooseValueAsString.length - suffix.length;\n        var prefixGap = prefixIndex + prefix.length !== numberStart && numberStart !== -1 && currentLooseValueAsString[prefixIndex + prefix.length] !== symbols.decimal;\n        var suffixGap = suffixIndex !== numberEnd && numberEnd !== -1 && currentLooseValueAsString[suffixIndex - 1] !== symbols.decimal;\n\n        if (prefix && suffix) {\n          if (prefixGap || suffixGap) {\n            return false;\n          }\n\n          return prefixFound && suffixFound;\n        }\n\n        if (prefix) {\n          if (prefixGap) {\n            return false;\n          }\n\n          return prefixFound;\n        }\n\n        if (suffix) {\n          if (suffixGap) {\n            return false;\n          }\n\n          return suffixFound;\n        }\n\n        return false;\n      });\n\n      if (formatInfoIndex === -1) {\n        setInvalid(newState, format, formatInfo, intlService);\n        return newState;\n      }\n    } // 9. Value ending on decimal separator (here as decimal might be typed inside format)\n\n\n    if (sanitizedString[sanitizedString.length - 1] === symbols.decimal && maxDecimalCount > 0) {\n      newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format);\n      newState.currentLooseValue = sanitizedFormattedString;\n      return newState;\n    } // 10. prevent deleting decimal and group symbols\n\n\n    if (newState.currentLooseValue && prevLooseValue) {\n      var isSpecialSymbolDeleted = (restrictedSymbols + symbols.decimal + symbols.group).split('').findIndex(function (s) {\n        if (currentLooseValueAsString.split('').filter(function (x) {\n          return x === s;\n        }).length < prevLooseValueAsString.split('').filter(function (x) {\n          return x === s;\n        }).length && currentLooseValueAsString.length + 1 === prevLooseValueAsString.length) {\n          if (s === symbols.decimal && getDecimalCount(prevLooseValueAsString.replace(sanitizeRegex, ''), symbols.decimal) === 0) {\n            return false;\n          }\n\n          return true;\n        }\n\n        return false;\n      }) > -1;\n\n      if (isSpecialSymbolDeleted) {\n        newState.eventValue = intlService.parseNumber(state.prevLooseValue, format);\n        newState.currentLooseValue = state.prevLooseValue;\n        return newState;\n      }\n    }\n\n    var currentDecimalCount = getDecimalCount(sanitizedString, symbols.decimal);\n    var endsOnDecimal = sanitizedString[sanitizedString.length - 1] === '0'; // 11. Deleting more decimals than allowed\n\n    if (isDelete && endsOnDecimal && currentDecimalCount < minDecimalCount) {\n      newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n      newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n      return newState;\n    } // 12. Ending on zero OR more decimals than allowed\n\n\n    if (currentDecimalCount > 0) {\n      var valueUntillDecimal = currentLooseValueAsString.substring(0, decimalIndex);\n\n      if (endsOnDecimal && (!valueUntillDecimal || prevLooseValueAsString.indexOf(valueUntillDecimal) !== 0)) {\n        // ending on zero but typing before decimal separator\n        newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n        var nextLooseValue = formatValue(newState.eventValue, format, intlService);\n        setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);\n        newState.currentLooseValue = nextLooseValue;\n        return newState;\n      }\n\n      if (currentDecimalCount > maxDecimalCount) {\n        // typing more symbols than format allows\n        var looseDecimalPlace = currentLooseValueAsString.indexOf(symbols.decimal);\n        var result = currentLooseValueAsString.substring(0, looseDecimalPlace) + currentLooseValueAsString.substring(looseDecimalPlace, looseDecimalPlace + 1 + maxDecimalCount) + currentLooseValueAsString.substring(numberEnd, String(newState.currentLooseValue).length);\n        newState.eventValue = intlService.parseNumber(result, format);\n        newState.currentLooseValue = result;\n        setSelection(newState, newState.selectionStart, result, formatInfo);\n        return newState;\n      }\n\n      if (minDecimalCount !== maxDecimalCount && currentDecimalCount <= maxDecimalCount && endsOnDecimal) {\n        // adding trailing zeroes\n        newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n        newState.currentLooseValue = sanitizedFormattedString;\n        return newState;\n      }\n\n      if (currentDecimalCount < minDecimalCount) {\n        // deleting more decimals than allowed\n        newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n        newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n        return newState;\n      }\n    }\n  } // X. All other values should be parsed\n\n\n  newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n\n  if (isPercentFormat) {\n    newState.eventValue = newState.eventValue / 100;\n  }\n\n  if (typeof newState.eventValue === 'number') {\n    var nextLooseValue = formatValue(newState.eventValue, format, intlService); // First digit add\n\n    if (currentLooseValueAsString.length === 1) {\n      setSelection(newState, getInitialPosition(nextLooseValue, symbols), nextLooseValue, formatInfo);\n    } else {\n      setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);\n    }\n\n    newState.currentLooseValue = nextLooseValue;\n  } else {\n    // Case when deleting last number\n    newState.currentLooseValue = formatValue(intlService.parseNumber(sanitizedString), format, intlService);\n  }\n\n  return newState;\n};","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-inputs/dist/es/numerictextbox/utils/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","DEFAULT_NUMBER","MAX_DECIMAL","MIN_DECIMAL","ONE_NUMBER","ZERO_NUMBER","DIGITS_REGEX","MAX_PRECISION","getInitialState","eventValue","prevLooseValue","currentLooseValue","focused","selectionStart","undefined","selectionEnd","decimalSelect","valueIsCorrected","valueIsOutOfRange","getStateOrPropsValue","value","stateValue","formatValue","format","intlService","formatNumber","fractionLength","String","split","maxFractionLength","value1","value2","Math","max","limitPrecision","precision","min","toFixedPrecision","maxPrecision","parseFloat","toFixed","increaseValue","newState","step","increasedValue","rangeValue","getLastNumberIndex","decreaseValue","decreasedValue","getMaxCursorPosition","nextValue","formatInfo","formatSuffixIndex","findIndex","_a","_","currSuffix","Boolean","indexOf","suffix","getMinCursorPosition","formatPrefixIndex","currPrefix","prefix","rangeSelection","nextLooseValue","maxPosition","minPosition","setSelection","newIndex","setInvalid","parseNumber","isMinusSymbolAdded","symbols","newText","oldText","minusSign","isMinusSymbolRemoved","isDecimalDuplicated","decimal","getFormatPrefixSufix","positiveResult","negativeResult","zeroResult","oneResult","positivePrefix","getPrefix","negativePrefix","zeroPrefix","onePrefix","positiveSuffix","getSuffix","negativeSuffix","zeroSuffix","oneSuffix","positiveInfo","negativeInfo","zeroInfo","oneInfo","getFormatSymbols","numberSymbols","sanitizeRegex","RegExp","concat","group","resultWithDuplicates","map","result","replace","join","filter","x","getInitialPosition","decimalIdex","reverseString","str","reverse","inputRegex","search","reversedString","getFirstNumberIndex","getDecimalCount","currentDecimalPlace","changeBasedSelection","currentValue","selectionPosition","isDelete","isCurrentLeadingZero","isNextLeadingZero","numberCounter","idx","test","charAt","newSelection","sanitizeNumber","state","restrictedSymbols","currentLooseValueAsString","prevLooseValueAsString","sanitizeGroupRegex","allSymbolsRegex","sanitizedString","numberStart","numberEnd","decimalIndex","sanitizedFormattedString","substring","formattedMax","maxDecimalIndex","maxDecimalCount","formattedMin","minDecimalIndex","minDecimalCount","isFormatContainPrefixSuffix","info","nestedInfo","isPercentFormat","percentSign","isPaste","currentNumberStart","oldNumberStart","valueCandidate","currentLastNumberIndex","numericSymbols","formatInfoIndex","prefixIndex","suffixIndex","prefixFound","suffixFound","prefixGap","suffixGap","isSpecialSymbolDeleted","currentDecimalCount","endsOnDecimal","valueUntillDecimal","looseDecimalPlace"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar DEFAULT_NUMBER = 1111111.1111111;\nvar MAX_DECIMAL = 0.31111111111111117;\nvar MIN_DECIMAL = 1;\nvar ONE_NUMBER = 1;\nvar ZERO_NUMBER = 0;\nvar DIGITS_REGEX = /\\d/;\nvar MAX_PRECISION = 15;\n/**\n * @hidden\n */\nexport var getInitialState = function () { return ({\n    eventValue: null,\n    prevLooseValue: '',\n    currentLooseValue: '',\n    focused: false,\n    selectionStart: undefined,\n    selectionEnd: undefined,\n    decimalSelect: false,\n    valueIsCorrected: false,\n    valueIsOutOfRange: false\n}); };\n/**\n * @hidden\n */\nexport var getStateOrPropsValue = function (value, stateValue) {\n    return value !== undefined ? value : stateValue;\n};\n/**\n * @hidden\n */\nexport var formatValue = function (value, format, intlService) {\n    if (value === null && value === undefined) {\n        return '';\n    }\n    if (typeof value === 'string') {\n        return value;\n    }\n    return intlService.formatNumber(value, format);\n};\n/**\n * @hidden\n */\nexport var fractionLength = function (value) {\n    return (String(value).split('.')[1] || '').length;\n};\n/**\n * @hidden\n */\nvar maxFractionLength = function (value1, value2) {\n    return Math.max(fractionLength(value1), fractionLength(value2));\n};\n/**\n * @hidden\n */\nexport var limitPrecision = function (precision) { return Math.min(precision, MAX_PRECISION); };\n/**\n * @hidden\n */\nexport var toFixedPrecision = function (value, precision) {\n    var maxPrecision = limitPrecision(precision);\n    return parseFloat(value.toFixed(maxPrecision));\n};\n/**\n * @hidden\n */\nexport var increaseValue = function (value, newState, step, min, max, format, intlService) {\n    var maxPrecision = maxFractionLength(value || 0, step || 0);\n    var increasedValue = rangeValue(toFixedPrecision((value || 0) + (step || 0), maxPrecision), min, max);\n    newState.eventValue = increasedValue;\n    newState.currentLooseValue = formatValue(increasedValue, format, intlService);\n    newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\nexport var decreaseValue = function (value, newState, step, min, max, format, intlService) {\n    var maxPrecision = maxFractionLength(value || 0, step || 0);\n    var decreasedValue = rangeValue(toFixedPrecision((value || 0) - (step || 0), maxPrecision), min, max);\n    newState.eventValue = decreasedValue;\n    newState.currentLooseValue = formatValue(decreasedValue, format, intlService);\n    newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\nexport var rangeValue = function (value, min, max) {\n    if (value == null) {\n        return value;\n    }\n    if (!(value > 1 || value < 1 || value === 1)) {\n        // null, undefined or NaN\n        return null;\n    }\n    if (max !== undefined && min !== undefined && max < min) {\n        return null;\n    }\n    if (max !== undefined && value > max) {\n        value = max;\n    }\n    if (min !== undefined && value < min) {\n        value = min;\n    }\n    return value;\n};\n/**\n * @hidden\n */\nexport var getMaxCursorPosition = function (nextValue, formatInfo) {\n    var formatSuffixIndex = formatInfo.findIndex(function (_a) {\n        var _ = _a[0], currSuffix = _a[1];\n        return Boolean(currSuffix) && nextValue.indexOf(currSuffix) === nextValue.length - currSuffix.length;\n    });\n    if (formatSuffixIndex === -1) {\n        return -1;\n    }\n    var suffix = formatInfo[formatSuffixIndex][1];\n    return nextValue.length - suffix.length;\n};\n/**\n * @hidden\n */\nexport var getMinCursorPosition = function (nextValue, formatInfo) {\n    var formatPrefixIndex = formatInfo.findIndex(function (_a) {\n        var currPrefix = _a[0], _ = _a[1];\n        return Boolean(currPrefix) && nextValue.indexOf(currPrefix) === 0;\n    });\n    if (formatPrefixIndex === -1) {\n        return -1;\n    }\n    var prefix = formatInfo[formatPrefixIndex][0];\n    return prefix.length;\n};\n/**\n * @hidden\n */\nexport var rangeSelection = function (nextLooseValue, formatInfo, newState) {\n    var maxPosition = getMaxCursorPosition(nextLooseValue, formatInfo);\n    if (maxPosition !== -1 && newState.selectionStart > maxPosition) {\n        newState.selectionStart = newState.selectionEnd = maxPosition;\n        return;\n    }\n    if (newState.selectionStart > nextLooseValue.length) {\n        newState.selectionStart = newState.selectionEnd = nextLooseValue.length;\n    }\n    var minPosition = getMinCursorPosition(nextLooseValue, formatInfo);\n    if (minPosition !== -1 && newState.selectionStart < minPosition) {\n        newState.selectionStart = newState.selectionEnd = minPosition;\n    }\n    if (newState.selectionStart === -1) {\n        newState.selectionStart = newState.selectionEnd = 0;\n    }\n};\n/**\n * @hidden\n */\nexport var setSelection = function (newState, newIndex, nextLooseValue, formatInfo) {\n    newState.selectionStart = newState.selectionEnd = newIndex;\n    rangeSelection(nextLooseValue, formatInfo, newState);\n};\n/**\n * @hidden\n */\nexport var setInvalid = function (newState, format, formatInfo, intlService) {\n    newState.eventValue = intlService.parseNumber(newState.prevLooseValue, format);\n    newState.currentLooseValue = newState.prevLooseValue;\n    newState.valueIsCorrected = true;\n    setSelection(newState, newState.selectionStart, newState.currentLooseValue, formatInfo);\n};\n/**\n * @hidden\n */\nexport var isMinusSymbolAdded = function (newState, symbols) {\n    var newText = String(newState.currentLooseValue);\n    var oldText = String(newState.prevLooseValue);\n    return (newText.split(symbols.minusSign).length !== oldText.split(symbols.minusSign).length &&\n        newText.length === oldText.length + symbols.minusSign.length);\n};\n/**\n * @hidden\n */\nexport var isMinusSymbolRemoved = function (newState, symbols) {\n    var newText = String(newState.currentLooseValue);\n    var oldText = String(newState.prevLooseValue);\n    return (newText.indexOf(symbols.minusSign) === -1 && oldText.indexOf(symbols.minusSign) !== -1);\n};\n/**\n * @hidden\n */\nexport var isDecimalDuplicated = function (newState, symbols) {\n    var newText = String(newState.currentLooseValue);\n    return newText.split(symbols.decimal).length > 2;\n};\n/**\n * @hidden\n */\nexport var getFormatPrefixSufix = function (format, intlService) {\n    var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format);\n    var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format);\n    var zeroResult = intlService.formatNumber(ZERO_NUMBER, format);\n    var oneResult = intlService.formatNumber(ONE_NUMBER, format);\n    var positivePrefix = getPrefix(positiveResult);\n    var negativePrefix = getPrefix(negativeResult);\n    var zeroPrefix = getPrefix(zeroResult);\n    var onePrefix = getPrefix(oneResult);\n    var positiveSuffix = getSuffix(positiveResult);\n    var negativeSuffix = getSuffix(negativeResult);\n    var zeroSuffix = getSuffix(zeroResult);\n    var oneSuffix = getSuffix(oneResult);\n    return {\n        positiveInfo: [positivePrefix, positiveSuffix],\n        negativeInfo: [negativePrefix, negativeSuffix],\n        zeroInfo: [zeroPrefix, zeroSuffix],\n        oneInfo: [onePrefix, oneSuffix]\n    };\n};\n/**\n * @hidden\n */\nexport var getFormatSymbols = function (format, intlService) {\n    var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format);\n    var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format);\n    var zeroResult = intlService.formatNumber(ZERO_NUMBER, format);\n    var oneResult = intlService.formatNumber(ONE_NUMBER, format);\n    var symbols = intlService.numberSymbols();\n    var sanitizeRegex = new RegExp(\"[\\\\d\\\\\".concat(symbols.decimal).concat(symbols.group, \"]\"), 'g');\n    var resultWithDuplicates = [positiveResult, negativeResult, zeroResult, oneResult]\n        .map(function (result) { return result.replace(sanitizeRegex, ''); })\n        .join('');\n    return resultWithDuplicates\n        .split('')\n        .filter(function (x, n, s) { return s.indexOf(x) === n; })\n        .join('');\n};\n/**\n * @hidden\n */\nexport var getInitialPosition = function (nextLooseValue, symbols) {\n    var decimalIdex = nextLooseValue.indexOf(symbols.decimal);\n    if (decimalIdex > -1) {\n        return decimalIdex;\n    }\n    return getLastNumberIndex(nextLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\nexport var reverseString = function (str) {\n    return str.split('').reverse().join('');\n};\n/**\n * @hidden\n */\nexport var getLastNumberIndex = function (currentLooseValue, inputRegex) {\n    return currentLooseValue.length - reverseString(currentLooseValue).search(inputRegex);\n};\n/**\n * @hidden\n */\nexport var getPrefix = function (str) {\n    return str.split(str[str.search(DIGITS_REGEX)])[0];\n};\n/**\n * @hidden\n */\nexport var getSuffix = function (str) {\n    var reversedString = reverseString(str);\n    return reverseString(reversedString.split(reversedString[reversedString.search(DIGITS_REGEX)])[0]);\n};\n/**\n * @hidden\n */\nexport var getFirstNumberIndex = function (prevLooseValue, inputRegex) {\n    return prevLooseValue.search(inputRegex);\n};\n/**\n * @hidden\n */\nexport var getDecimalCount = function (value, decimal) {\n    var currentDecimalPlace = value.indexOf(decimal);\n    return currentDecimalPlace > -1 ? value.length - currentDecimalPlace - 1 : 0;\n};\n/**\n * @hidden\n */\nexport var changeBasedSelection = function (currentValue, nextValue, selectionPosition, isDelete, sanitizeRegex) {\n    var isCurrentLeadingZero = currentValue.replace(sanitizeRegex, '')[0] === '0';\n    var isNextLeadingZero = nextValue.replace(sanitizeRegex, '')[0] === '0';\n    if (isCurrentLeadingZero && !isNextLeadingZero) {\n        return selectionPosition - 1;\n    }\n    if (isNextLeadingZero && isDelete) {\n        return selectionPosition + 1;\n    }\n    var numberCounter = 0;\n    for (var idx = 0; idx < selectionPosition; idx++) {\n        if (DIGITS_REGEX.test(currentValue.charAt(idx))) {\n            numberCounter++;\n        }\n    }\n    var newSelection = 0;\n    while (numberCounter > 0 && nextValue.length > newSelection) {\n        if (DIGITS_REGEX.test(nextValue.charAt(newSelection))) {\n            numberCounter--;\n        }\n        newSelection++;\n    }\n    return newSelection;\n};\n/**\n * @hidden\n */\nexport var sanitizeNumber = function (state, format, intlService) {\n    var newState = __assign({}, state);\n    var prevLooseValue = newState.prevLooseValue;\n    var symbols = intlService.numberSymbols();\n    var restrictedSymbols = getFormatSymbols(format, intlService);\n    var currentLooseValueAsString = String(newState.currentLooseValue);\n    var prevLooseValueAsString = String(prevLooseValue);\n    var sanitizeRegex = new RegExp(\"[^\\\\d\\\\\".concat(symbols.decimal, \"]\"), 'g');\n    var sanitizeGroupRegex = new RegExp(\"[^\\\\d\\\\\".concat(symbols.decimal, \"\\\\\").concat(symbols.group, \"]\"), 'g');\n    var allSymbolsRegex = new RegExp(\"[\\\\d\\\\\".concat(symbols.decimal, \"\\\\\").concat(symbols.group, \"]\"));\n    var sanitizedString = currentLooseValueAsString.replace(sanitizeRegex, '');\n    var numberStart = getFirstNumberIndex(currentLooseValueAsString, DIGITS_REGEX);\n    var numberEnd = numberStart === -1 ? -1 : getLastNumberIndex(currentLooseValueAsString, DIGITS_REGEX);\n    var decimalIndex = currentLooseValueAsString.indexOf(symbols.decimal);\n    var sanitizedFormattedString = (currentLooseValueAsString.substring(0, numberStart) +\n        currentLooseValueAsString.substring(numberStart, numberEnd).replace(sanitizeGroupRegex, '') +\n        currentLooseValueAsString.substring(numberEnd, currentLooseValueAsString.length))\n        .split('')\n        .filter(function (s) { return restrictedSymbols.indexOf(s) !== -1 || s.search(allSymbolsRegex) !== -1; })\n        .join('');\n    var formattedMax = intlService.formatNumber(MAX_DECIMAL, format).replace(sanitizeRegex, '');\n    var maxDecimalIndex = formattedMax.indexOf(symbols.decimal);\n    var maxDecimalCount = maxDecimalIndex > -1 ? formattedMax.length - maxDecimalIndex - 1 : 0;\n    var formattedMin = intlService.formatNumber(MIN_DECIMAL, format).replace(sanitizeRegex, '');\n    var minDecimalIndex = formattedMin.indexOf(symbols.decimal);\n    var minDecimalCount = minDecimalIndex > -1 ? formattedMin.length - minDecimalIndex - 1 : 0;\n    var _a = getFormatPrefixSufix(format, intlService), positiveInfo = _a.positiveInfo, negativeInfo = _a.negativeInfo, zeroInfo = _a.zeroInfo, oneInfo = _a.oneInfo;\n    var formatInfo = [positiveInfo, negativeInfo, zeroInfo, oneInfo];\n    var isFormatContainPrefixSuffix = formatInfo.findIndex(function (info) { return info.findIndex(function (nestedInfo) { return Boolean(nestedInfo); }) !== -1; }) !== 1;\n    var isDelete = currentLooseValueAsString.length > 0 && currentLooseValueAsString.length < prevLooseValueAsString.length;\n    var isPercentFormat = typeof format === 'string' &&\n        format[0] === 'p' &&\n        currentLooseValueAsString &&\n        currentLooseValueAsString.indexOf(symbols.percentSign) === -1;\n    if (!newState.isPaste) {\n        // 1. Empty input\n        if (currentLooseValueAsString === '') {\n            newState.eventValue = null;\n            newState.currentLooseValue = '';\n            return newState;\n        }\n        // 2. Check is minus sign\n        if (newState.currentLooseValue === symbols.minusSign && intlService.formatNumber(-0, format) !== prevLooseValueAsString) {\n            newState.eventValue = -0;\n            newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n            setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols), newState.currentLooseValue, formatInfo);\n            return newState;\n        }\n        // 3. Minus sign toggle\n        if (isMinusSymbolAdded(newState, symbols)) {\n            var nextValue = intlService.parseNumber(prevLooseValue, format);\n            newState.eventValue = -(nextValue !== null ? nextValue : 0);\n            newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n            var currentNumberStart = getFirstNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n            var oldNumberStart = getFirstNumberIndex(prevLooseValueAsString, DIGITS_REGEX);\n            setSelection(newState, newState.selectionEnd - 1 + (currentNumberStart - oldNumberStart), newState.currentLooseValue, formatInfo);\n            return newState;\n        }\n        if (isMinusSymbolRemoved(newState, symbols)) {\n            newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n            setSelection(newState, newState.selectionStart, newState.currentLooseValue, formatInfo);\n            return newState;\n        }\n        // 4. Check is decimal symbol\n        if (newState.currentLooseValue === symbols.decimal) {\n            newState.eventValue = 0;\n            var valueCandidate = formatValue(newState.eventValue, format, intlService);\n            if (minDecimalCount === 0 && maxDecimalCount > 0) {\n                var currentLastNumberIndex = getLastNumberIndex(valueCandidate, DIGITS_REGEX);\n                newState.currentLooseValue = valueCandidate.substring(0, currentLastNumberIndex) +\n                    symbols.decimal +\n                    valueCandidate.substring(currentLastNumberIndex);\n            }\n            else {\n                newState.currentLooseValue = valueCandidate;\n            }\n            setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols) + 1, newState.currentLooseValue, formatInfo);\n            return newState;\n        }\n        // 5. Duplicate decimal - it's possible only as trailing\n        if (isDecimalDuplicated(newState, symbols)) {\n            setInvalid(newState, format, formatInfo, intlService);\n            return newState;\n        }\n        // 6. Percent format\n        if (isPercentFormat) {\n            newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format) / 100;\n            newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n            return newState;\n        }\n        // 7. More than 15 numeric symbols\n        var numericSymbols = String(newState.currentLooseValue).replace(/[^\\d]/g, '');\n        if (numericSymbols.length > MAX_PRECISION) {\n            setInvalid(newState, format, formatInfo, intlService);\n            return newState;\n        }\n        // 8. Check prefix / suffix for modifications\n        if (sanitizedString !== currentLooseValueAsString &&\n            currentLooseValueAsString &&\n            isFormatContainPrefixSuffix) {\n            var formatInfoIndex = formatInfo.findIndex(function (_a) {\n                var prefix = _a[0], suffix = _a[1];\n                var prefixIndex = currentLooseValueAsString.indexOf(prefix);\n                var suffixIndex = currentLooseValueAsString.indexOf(suffix);\n                var prefixFound = prefixIndex === 0;\n                var suffixFound = suffixIndex === currentLooseValueAsString.length - suffix.length;\n                var prefixGap = prefixIndex + prefix.length !== numberStart &&\n                    numberStart !== -1 &&\n                    currentLooseValueAsString[prefixIndex + prefix.length] !== symbols.decimal;\n                var suffixGap = suffixIndex !== numberEnd &&\n                    numberEnd !== -1 &&\n                    currentLooseValueAsString[suffixIndex - 1] !== symbols.decimal;\n                if (prefix && suffix) {\n                    if (prefixGap || suffixGap) {\n                        return false;\n                    }\n                    return prefixFound && suffixFound;\n                }\n                if (prefix) {\n                    if (prefixGap) {\n                        return false;\n                    }\n                    return prefixFound;\n                }\n                if (suffix) {\n                    if (suffixGap) {\n                        return false;\n                    }\n                    return suffixFound;\n                }\n                return false;\n            });\n            if (formatInfoIndex === -1) {\n                setInvalid(newState, format, formatInfo, intlService);\n                return newState;\n            }\n        }\n        // 9. Value ending on decimal separator (here as decimal might be typed inside format)\n        if (sanitizedString[sanitizedString.length - 1] === symbols.decimal && maxDecimalCount > 0) {\n            newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format);\n            newState.currentLooseValue = sanitizedFormattedString;\n            return newState;\n        }\n        // 10. prevent deleting decimal and group symbols\n        if (newState.currentLooseValue && prevLooseValue) {\n            var isSpecialSymbolDeleted = (restrictedSymbols + symbols.decimal + symbols.group)\n                .split('')\n                .findIndex(function (s) {\n                if (currentLooseValueAsString.split('').filter(function (x) { return x === s; }).length <\n                    prevLooseValueAsString.split('').filter(function (x) { return x === s; }).length &&\n                    currentLooseValueAsString.length + 1 === prevLooseValueAsString.length) {\n                    if (s === symbols.decimal &&\n                        getDecimalCount(prevLooseValueAsString.replace(sanitizeRegex, ''), symbols.decimal) === 0) {\n                        return false;\n                    }\n                    return true;\n                }\n                return false;\n            }) > -1;\n            if (isSpecialSymbolDeleted) {\n                newState.eventValue = intlService.parseNumber(state.prevLooseValue, format);\n                newState.currentLooseValue = state.prevLooseValue;\n                return newState;\n            }\n        }\n        var currentDecimalCount = getDecimalCount(sanitizedString, symbols.decimal);\n        var endsOnDecimal = sanitizedString[sanitizedString.length - 1] === '0';\n        // 11. Deleting more decimals than allowed\n        if (isDelete && endsOnDecimal && currentDecimalCount < minDecimalCount) {\n            newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n            newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n            return newState;\n        }\n        // 12. Ending on zero OR more decimals than allowed\n        if (currentDecimalCount > 0) {\n            var valueUntillDecimal = currentLooseValueAsString.substring(0, decimalIndex);\n            if (endsOnDecimal && (!valueUntillDecimal || prevLooseValueAsString.indexOf(valueUntillDecimal) !== 0)) {\n                // ending on zero but typing before decimal separator\n                newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n                var nextLooseValue = formatValue(newState.eventValue, format, intlService);\n                setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);\n                newState.currentLooseValue = nextLooseValue;\n                return newState;\n            }\n            if (currentDecimalCount > maxDecimalCount) {\n                // typing more symbols than format allows\n                var looseDecimalPlace = currentLooseValueAsString.indexOf(symbols.decimal);\n                var result = currentLooseValueAsString.substring(0, looseDecimalPlace) +\n                    currentLooseValueAsString.substring(looseDecimalPlace, looseDecimalPlace + 1 + maxDecimalCount) +\n                    currentLooseValueAsString.substring(numberEnd, String(newState.currentLooseValue).length);\n                newState.eventValue = intlService.parseNumber(result, format);\n                newState.currentLooseValue = result;\n                setSelection(newState, newState.selectionStart, result, formatInfo);\n                return newState;\n            }\n            if (minDecimalCount !== maxDecimalCount && currentDecimalCount <= maxDecimalCount && endsOnDecimal) {\n                // adding trailing zeroes\n                newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n                newState.currentLooseValue = sanitizedFormattedString;\n                return newState;\n            }\n            if (currentDecimalCount < minDecimalCount) {\n                // deleting more decimals than allowed\n                newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n                newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n                return newState;\n            }\n        }\n    }\n    // X. All other values should be parsed\n    newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n    if (isPercentFormat) {\n        newState.eventValue = newState.eventValue / 100;\n    }\n    if (typeof newState.eventValue === 'number') {\n        var nextLooseValue = formatValue(newState.eventValue, format, intlService);\n        // First digit add\n        if (currentLooseValueAsString.length === 1) {\n            setSelection(newState, getInitialPosition(nextLooseValue, symbols), nextLooseValue, formatInfo);\n        }\n        else {\n            setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);\n        }\n        newState.currentLooseValue = nextLooseValue;\n    }\n    else {\n        // Case when deleting last number\n        newState.currentLooseValue = formatValue(intlService.parseNumber(sanitizedString), format, intlService);\n    }\n    return newState;\n};\n"]},"metadata":{},"sourceType":"module"}