{"ast":null,"code":"var _jsxFileName = \"/home/finn/Documents/heycloud-frontend/heycloud-frontend/src/common/AuthVerify.js\";\nimport React from \"react\";\nimport { decodeToken } from \"react-jwt\";\nimport { isTokenExpired } from \"react-jwt/dist/jwt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst parseJwt = token => {\n  try {\n    const isMyTokenExpired = decodeToken(token);\n    return isMyTokenExpired;\n  } catch (e) {\n    return null;\n  }\n};\n\nconst AuthVerify = props => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user) {\n    const isMyTokenExpired = parseJwt(user.access_token);\n    console.log(isTokenExpired(user.access_token));\n\n    if (isMyTokenExpired) {\n      props.logOut();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\n_c = AuthVerify;\nexport default AuthVerify;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthVerify\");","map":{"version":3,"sources":["/home/finn/Documents/heycloud-frontend/heycloud-frontend/src/common/AuthVerify.js"],"names":["React","decodeToken","isTokenExpired","parseJwt","token","isMyTokenExpired","e","AuthVerify","props","user","JSON","parse","localStorage","getItem","access_token","console","log","logOut"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,cAAT,QAA+B,oBAA/B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,MAAI;AACF,UAAMC,gBAAgB,GAAGJ,WAAW,CAACG,KAAD,CAApC;AACA,WAAOC,gBAAP;AAED,GAJD,CAIE,OAAOC,CAAP,EAAU;AACV,WAAO,IAAP;AACD;AACF,CARD;;AAUA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,MAAIJ,IAAJ,EAAU;AACR,UAAMJ,gBAAgB,GAAGF,QAAQ,CAACM,IAAI,CAACK,YAAN,CAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,cAAc,CAACO,IAAI,CAACK,YAAN,CAA1B;;AACA,QAAIT,gBAAJ,EAAsB;AACpBG,MAAAA,KAAK,CAACS,MAAN;AACD;AACF;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAXD;;KAAMV,U;AAaN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { decodeToken } from \"react-jwt\";\nimport { isTokenExpired } from \"react-jwt/dist/jwt\";\n\nconst parseJwt = (token) => {\n  try {\n    const isMyTokenExpired = decodeToken(token);\n    return isMyTokenExpired\n    ;\n  } catch (e) {\n    return null;\n  }\n};\n\nconst AuthVerify = (props) => {\n  const user = JSON.parse(localStorage.getItem(\"user\")) ;\n  if (user) {\n    const isMyTokenExpired = parseJwt(user.access_token);\n    console.log(isTokenExpired(user.access_token));\n    if (isMyTokenExpired) {\n      props.logOut();\n    }\n  }\n\n  return <div></div>;\n};\n\nexport default AuthVerify;"]},"metadata":{},"sourceType":"module"}