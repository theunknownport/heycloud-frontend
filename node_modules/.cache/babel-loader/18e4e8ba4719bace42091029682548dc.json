{"ast":null,"code":"import { display } from '../tools/display';\nimport { findCommaSeparatedValue, generateUUID, ONE_SECOND } from '../tools/utils';\nexport var COOKIE_ACCESS_DELAY = ONE_SECOND;\nexport function cacheCookieAccess(name, options) {\n  var timeout;\n  var cache;\n  var hasCache = false;\n\n  var cacheAccess = function () {\n    hasCache = true;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      hasCache = false;\n    }, COOKIE_ACCESS_DELAY);\n  };\n\n  return {\n    get: function () {\n      if (hasCache) {\n        return cache;\n      }\n\n      cache = getCookie(name);\n      cacheAccess();\n      return cache;\n    },\n    set: function (value, expireDelay) {\n      setCookie(name, value, expireDelay, options);\n      cache = value;\n      cacheAccess();\n    },\n    clearCache: function () {\n      clearTimeout(timeout);\n      hasCache = false;\n    }\n  };\n}\nexport function setCookie(name, value, expireDelay, options) {\n  var date = new Date();\n  date.setTime(date.getTime() + expireDelay);\n  var expires = \"expires=\" + date.toUTCString();\n  var sameSite = options && options.crossSite ? 'none' : 'strict';\n  var domain = options && options.domain ? \";domain=\" + options.domain : '';\n  var secure = options && options.secure ? \";secure\" : '';\n  document.cookie = name + \"=\" + value + \";\" + expires + \";path=/;samesite=\" + sameSite + domain + secure;\n}\nexport function getCookie(name) {\n  return findCommaSeparatedValue(document.cookie, name);\n}\nexport function deleteCookie(name, options) {\n  setCookie(name, '', 0, options);\n}\nexport function areCookiesAuthorized(options) {\n  if (document.cookie === undefined || document.cookie === null) {\n    return false;\n  }\n\n  try {\n    // Use a unique cookie name to avoid issues when the SDK is initialized multiple times during\n    // the test cookie lifetime\n    var testCookieName = \"dd_cookie_test_\" + generateUUID();\n    var testCookieValue = 'test';\n    setCookie(testCookieName, testCookieValue, ONE_SECOND, options);\n    var isCookieCorrectlySet = getCookie(testCookieName) === testCookieValue;\n    deleteCookie(testCookieName, options);\n    return isCookieCorrectlySet;\n  } catch (error) {\n    display.error(error);\n    return false;\n  }\n}\n/**\n * No API to retrieve it, number of levels for subdomain and suffix are unknown\n * strategy: find the minimal domain on which cookies are allowed to be set\n * https://web.dev/same-site-same-origin/#site\n */\n\nvar getCurrentSiteCache;\nexport function getCurrentSite() {\n  if (getCurrentSiteCache === undefined) {\n    // Use a unique cookie name to avoid issues when the SDK is initialized multiple times during\n    // the test cookie lifetime\n    var testCookieName = \"dd_site_test_\" + generateUUID();\n    var testCookieValue = 'test';\n    var domainLevels = window.location.hostname.split('.');\n    var candidateDomain = domainLevels.pop();\n\n    while (domainLevels.length && !getCookie(testCookieName)) {\n      candidateDomain = domainLevels.pop() + \".\" + candidateDomain;\n      setCookie(testCookieName, testCookieValue, ONE_SECOND, {\n        domain: candidateDomain\n      });\n    }\n\n    deleteCookie(testCookieName, {\n      domain: candidateDomain\n    });\n    getCurrentSiteCache = candidateDomain;\n  }\n\n  return getCurrentSiteCache;\n}","map":{"version":3,"sources":["../../src/browser/cookie.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { display } from '../tools/display';\nimport { findCommaSeparatedValue, generateUUID, ONE_SECOND } from '../tools/utils';\nexport var COOKIE_ACCESS_DELAY = ONE_SECOND;\nexport function cacheCookieAccess(name, options) {\n    var timeout;\n    var cache;\n    var hasCache = false;\n    var cacheAccess = function () {\n        hasCache = true;\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            hasCache = false;\n        }, COOKIE_ACCESS_DELAY);\n    };\n    return {\n        get: function () {\n            if (hasCache) {\n                return cache;\n            }\n            cache = getCookie(name);\n            cacheAccess();\n            return cache;\n        },\n        set: function (value, expireDelay) {\n            setCookie(name, value, expireDelay, options);\n            cache = value;\n            cacheAccess();\n        },\n        clearCache: function () {\n            clearTimeout(timeout);\n            hasCache = false;\n        },\n    };\n}\nexport function setCookie(name, value, expireDelay, options) {\n    var date = new Date();\n    date.setTime(date.getTime() + expireDelay);\n    var expires = \"expires=\" + date.toUTCString();\n    var sameSite = options && options.crossSite ? 'none' : 'strict';\n    var domain = options && options.domain ? \";domain=\" + options.domain : '';\n    var secure = options && options.secure ? \";secure\" : '';\n    document.cookie = name + \"=\" + value + \";\" + expires + \";path=/;samesite=\" + sameSite + domain + secure;\n}\nexport function getCookie(name) {\n    return findCommaSeparatedValue(document.cookie, name);\n}\nexport function deleteCookie(name, options) {\n    setCookie(name, '', 0, options);\n}\nexport function areCookiesAuthorized(options) {\n    if (document.cookie === undefined || document.cookie === null) {\n        return false;\n    }\n    try {\n        // Use a unique cookie name to avoid issues when the SDK is initialized multiple times during\n        // the test cookie lifetime\n        var testCookieName = \"dd_cookie_test_\" + generateUUID();\n        var testCookieValue = 'test';\n        setCookie(testCookieName, testCookieValue, ONE_SECOND, options);\n        var isCookieCorrectlySet = getCookie(testCookieName) === testCookieValue;\n        deleteCookie(testCookieName, options);\n        return isCookieCorrectlySet;\n    }\n    catch (error) {\n        display.error(error);\n        return false;\n    }\n}\n/**\n * No API to retrieve it, number of levels for subdomain and suffix are unknown\n * strategy: find the minimal domain on which cookies are allowed to be set\n * https://web.dev/same-site-same-origin/#site\n */\nvar getCurrentSiteCache;\nexport function getCurrentSite() {\n    if (getCurrentSiteCache === undefined) {\n        // Use a unique cookie name to avoid issues when the SDK is initialized multiple times during\n        // the test cookie lifetime\n        var testCookieName = \"dd_site_test_\" + generateUUID();\n        var testCookieValue = 'test';\n        var domainLevels = window.location.hostname.split('.');\n        var candidateDomain = domainLevels.pop();\n        while (domainLevels.length && !getCookie(testCookieName)) {\n            candidateDomain = domainLevels.pop() + \".\" + candidateDomain;\n            setCookie(testCookieName, testCookieValue, ONE_SECOND, { domain: candidateDomain });\n        }\n        deleteCookie(testCookieName, { domain: candidateDomain });\n        getCurrentSiteCache = candidateDomain;\n    }\n    return getCurrentSiteCache;\n}\n//# sourceMappingURL=cookie.js.map"]},"metadata":{},"sourceType":"module"}