{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\n\nconst CreateRegionForm = () => {\n  _s();\n\n  const form = useRef();\n  const checkBtn = useRef();\n  const [fullName, setFullName] = useState(\"\");\n  const [shortName, setShortName] = useState(\"\");\n  const [proxHost, setProxHost] = useState(\"\");\n  const [proxPort, setProxPort] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [proxUser, setProxUser] = useState(\"\");\n  const {\n    isLoggedIn\n  } = useSelector(state => state.auth);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const onChangeFullName = e => {\n    const fullName = e.target.value;\n    setFullName(fullName);\n  };\n\n  const onChangeShortName = e => {\n    const shortName = e.target.value;\n    setShortName(shortName);\n  };\n\n  const onChangeProxHost = e => {\n    const shortName = e.target.value;\n    setProxHost(shortName);\n  };\n\n  const onChangeProxPort = e => {\n    const shortName = e.target.value;\n    setProxPort(shortName);\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const onChangeProxUser = e => {\n    const proxUser = e.target.value;\n    setProxUser(proxUser);\n  };\n\n  return \"\";\n};\n\n_s(CreateRegionForm, \"l+5w2NMcGm6wFPMJuAAMA+pe8PQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CreateRegionForm;\nexport default CreateRegionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRegionForm\");","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/src/components/CreateRegionForm.js"],"names":["React","useState","useRef","useDispatch","useSelector","Form","Input","CreateRegionForm","form","checkBtn","fullName","setFullName","shortName","setShortName","proxHost","setProxHost","proxPort","setProxPort","password","setPassword","proxUser","setProxUser","isLoggedIn","state","auth","message","dispatch","onChangeFullName","e","target","value","onChangeShortName","onChangeProxHost","onChangeProxPort","onChangePassword","onChangeProxUser"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAMC,IAAI,GAAGN,MAAM,EAAnB;AACA,QAAMO,QAAQ,GAAGP,MAAM,EAAvB;AAEA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM;AAAEqB,IAAAA;AAAF,MAAiBlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAlC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcrB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACE,OAAhB,CAA/B;AAEA,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B;;AAEA,QAAMwB,gBAAgB,GAAIC,CAAD,IAAO;AAC9B,UAAMlB,QAAQ,GAAGkB,CAAC,CAACC,MAAF,CAASC,KAA1B;AACAnB,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAHD;;AAKA,QAAMqB,iBAAiB,GAAIH,CAAD,IAAO;AAC/B,UAAMhB,SAAS,GAAGgB,CAAC,CAACC,MAAF,CAASC,KAA3B;AACAjB,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,GAHD;;AAKA,QAAMoB,gBAAgB,GAAIJ,CAAD,IAAO;AAC9B,UAAMhB,SAAS,GAAGgB,CAAC,CAACC,MAAF,CAASC,KAA3B;AACAf,IAAAA,WAAW,CAACH,SAAD,CAAX;AACD,GAHD;;AAKA,QAAMqB,gBAAgB,GAAIL,CAAD,IAAO;AAC9B,UAAMhB,SAAS,GAAGgB,CAAC,CAACC,MAAF,CAASC,KAA3B;AACAb,IAAAA,WAAW,CAACL,SAAD,CAAX;AACD,GAHD;;AAKA,QAAMsB,gBAAgB,GAAIN,CAAD,IAAO;AAC9B,UAAMV,QAAQ,GAAGU,CAAC,CAACC,MAAF,CAASC,KAA1B;AACAX,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAHD;;AAKA,QAAMiB,gBAAgB,GAAIP,CAAD,IAAO;AAC9B,UAAMR,QAAQ,GAAGQ,CAAC,CAACC,MAAF,CAASC,KAA1B;AACAT,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAHD;;AAIA,SACE,EADF;AAGD,CAhDD;;GAAMb,gB;UAWmBH,W,EACHA,W,EAEHD,W;;;KAdbI,gB;AAkDN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\n\r\nconst CreateRegionForm = () => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [shortName, setShortName] = useState(\"\");\r\n  const [proxHost, setProxHost] = useState(\"\");\r\n  const [proxPort, setProxPort] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [proxUser, setProxUser] = useState(\"\");\r\n\r\n  const { isLoggedIn } = useSelector(state => state.auth);\r\n  const { message } = useSelector(state => state.message);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeFullName = (e) => {\r\n    const fullName = e.target.value;\r\n    setFullName(fullName);\r\n  };\r\n\r\n  const onChangeShortName = (e) => {\r\n    const shortName = e.target.value;\r\n    setShortName(shortName);\r\n  };\r\n\r\n  const onChangeProxHost = (e) => {\r\n    const shortName = e.target.value;\r\n    setProxHost(shortName);\r\n  };\r\n\r\n  const onChangeProxPort = (e) => {\r\n    const shortName = e.target.value;\r\n    setProxPort(shortName);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const onChangeProxUser = (e) => {\r\n    const proxUser = e.target.value;\r\n    setProxUser(proxUser);\r\n  };\r\n  return (\r\n    \"\"\r\n  )\r\n}\r\n\r\nexport default CreateRegionForm"]},"metadata":{},"sourceType":"module"}