{"ast":null,"code":"import { ONE_MINUTE, SESSION_TIME_OUT_DELAY } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nimport { ContextHistory } from './contextHistory';\nexport var VIEW_CONTEXT_TIME_OUT_DELAY = SESSION_TIME_OUT_DELAY;\nexport var ACTION_CONTEXT_TIME_OUT_DELAY = 5 * ONE_MINUTE; // arbitrary\n\nexport function startParentContexts(lifeCycle, session) {\n  var viewContextHistory = new ContextHistory(VIEW_CONTEXT_TIME_OUT_DELAY);\n  var actionContextHistory = new ContextHistory(ACTION_CONTEXT_TIME_OUT_DELAY);\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_CREATED, function (view) {\n    viewContextHistory.setCurrent(buildViewContext(view, session.getId()), view.startClocks.relative);\n  });\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_UPDATED, function (view) {\n    // A view can be updated after its end.  We have to ensure that the view being updated is the\n    // most recently created.\n    var current = viewContextHistory.getCurrent();\n\n    if (current && current.view.id === view.id) {\n      viewContextHistory.setCurrent(buildViewContext(view, current.session.id), view.startClocks.relative);\n    }\n  });\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_ENDED, function (_a) {\n    var endClocks = _a.endClocks;\n    viewContextHistory.closeCurrent(endClocks.relative);\n  });\n  lifeCycle.subscribe(LifeCycleEventType.AUTO_ACTION_CREATED, function (action) {\n    actionContextHistory.setCurrent(buildActionContext(action), action.startClocks.relative);\n  });\n  lifeCycle.subscribe(LifeCycleEventType.AUTO_ACTION_COMPLETED, function (action) {\n    if (actionContextHistory.getCurrent()) {\n      // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n      var actionEndTime = action.startClocks.relative + action.duration;\n      actionContextHistory.closeCurrent(actionEndTime);\n    }\n  });\n  lifeCycle.subscribe(LifeCycleEventType.AUTO_ACTION_DISCARDED, function () {\n    actionContextHistory.clearCurrent();\n  });\n  lifeCycle.subscribe(LifeCycleEventType.SESSION_RENEWED, function () {\n    viewContextHistory.reset();\n    actionContextHistory.reset();\n  });\n\n  function buildViewContext(view, sessionId) {\n    return {\n      session: {\n        id: sessionId\n      },\n      view: {\n        id: view.id,\n        name: view.name\n      }\n    };\n  }\n\n  function buildActionContext(action) {\n    return {\n      action: {\n        id: action.id\n      }\n    };\n  }\n\n  return {\n    findAction: function (startTime) {\n      return actionContextHistory.find(startTime);\n    },\n    findView: function (startTime) {\n      return viewContextHistory.find(startTime);\n    },\n    stop: function () {\n      viewContextHistory.stop();\n      actionContextHistory.stop();\n    }\n  };\n}","map":{"version":3,"sources":["../../src/domain/parentContexts.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { ONE_MINUTE, SESSION_TIME_OUT_DELAY } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nimport { ContextHistory } from './contextHistory';\nexport var VIEW_CONTEXT_TIME_OUT_DELAY = SESSION_TIME_OUT_DELAY;\nexport var ACTION_CONTEXT_TIME_OUT_DELAY = 5 * ONE_MINUTE; // arbitrary\nexport function startParentContexts(lifeCycle, session) {\n    var viewContextHistory = new ContextHistory(VIEW_CONTEXT_TIME_OUT_DELAY);\n    var actionContextHistory = new ContextHistory(ACTION_CONTEXT_TIME_OUT_DELAY);\n    lifeCycle.subscribe(LifeCycleEventType.VIEW_CREATED, function (view) {\n        viewContextHistory.setCurrent(buildViewContext(view, session.getId()), view.startClocks.relative);\n    });\n    lifeCycle.subscribe(LifeCycleEventType.VIEW_UPDATED, function (view) {\n        // A view can be updated after its end.  We have to ensure that the view being updated is the\n        // most recently created.\n        var current = viewContextHistory.getCurrent();\n        if (current && current.view.id === view.id) {\n            viewContextHistory.setCurrent(buildViewContext(view, current.session.id), view.startClocks.relative);\n        }\n    });\n    lifeCycle.subscribe(LifeCycleEventType.VIEW_ENDED, function (_a) {\n        var endClocks = _a.endClocks;\n        viewContextHistory.closeCurrent(endClocks.relative);\n    });\n    lifeCycle.subscribe(LifeCycleEventType.AUTO_ACTION_CREATED, function (action) {\n        actionContextHistory.setCurrent(buildActionContext(action), action.startClocks.relative);\n    });\n    lifeCycle.subscribe(LifeCycleEventType.AUTO_ACTION_COMPLETED, function (action) {\n        if (actionContextHistory.getCurrent()) {\n            // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n            var actionEndTime = (action.startClocks.relative + action.duration);\n            actionContextHistory.closeCurrent(actionEndTime);\n        }\n    });\n    lifeCycle.subscribe(LifeCycleEventType.AUTO_ACTION_DISCARDED, function () {\n        actionContextHistory.clearCurrent();\n    });\n    lifeCycle.subscribe(LifeCycleEventType.SESSION_RENEWED, function () {\n        viewContextHistory.reset();\n        actionContextHistory.reset();\n    });\n    function buildViewContext(view, sessionId) {\n        return {\n            session: {\n                id: sessionId,\n            },\n            view: {\n                id: view.id,\n                name: view.name,\n            },\n        };\n    }\n    function buildActionContext(action) {\n        return { action: { id: action.id } };\n    }\n    return {\n        findAction: function (startTime) { return actionContextHistory.find(startTime); },\n        findView: function (startTime) { return viewContextHistory.find(startTime); },\n        stop: function () {\n            viewContextHistory.stop();\n            actionContextHistory.stop();\n        },\n    };\n}\n//# sourceMappingURL=parentContexts.js.map"]},"metadata":{},"sourceType":"module"}