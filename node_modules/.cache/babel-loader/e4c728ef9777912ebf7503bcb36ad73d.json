{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nconst API_URL = \"http://localhost:8000/\";\n\nconst getPublicContent = () => {\n  return axios.get(API_URL + \"all\");\n};\n\nconst getModeratorBoard = () => {\n  return axios.get(API_URL + \"mod\", {\n    headers: authHeader()\n  });\n};\n\nconst listRegions = () => {\n  return axios.get(API_URL + \"admin/region\", {\n    headers: authHeader()\n  });\n};\n\nconst listRecentTasks = () => {\n  return axios.get(API_URL + \"recent-tasks\", {\n    headers: authHeader()\n  });\n};\n\nconst listVps = () => {\n  return axios.get(API_URL + \"vps\", {\n    headers: authHeader()\n  });\n};\n\nconst listNgrokTokens = () => {\n  return axios.get(API_URL + \"ngrok-tokens\", {\n    headers: authHeader()\n  });\n};\n\nconst clearTasks = () => {\n  return axios.delete(API_URL + \"recent-tasks\", {\n    headers: authHeader()\n  });\n};\n\nconst getUser = () => {\n  return axios.get(API_URL + \"users\", {\n    headers: authHeader()\n  });\n};\n\nconst getPortalSession = () => {\n  return axios.get(API_URL + \"accounts/portal\", {\n    headers: authHeader()\n  });\n};\n\nconst changePassword = (oldpassword, password) => {\n  return axios.post(API_URL + \"accounts/change-password\", {\n    oldpassword,\n    password\n  }, {\n    headers: authHeader()\n  }).then(response => {\n    return JSON.stringify(response.data);\n  });\n};\n\nexport default {\n  getPublicContent,\n  getUser,\n  getModeratorBoard,\n  listRegions,\n  listRecentTasks,\n  clearTasks,\n  getPortalSession,\n  changePassword,\n  listVps,\n  listNgrokTokens\n};","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/src/services/user.service.js"],"names":["axios","authHeader","API_URL","getPublicContent","get","getModeratorBoard","headers","listRegions","listRecentTasks","listVps","listNgrokTokens","clearTasks","delete","getUser","getPortalSession","changePassword","oldpassword","password","post","then","response","JSON","stringify","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,SAAOH,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,KAApB,CAAP;AACD,CAFD;;AAIA,MAAMG,iBAAiB,GAAG,MAAM;AAC9B,SAAOL,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,KAApB,EAA2B;AAAEI,IAAAA,OAAO,EAAEL,UAAU;AAArB,GAA3B,CAAP;AACD,CAFD;;AAIA,MAAMM,WAAW,GAAG,MAAM;AACxB,SAAOP,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,cAApB,EAAoC;AAAEI,IAAAA,OAAO,EAAEL,UAAU;AAArB,GAApC,CAAP;AACD,CAFD;;AAIA,MAAMO,eAAe,GAAG,MAAM;AAC5B,SAAOR,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,cAApB,EAAoC;AAAEI,IAAAA,OAAO,EAAEL,UAAU;AAArB,GAApC,CAAP;AACD,CAFD;;AAIA,MAAMQ,OAAO,GAAG,MAAM;AACpB,SAAOT,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,KAApB,EAA2B;AAAEI,IAAAA,OAAO,EAAEL,UAAU;AAArB,GAA3B,CAAP;AACD,CAFD;;AAIA,MAAMS,eAAe,GAAG,MAAM;AAC5B,SAAOV,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,cAApB,EAAoC;AAAEI,IAAAA,OAAO,EAAEL,UAAU;AAArB,GAApC,CAAP;AACD,CAFD;;AAIA,MAAMU,UAAU,GAAG,MAAM;AACvB,SAAOX,KAAK,CAACY,MAAN,CAAaV,OAAO,GAAG,cAAvB,EAAuC;AAAEI,IAAAA,OAAO,EAAEL,UAAU;AAArB,GAAvC,CAAP;AACD,CAFD;;AAIA,MAAMY,OAAO,GAAG,MAAM;AACpB,SAAOb,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,OAApB,EAA6B;AAAEI,IAAAA,OAAO,EAAEL,UAAU;AAArB,GAA7B,CAAP;AACD,CAFD;;AAIA,MAAMa,gBAAgB,GAAG,MAAM;AAC7B,SAAOd,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,iBAApB,EAAuC;AAAEI,IAAAA,OAAO,EAAEL,UAAU;AAArB,GAAvC,CAAP;AACD,CAFD;;AAIA,MAAMc,cAAc,GAAG,CAACC,WAAD,EAAcC,QAAd,KAA2B;AAChD,SAAOjB,KAAK,CAACkB,IAAN,CAAWhB,OAAO,GAAG,0BAArB,EAAiD;AACtDc,IAAAA,WADsD;AAEtDC,IAAAA;AAFsD,GAAjD,EAIP;AACAX,IAAAA,OAAO,EAAEL,UAAU;AADnB,GAJO,EAONkB,IAPM,CAOAC,QAAD,IAAc;AAElB,WAAOC,IAAI,CAACC,SAAL,CAAeF,QAAQ,CAACG,IAAxB,CAAP;AACD,GAVM,CAAP;AAWD,CAZD;;AAcA,eAAe;AACbpB,EAAAA,gBADa;AAEbU,EAAAA,OAFa;AAGbR,EAAAA,iBAHa;AAIbE,EAAAA,WAJa;AAKbC,EAAAA,eALa;AAMbG,EAAAA,UANa;AAObG,EAAAA,gBAPa;AAQbC,EAAAA,cARa;AASbN,EAAAA,OATa;AAUbC,EAAAA;AAVa,CAAf","sourcesContent":["import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://localhost:8000/\";\n\nconst getPublicContent = () => {\n  return axios.get(API_URL + \"all\");\n};\n\nconst getModeratorBoard = () => {\n  return axios.get(API_URL + \"mod\", { headers: authHeader() });\n};\n\nconst listRegions = () => {\n  return axios.get(API_URL + \"admin/region\", { headers: authHeader() });\n};\n\nconst listRecentTasks = () => {\n  return axios.get(API_URL + \"recent-tasks\", { headers: authHeader() });\n};\n\nconst listVps = () => {\n  return axios.get(API_URL + \"vps\", { headers: authHeader() });\n};\n\nconst listNgrokTokens = () => {\n  return axios.get(API_URL + \"ngrok-tokens\", { headers: authHeader() });\n};\n\nconst clearTasks = () => {\n  return axios.delete(API_URL + \"recent-tasks\", { headers: authHeader() });\n};\n\nconst getUser = () => {\n  return axios.get(API_URL + \"users\", { headers: authHeader() });\n};\n\nconst getPortalSession = () => {\n  return axios.get(API_URL + \"accounts/portal\", { headers: authHeader() });\n};\n\nconst changePassword = (oldpassword, password) => {\n  return axios.post(API_URL + \"accounts/change-password\", {\n    oldpassword,\n    password,\n  },\n  {\n  headers: authHeader()\n  })\n  .then((response) => {\n\n    return JSON.stringify(response.data);\n  });\n};\n\nexport default {\n  getPublicContent,\n  getUser,\n  getModeratorBoard,\n  listRegions,\n  listRecentTasks,\n  clearTasks,\n  getPortalSession,\n  changePassword,\n  listVps,\n  listNgrokTokens,\n};\n"]},"metadata":{},"sourceType":"module"}