{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_MESSAGE } from \"./types\";\nimport AuthService from \"../services/auth.service\";\nexport const register = (email, password, phone) => dispatch => {\n  return AuthService.register(email, password, phone).then(response => {\n    dispatch({\n      type: REGISTER_SUCCESS\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message\n    });\n    return Promise.resolve();\n  }, (error, response) => {\n    const message = response.data.message;\n    dispatch({\n      type: REGISTER_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};\nexport const login = (email, password) => dispatch => {\n  return AuthService.login(email, password).then(data => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: {\n        user: data\n      }\n    });\n    return Promise.resolve();\n  }, (error, data) => {\n    const message = data.toString();\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};\nexport const logout = () => dispatch => {\n  AuthService.logout();\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/finn/Documents/heycloud-frontend/heycloud-frontend/src/actions/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","AuthService","register","email","password","phone","dispatch","then","response","type","payload","data","message","Promise","resolve","error","reject","login","user","toString","logout"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,UAJJ,EAKIC,MALJ,EAMIC,WANJ,QAOO,SAPP;AASA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,KAAlB,KAA6BC,QAAD,IAAc;AAChE,SAAOL,WAAW,CAACC,QAAZ,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,KAAtC,EAA6CE,IAA7C,CACJC,QAAD,IAAc;AACZF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAIAW,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,WADC;AAEPU,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFhB,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACC,OAAR,EAAP;AACD,GAZI,EAaL,CAACC,KAAD,EAAQP,QAAR,KAAqB;AACnB,UAAMI,OAAO,GAAGJ,QAAQ,CAACG,IAAT,CAAcC,OAA9B;AAGAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAIAU,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,WADC;AAEPU,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACG,MAAR,EAAP;AACD,GA3BI,CAAP;AA6BD,CA9BM;AAgCP,OAAO,MAAMC,KAAK,GAAG,CAACd,KAAD,EAAQC,QAAR,KAAsBE,QAAD,IAAc;AACtD,SAAOL,WAAW,CAACgB,KAAZ,CAAkBd,KAAlB,EAAyBC,QAAzB,EAAmCG,IAAnC,CACJI,IAAD,IAAU;AACRL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ,aADC;AAEPa,MAAAA,OAAO,EAAE;AAAEQ,QAAAA,IAAI,EAAEP;AAAR;AAFF,KAAD,CAAR;AAKA,WAAOE,OAAO,CAACC,OAAR,EAAP;AACD,GARI,EASL,CAACC,KAAD,EAAQJ,IAAR,KAAiB;AACf,UAAMC,OAAO,GAAGD,IAAI,CAACQ,QAAL,EAAhB;AAEAb,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAIAQ,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,WADC;AAEPU,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACG,MAAR,EAAP;AACD,GAtBI,CAAP;AAwBD,CAzBM;AA2BP,OAAO,MAAMI,MAAM,GAAG,MAAOd,QAAD,IAAc;AACxCL,EAAAA,WAAW,CAACmB,MAAZ;AAEAd,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAEV;AADC,GAAD,CAAR;AAGD,CANM","sourcesContent":["import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\nexport const register = (email, password, phone) => (dispatch) => {\n  return AuthService.register(email, password, phone).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error, response) => {\n      const message = response.data.message\n        \n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const login = (email, password) => (dispatch) => {\n  return AuthService.login(email, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n\n      return Promise.resolve();\n    },\n    (error, data) => {\n      const message = data.toString()\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}