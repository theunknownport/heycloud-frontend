{"ast":null,"code":"import { timeStampNow } from '../../tools/timeUtils';\nimport { generateUUID, includes } from '../../tools/utils';\nexport var ENDPOINTS = {\n  alternate: {\n    logs: 'logs',\n    rum: 'rum',\n    sessionReplay: 'session-replay'\n  },\n  classic: {\n    logs: 'browser',\n    rum: 'rum',\n    // session-replay has no classic endpoint\n    sessionReplay: undefined\n  }\n};\nvar INTAKE_TRACKS = {\n  logs: 'logs',\n  rum: 'rum',\n  sessionReplay: 'replay'\n};\nexport var INTAKE_SITE_US = 'datadoghq.com';\nvar INTAKE_SITE_US3 = 'us3.datadoghq.com';\nvar INTAKE_SITE_GOV = 'ddog-gov.com';\nvar INTAKE_SITE_EU = 'datadoghq.eu';\nvar CLASSIC_ALLOWED_SITES = [INTAKE_SITE_US, INTAKE_SITE_EU];\nvar INTAKE_V1_ALLOWED_SITES = [INTAKE_SITE_US, INTAKE_SITE_US3, INTAKE_SITE_EU, INTAKE_SITE_GOV];\nexport function createEndpointBuilder(initConfiguration, buildEnv, endpointType, source) {\n  var sdkVersion = buildEnv.sdkVersion;\n  var _a = initConfiguration.site,\n      site = _a === void 0 ? INTAKE_SITE_US : _a,\n      clientToken = initConfiguration.clientToken,\n      env = initConfiguration.env,\n      proxyHost = initConfiguration.proxyHost,\n      proxyUrl = initConfiguration.proxyUrl,\n      service = initConfiguration.service,\n      version = initConfiguration.version,\n      intakeApiVersion = initConfiguration.intakeApiVersion,\n      useAlternateIntakeDomains = initConfiguration.useAlternateIntakeDomains;\n  var host = buildHost(endpointType);\n  var path = buildPath(endpointType);\n\n  function build() {\n    var queryParameters = buildQueryParameters(endpointType, source);\n    var endpoint = \"https://\" + host + path + \"?\" + queryParameters;\n\n    if (proxyUrl) {\n      return proxyUrl + \"?ddforward=\" + encodeURIComponent(endpoint);\n    } else if (proxyHost) {\n      return \"https://\" + proxyHost + path + \"?ddhost=\" + host + \"&\" + queryParameters;\n    }\n\n    return endpoint;\n  }\n\n  function buildIntakeUrl() {\n    var endpoint = build();\n    return endpoint.slice(0, endpoint.indexOf('?'));\n  }\n\n  function buildHost(endpointType) {\n    if (shouldUseAlternateDomain(endpointType)) {\n      var endpoint_1 = ENDPOINTS.alternate[endpointType];\n      var domainParts = site.split('.');\n      var extension = domainParts.pop();\n      var suffix = domainParts.join('-') + \".\" + extension;\n      return endpoint_1 + \".browser-intake-\" + suffix;\n    }\n\n    var endpoint = ENDPOINTS.classic[endpointType];\n    return endpoint + \"-http-intake.logs.\" + site;\n  }\n\n  function buildPath(endpointType) {\n    return shouldUseIntakeV2(endpointType) ? \"/api/v2/\" + INTAKE_TRACKS[endpointType] : \"/v1/input/\" + clientToken;\n  }\n\n  function buildQueryParameters(endpointType, source) {\n    var tags = \"sdk_version:\" + sdkVersion + (\"\" + (env ? \",env:\" + env : '')) + (\"\" + (service ? \",service:\" + service : '')) + (\"\" + (version ? \",version:\" + version : ''));\n    var parameters = \"ddsource=\" + (source || 'browser') + \"&ddtags=\" + encodeURIComponent(tags);\n\n    if (shouldUseIntakeV2(endpointType)) {\n      parameters += \"&dd-api-key=\" + clientToken + (\"&dd-evp-origin-version=\" + encodeURIComponent(sdkVersion)) + \"&dd-evp-origin=browser\" + (\"&dd-request-id=\" + generateUUID());\n    }\n\n    if (endpointType === 'rum') {\n      parameters += \"&batch_time=\" + timeStampNow();\n    }\n\n    return parameters;\n  }\n\n  function shouldUseIntakeV2(endpointType) {\n    return intakeApiVersion === 2 || !includes(INTAKE_V1_ALLOWED_SITES, site) || endpointType === 'sessionReplay';\n  }\n\n  function shouldUseAlternateDomain(endpointType) {\n    return useAlternateIntakeDomains || !includes(CLASSIC_ALLOWED_SITES, site) || endpointType === 'sessionReplay';\n  }\n\n  return {\n    build: build,\n    buildIntakeUrl: buildIntakeUrl\n  };\n}","map":{"version":3,"sources":["../../../src/domain/configuration/endpointBuilder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { timeStampNow } from '../../tools/timeUtils';\nimport { generateUUID, includes } from '../../tools/utils';\nexport var ENDPOINTS = {\n    alternate: {\n        logs: 'logs',\n        rum: 'rum',\n        sessionReplay: 'session-replay',\n    },\n    classic: {\n        logs: 'browser',\n        rum: 'rum',\n        // session-replay has no classic endpoint\n        sessionReplay: undefined,\n    },\n};\nvar INTAKE_TRACKS = {\n    logs: 'logs',\n    rum: 'rum',\n    sessionReplay: 'replay',\n};\nexport var INTAKE_SITE_US = 'datadoghq.com';\nvar INTAKE_SITE_US3 = 'us3.datadoghq.com';\nvar INTAKE_SITE_GOV = 'ddog-gov.com';\nvar INTAKE_SITE_EU = 'datadoghq.eu';\nvar CLASSIC_ALLOWED_SITES = [INTAKE_SITE_US, INTAKE_SITE_EU];\nvar INTAKE_V1_ALLOWED_SITES = [INTAKE_SITE_US, INTAKE_SITE_US3, INTAKE_SITE_EU, INTAKE_SITE_GOV];\nexport function createEndpointBuilder(initConfiguration, buildEnv, endpointType, source) {\n    var sdkVersion = buildEnv.sdkVersion;\n    var _a = initConfiguration.site, site = _a === void 0 ? INTAKE_SITE_US : _a, clientToken = initConfiguration.clientToken, env = initConfiguration.env, proxyHost = initConfiguration.proxyHost, proxyUrl = initConfiguration.proxyUrl, service = initConfiguration.service, version = initConfiguration.version, intakeApiVersion = initConfiguration.intakeApiVersion, useAlternateIntakeDomains = initConfiguration.useAlternateIntakeDomains;\n    var host = buildHost(endpointType);\n    var path = buildPath(endpointType);\n    function build() {\n        var queryParameters = buildQueryParameters(endpointType, source);\n        var endpoint = \"https://\" + host + path + \"?\" + queryParameters;\n        if (proxyUrl) {\n            return proxyUrl + \"?ddforward=\" + encodeURIComponent(endpoint);\n        }\n        else if (proxyHost) {\n            return \"https://\" + proxyHost + path + \"?ddhost=\" + host + \"&\" + queryParameters;\n        }\n        return endpoint;\n    }\n    function buildIntakeUrl() {\n        var endpoint = build();\n        return endpoint.slice(0, endpoint.indexOf('?'));\n    }\n    function buildHost(endpointType) {\n        if (shouldUseAlternateDomain(endpointType)) {\n            var endpoint_1 = ENDPOINTS.alternate[endpointType];\n            var domainParts = site.split('.');\n            var extension = domainParts.pop();\n            var suffix = domainParts.join('-') + \".\" + extension;\n            return endpoint_1 + \".browser-intake-\" + suffix;\n        }\n        var endpoint = ENDPOINTS.classic[endpointType];\n        return endpoint + \"-http-intake.logs.\" + site;\n    }\n    function buildPath(endpointType) {\n        return shouldUseIntakeV2(endpointType) ? \"/api/v2/\" + INTAKE_TRACKS[endpointType] : \"/v1/input/\" + clientToken;\n    }\n    function buildQueryParameters(endpointType, source) {\n        var tags = \"sdk_version:\" + sdkVersion +\n            (\"\" + (env ? \",env:\" + env : '')) +\n            (\"\" + (service ? \",service:\" + service : '')) +\n            (\"\" + (version ? \",version:\" + version : ''));\n        var parameters = \"ddsource=\" + (source || 'browser') + \"&ddtags=\" + encodeURIComponent(tags);\n        if (shouldUseIntakeV2(endpointType)) {\n            parameters +=\n                \"&dd-api-key=\" + clientToken +\n                    (\"&dd-evp-origin-version=\" + encodeURIComponent(sdkVersion)) +\n                    \"&dd-evp-origin=browser\" +\n                    (\"&dd-request-id=\" + generateUUID());\n        }\n        if (endpointType === 'rum') {\n            parameters += \"&batch_time=\" + timeStampNow();\n        }\n        return parameters;\n    }\n    function shouldUseIntakeV2(endpointType) {\n        return intakeApiVersion === 2 || !includes(INTAKE_V1_ALLOWED_SITES, site) || endpointType === 'sessionReplay';\n    }\n    function shouldUseAlternateDomain(endpointType) {\n        return useAlternateIntakeDomains || !includes(CLASSIC_ALLOWED_SITES, site) || endpointType === 'sessionReplay';\n    }\n    return {\n        build: build,\n        buildIntakeUrl: buildIntakeUrl,\n    };\n}\n//# sourceMappingURL=endpointBuilder.js.map"]},"metadata":{},"sourceType":"module"}