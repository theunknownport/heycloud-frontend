{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nconst API_URL = \"http://localhost:8000/admin\";\n\nconst listRegions = () => {\n  return axios.get(API_URL + \"/regions\", {\n    headers: authHeader()\n  });\n};\n\nconst listRegionNodes = regionID => {\n  return axios.get(API_URL + \"/regions/nodes/\" + regionID, {\n    headers: authHeader()\n  });\n};\n\nconst addRegion = (fullName, shortName, proxHost, proxPort, password, proxUser) => {\n  return axios.post(API_URL + \"/regions\", {\n    fullName,\n    shortName,\n    proxHost,\n    proxPort,\n    password,\n    proxUser\n  }, {\n    headers: authHeader()\n  }).then(response => {\n    return JSON.stringify(response.data);\n  });\n};\n\nconst addNode = (nodeName, nodeIP, nodeUser, nodePort, regionID) => {\n  return axios.post(API_URL + \"/nodes\", {\n    node_name: nodeName,\n    nodeIP,\n    nodeUser,\n    nodePort,\n    regionID\n  }, {\n    headers: authHeader()\n  }).then(response => {\n    return JSON.stringify(response.data);\n  });\n};\n\nconst syncNode = nodeID => {\n  return axios.post(API_URL + \"/nodes/\" + nodeID + \"/sync\", {}, {\n    headers: authHeader()\n  }).then(response => {\n    return JSON.stringify(response.data);\n  });\n};\n\nexport default {\n  addRegion,\n  listRegionNodes,\n  listRegions,\n  addNode,\n  syncNode\n};","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/src/services/admin.service.js"],"names":["axios","authHeader","API_URL","listRegions","get","headers","listRegionNodes","regionID","addRegion","fullName","shortName","proxHost","proxPort","password","proxUser","post","then","response","JSON","stringify","data","addNode","nodeName","nodeIP","nodeUser","nodePort","node_name","syncNode","nodeID"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,6BAAhB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,SAAOH,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,UAApB,EAAgC;AAAEG,IAAAA,OAAO,EAAEJ,UAAU;AAArB,GAAhC,CAAP;AACD,CAFD;;AAIA,MAAMK,eAAe,GAAIC,QAAD,IAAc;AAClC,SAAOP,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,iBAAV,GAA8BK,QAAxC,EAAkD;AAAEF,IAAAA,OAAO,EAAEJ,UAAU;AAArB,GAAlD,CAAP;AACH,CAFD;;AAIA,MAAMO,SAAS,GAAG,CAACC,QAAD,EAAWC,SAAX,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoDC,QAApD,KAAiE;AAC/E,SAAOd,KAAK,CAACe,IAAN,CAAWb,OAAO,GAAG,UAArB,EAAiC;AACpCO,IAAAA,QADoC;AAEpCC,IAAAA,SAFoC;AAGpCC,IAAAA,QAHoC;AAIpCC,IAAAA,QAJoC;AAKpCC,IAAAA,QALoC;AAMpCC,IAAAA;AANoC,GAAjC,EAQP;AACAT,IAAAA,OAAO,EAAEJ,UAAU;AADnB,GARO,EAWNe,IAXM,CAWAC,QAAD,IAAc;AAElB,WAAOC,IAAI,CAACC,SAAL,CAAeF,QAAQ,CAACG,IAAxB,CAAP;AACD,GAdM,CAAP;AAeH,CAhBD;;AAkBA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,MAAX,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuClB,QAAvC,KAAoD;AAChE,SAAOP,KAAK,CAACe,IAAN,CAAWb,OAAO,GAAG,QAArB,EAA+B;AAClCwB,IAAAA,SAAS,EAAEJ,QADuB;AAElCC,IAAAA,MAFkC;AAGlCC,IAAAA,QAHkC;AAIlCC,IAAAA,QAJkC;AAKlClB,IAAAA;AALkC,GAA/B,EAOP;AACAF,IAAAA,OAAO,EAAEJ,UAAU;AADnB,GAPO,EAUNe,IAVM,CAUAC,QAAD,IAAc;AAElB,WAAOC,IAAI,CAACC,SAAL,CAAeF,QAAQ,CAACG,IAAxB,CAAP;AACD,GAbM,CAAP;AAcH,CAfD;;AAiBA,MAAMO,QAAQ,GAAIC,MAAD,IAAY;AACzB,SAAO5B,KAAK,CAACe,IAAN,CAAWb,OAAO,GAAG,SAAV,GAAsB0B,MAAtB,GAA+B,OAA1C,EAAmD,EAAnD,EAEP;AACAvB,IAAAA,OAAO,EAAEJ,UAAU;AADnB,GAFO,EAKNe,IALM,CAKAC,QAAD,IAAc;AAElB,WAAOC,IAAI,CAACC,SAAL,CAAeF,QAAQ,CAACG,IAAxB,CAAP;AACD,GARM,CAAP;AASH,CAVD;;AAYA,eAAe;AACbZ,EAAAA,SADa;AAEbF,EAAAA,eAFa;AAGbH,EAAAA,WAHa;AAIbkB,EAAAA,OAJa;AAKbM,EAAAA;AALa,CAAf","sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:8000/admin\";\r\n\r\nconst listRegions = () => {\r\n  return axios.get(API_URL + \"/regions\", { headers: authHeader() });\r\n};\r\n\r\nconst listRegionNodes = (regionID) => {\r\n    return axios.get(API_URL + \"/regions/nodes/\" + regionID, { headers: authHeader() });\r\n};\r\n\r\nconst addRegion = (fullName, shortName, proxHost, proxPort, password, proxUser) => {\r\n    return axios.post(API_URL + \"/regions\", {\r\n        fullName,\r\n        shortName,\r\n        proxHost,\r\n        proxPort,\r\n        password,\r\n        proxUser\r\n    },\r\n    {\r\n    headers: authHeader()\r\n    })\r\n    .then((response) => {\r\n  \r\n      return JSON.stringify(response.data);\r\n    });\r\n};\r\n\r\nconst addNode = (nodeName, nodeIP, nodeUser, nodePort, regionID) => {\r\n    return axios.post(API_URL + \"/nodes\", {\r\n        node_name: nodeName,\r\n        nodeIP,\r\n        nodeUser,\r\n        nodePort,\r\n        regionID\r\n    },\r\n    {\r\n    headers: authHeader()\r\n    })\r\n    .then((response) => {\r\n  \r\n      return JSON.stringify(response.data);\r\n    });\r\n};\r\n\r\nconst syncNode = (nodeID) => {\r\n    return axios.post(API_URL + \"/nodes/\" + nodeID + \"/sync\", {  \r\n    },\r\n    {\r\n    headers: authHeader()\r\n    })\r\n    .then((response) => {\r\n  \r\n      return JSON.stringify(response.data);\r\n    });\r\n};\r\n\r\nexport default {\r\n  addRegion,\r\n  listRegionNodes,\r\n  listRegions,\r\n  addNode,\r\n  syncNode\r\n};\r\n"]},"metadata":{},"sourceType":"module"}