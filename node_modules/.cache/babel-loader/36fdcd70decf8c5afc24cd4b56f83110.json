{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport vpsService from '../../../services/vps.service';\nimport { RadioGroup, RadioButton } from '@progress/kendo-react-inputs';\nexport const NameAndRegion = () => {\n  _s();\n\n  const [regions, setRegions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [vpsName, setVpsName] = useState([]);\n  const [reload, setReload] = useState(false);\n  var i;\n  var a;\n  useEffect(() => {\n    setLoading(true);\n    vpsService.listRegionsUser().then(response => {\n      console.log(response.data);\n      setRegions(response.data);\n      setLoading(false);\n      setReload(false);\n    }, error => {\n      const _content = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n\n      setRegions(_content);\n    });\n  }, [reload]);\n  return test // <div>\n  //   <div className='row'>\n  //     <div className='six columns'>\n  //       <label>VPS Name</label>\n  //       <input\n  //         className='u-full-width'\n  //         placeholder='My super VPS'\n  //         type='text'\n  //         onChange={e => setVpsName(e.target.value)}\n  //         value={vpsName}\n  //         autoFocus\n  //       />\n  //     </div>\n  //   </div>\n  //   {/* <div className='row'>\n  //     <div className='six columns'>\n  //     <RadioGroup\n  //       size={24}\n  //       thickness={2}\n  //       color=\"#9575b2\"\n  //       highlightColor=\"#ccc8b9\"\n  //       selectedIndex={1}\n  //       onSelect={regions => this._onSelect(regions, i++)}\n  //       >\n  //       {\n  //         a.options.map((regions, key) =>\n  //         (\n  //           <RadioButton value={regions.shortName}>\n  //             {regions.shortName}\n  //           </RadioButton>\n  //         ))\n  //       }\n  //     </RadioGroup>\n  //     </div>\n  //   </div> */}\n  // </div>\n  ;\n};\n\n_s(NameAndRegion, \"hfBwr13XNXV/D3NYRkXcAkd7GXA=\");\n\n_c = NameAndRegion;\nexport default NameAndRegion;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameAndRegion\");","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/src/components/Forms/CreateVps/NameAndRegion.js"],"names":["React","useState","useEffect","vpsService","RadioGroup","RadioButton","NameAndRegion","regions","setRegions","loading","setLoading","vpsName","setVpsName","reload","setReload","i","a","listRegionsUser","then","response","console","log","data","error","_content","message","toString","test"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,8BAAxC;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AAEA,MAAIc,CAAJ;AACA,MAAIC,CAAJ;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAP,IAAAA,UAAU,CAACc,eAAX,GAA6BC,IAA7B,CACGC,QAAD,IAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAd,MAAAA,UAAU,CAACW,QAAQ,CAACG,IAAV,CAAV;AACAZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KANH,EAOGS,KAAD,IAAW;AACT,YAAMC,QAAQ,GACXD,KAAK,CAACJ,QAAN,IACCI,KAAK,CAACJ,QAAN,CAAeG,IADhB,IAECC,KAAK,CAACJ,QAAN,CAAeG,IAAf,CAAoBG,OAFtB,IAGAF,KAAK,CAACE,OAHN,IAIAF,KAAK,CAACG,QAAN,EALF;;AAOAlB,MAAAA,UAAU,CAACgB,QAAD,CAAV;AACD,KAhBH;AAkBD,GApBQ,EAoBN,CAACX,MAAD,CApBM,CAAT;AAqBA,SACEc,IADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCF;AAuCD,CArEM;;GAAMrB,a;;KAAAA,a;AAuEb,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport vpsService from '../../../services/vps.service'\r\nimport { RadioGroup, RadioButton } from '@progress/kendo-react-inputs';\r\nexport const NameAndRegion = () => {\r\n  const [regions, setRegions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [vpsName, setVpsName] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  var i\r\n  var a\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    vpsService.listRegionsUser().then(\r\n      (response) => {\r\n        console.log(response.data)\r\n        setRegions(response.data)\r\n        setLoading(false);\r\n        setReload(false)\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setRegions(_content);\r\n      }\r\n    );\r\n  }, [reload]);\r\n  return (\r\n    test\r\n    // <div>\r\n    //   <div className='row'>\r\n    //     <div className='six columns'>\r\n    //       <label>VPS Name</label>\r\n    //       <input\r\n    //         className='u-full-width'\r\n    //         placeholder='My super VPS'\r\n    //         type='text'\r\n    //         onChange={e => setVpsName(e.target.value)}\r\n    //         value={vpsName}\r\n    //         autoFocus\r\n    //       />\r\n    //     </div>\r\n    //   </div>\r\n    //   {/* <div className='row'>\r\n    //     <div className='six columns'>\r\n    //     <RadioGroup\r\n    //       size={24}\r\n    //       thickness={2}\r\n    //       color=\"#9575b2\"\r\n    //       highlightColor=\"#ccc8b9\"\r\n    //       selectedIndex={1}\r\n    //       onSelect={regions => this._onSelect(regions, i++)}\r\n    //       >\r\n    //       {\r\n    //         a.options.map((regions, key) =>\r\n    //         (\r\n    //           <RadioButton value={regions.shortName}>\r\n    //             {regions.shortName}\r\n    //           </RadioButton>\r\n    //         ))\r\n    //       }\r\n    //     </RadioGroup>\r\n    //     </div>\r\n    //   </div> */}\r\n    // </div>\r\n  )\r\n}\r\n\r\nexport default NameAndRegion"]},"metadata":{},"sourceType":"module"}