{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connectAdvanced } from \"react-redux\";\nimport UserService from \"../services/user.service\";\n\nconst ClearRecentTasks = () => {\n  _s();\n\n  const [content, setContent] = useState([]);\n  useEffect(() => {\n    UserService.listRecentTasks().then(response => {\n      setContent(response.data);\n    }, error => {\n      const _content = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n\n      setContent(_content);\n    });\n  }, []);\n  return content;\n};\n\n_s(ClearRecentTasks, \"gRb/xpZ2tFPFe5xJrmrGOH9fIlI=\");\n\n_c = ClearRecentTasks;\nexport default ClearRecentTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClearRecentTasks\");","map":{"version":3,"sources":["/home/finn/Documents/heycloud-frontend/heycloud-frontend/src/components/ClearRecentTasks.js"],"names":["React","useState","useEffect","connectAdvanced","UserService","ClearRecentTasks","content","setContent","listRecentTasks","then","response","data","error","_content","message","toString"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,aAAhC;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;;AAGA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,WAAW,CAACI,eAAZ,GAA8BC,IAA9B,CACGC,QAAD,IAAc;AACZH,MAAAA,UAAU,CAACG,QAAQ,CAACC,IAAV,CAAV;AACD,KAHH,EAIGC,KAAD,IAAW;AACT,YAAMC,QAAQ,GACXD,KAAK,CAACF,QAAN,IACCE,KAAK,CAACF,QAAN,CAAeC,IADhB,IAECC,KAAK,CAACF,QAAN,CAAeC,IAAf,CAAoBG,OAFtB,IAGAF,KAAK,CAACE,OAHN,IAIAF,KAAK,CAACG,QAAN,EALF;;AAOAR,MAAAA,UAAU,CAACM,QAAD,CAAV;AACD,KAbH;AAeD,GAhBM,EAgBJ,EAhBI,CAAT;AAiBA,SACIP,OADJ;AAGH,CAtBD;;GAAMD,gB;;KAAAA,gB;AAwBN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connectAdvanced } from \"react-redux\";\n\nimport UserService from \"../services/user.service\";\n\n\nconst ClearRecentTasks = () => {\n    const [content, setContent] = useState([]);\n    useEffect(() => {\n        UserService.listRecentTasks().then(\n          (response) => {\n            setContent(response.data);\n          },\n          (error) => {\n            const _content =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n    \n            setContent(_content);\n          }\n        );\n      }, []);\n    return (\n        content\n    )\n}\n\nexport default ClearRecentTasks\n"]},"metadata":{},"sourceType":"module"}