{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getTabIndex } from '@progress/kendo-react-common';\nimport { UploadFileStatus } from './interfaces/UploadFileStatus';\nimport { UploadNavigation } from './UploadNavigation';\nimport axios from 'axios';\nimport utils from './utils/utils';\nimport stateUtils from './utils/stateUtils';\nimport connectionUtils from './utils/connectionUtils';\nimport validationUtils from './utils/validationUtils';\nimport { validatePackage } from '@progress/kendo-react-common';\nimport { packageMetadata } from './package-metadata';\n\nvar Upload =\n/** @class */\nfunction (_super) {\n  __extends(Upload, _super);\n\n  function Upload(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._httpSubscriptions = {};\n    _this._uploadNavigation = null;\n    /**\n     * @hidden\n     */\n\n    _this.focus = function () {\n      if (_this._uploadNavigation) {\n        _this._uploadNavigation.focus();\n      }\n    };\n    /**\n     * Upload the selected files. Usable when the upload action is triggered by external code.\n     */\n\n\n    _this.triggerUpload = function () {\n      _this.onUpload();\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.uploadFiles = function (filesForUpload) {\n      var async = _this.async;\n      stateUtils.setFilesStatus(filesForUpload, UploadFileStatus.Uploading);\n      stateUtils.groupForEach(filesForUpload, function (currentFiles, uid) {\n        var headers = connectionUtils.cloneRequestHeaders(async.saveHeaders || {});\n        var additionalData = {};\n        var eventData = {\n          target: _this,\n          files: currentFiles,\n          headers: headers,\n          additionalData: additionalData\n        };\n\n        if (_this.props.onBeforeUpload) {\n          _this.props.onBeforeUpload.call(undefined, eventData);\n        }\n\n        var requestOptions = connectionUtils.populateRequestOptions(eventData.headers, _this.async);\n        var formData = connectionUtils.populateUploadFormData(currentFiles, async.saveField, eventData.additionalData);\n\n        if (_this.isCustomSave) {\n          _this.props.saveUrl(currentFiles, {\n            formData: formData,\n            requestOptions: requestOptions\n          }, _this.onUploadProgress).then(function (event) {\n            return _this.onUploadSuccess(event.uid);\n          }).catch(function (event) {\n            return _this.onUploadError(event.uid);\n          });\n        } else {\n          var cancelTokenSource = axios.CancelToken.source();\n          _this._httpSubscriptions[uid] = cancelTokenSource;\n          axios(__assign(__assign({\n            method: async.saveMethod,\n            url: async.saveUrl,\n            data: formData,\n            cancelToken: cancelTokenSource.token\n          }, requestOptions), {\n            onUploadProgress: function (event) {\n              return _this.onUploadProgress(uid, event);\n            }\n          })).then(function (event) {\n            return _this.onUploadSuccess(uid, event);\n          }).catch(function (event) {\n            return _this.onUploadError(uid, event);\n          });\n        }\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.removeFiles = function (filesForRemove) {\n      var async = _this.async;\n      stateUtils.groupForEach(filesForRemove, function (currentFiles, uid) {\n        var headers = connectionUtils.cloneRequestHeaders(async.removeHeaders || {});\n        var additionalData = {};\n        var eventData = {\n          target: _this,\n          files: currentFiles,\n          headers: headers,\n          additionalData: additionalData\n        };\n\n        if (_this.props.onBeforeRemove) {\n          _this.props.onBeforeRemove.call(undefined, eventData);\n        }\n\n        var fileNames = currentFiles.map(function (file) {\n          return file.name;\n        });\n        var requestOptions = connectionUtils.populateRequestOptions(eventData.headers, _this.async);\n        var formData = connectionUtils.populateRemoveFormData(fileNames, async.removeField, eventData.additionalData);\n\n        if (_this.isCustomRemove) {\n          _this.props.removeUrl(currentFiles, {\n            formData: formData,\n            requestOptions: requestOptions\n          }).then(function (event) {\n            return _this.onRemoveSuccess(event.uid);\n          }).catch(function (event) {\n            return _this.onRemoveError(event.uid);\n          });\n        } else {\n          axios(__assign({\n            method: async.removeMethod,\n            url: async.removeUrl,\n            data: formData\n          }, requestOptions)).then(function (event) {\n            return _this.onRemoveSuccess(uid, event);\n          }).catch(function (event) {\n            return _this.onRemoveError(uid, event);\n          });\n        }\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onUpload = function () {\n      var newState = _this.fileStateCopy;\n      var groupedFiles = stateUtils.groupFilesByUid(newState);\n      var filesForUpload = stateUtils.filesForUpload(groupedFiles);\n\n      _this.uploadFiles(filesForUpload);\n\n      var onStatusChangeEvent = function () {\n        if (_this.props.onStatusChange) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: stateUtils.flatFileGroup(filesForUpload)\n          };\n\n          _this.props.onStatusChange.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onStatusChangeEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onStatusChangeEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onAdd = function (files) {\n      // The problem when removing rawFile is that there is no reliable way of preserving it internally.\n      // For example, uid + filename - the filename can be changed at any moment.\n      var selectedFiles = utils.getAllFileInfo(files);\n      var newState;\n      selectedFiles = utils.assignGuidToFiles(selectedFiles, _this.async.batch);\n      validationUtils.validateFiles(selectedFiles, _this.props.restrictions);\n\n      if (!_this.props.multiple) {\n        newState = [];\n      } else {\n        newState = _this.fileStateCopy;\n      }\n\n      stateUtils.addMany(selectedFiles, newState);\n\n      if (_this.async.autoUpload) {\n        var groupedFiles = stateUtils.groupFilesByUid(newState);\n\n        _this.uploadFiles(stateUtils.filesForUpload(groupedFiles));\n      }\n\n      var onAddEvent = function () {\n        if (_this.props.onAdd) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: selectedFiles\n          };\n\n          _this.props.onAdd.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onAddEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onAddEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onUploadProgress = function (uid, event) {\n      var percentComplete = Math.round(100 * event.loaded / event.total) || 0;\n      var newState = _this.fileStateCopy;\n      var filesWithProgress = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n\n      if (!filesWithProgress.length) {\n        return;\n      }\n\n      filesWithProgress.forEach(function (file) {\n        file.progress = percentComplete;\n      });\n\n      var onProgressEvent = function () {\n        if (_this.props.onProgress) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: filesWithProgress\n          };\n\n          _this.props.onProgress.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onProgressEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onProgressEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onUploadSuccess = function (uid, event) {\n      var newState = _this.fileStateCopy;\n      var successFiles = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n      successFiles.forEach(function (file) {\n        file.status = UploadFileStatus.Uploaded;\n      });\n      delete _this._httpSubscriptions[uid];\n\n      var onStatusChangeEvent = function () {\n        if (_this.props.onStatusChange) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: successFiles,\n            response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n          };\n\n          _this.props.onStatusChange.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onStatusChangeEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onStatusChangeEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onUploadError = function (uid, event) {\n      var newState = _this.fileStateCopy;\n      var failedFiles = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n      failedFiles.forEach(function (file) {\n        file.status = UploadFileStatus.UploadFailed;\n      });\n      delete _this._httpSubscriptions[uid];\n\n      if (!failedFiles.length) {\n        return;\n      }\n\n      var onStatusChangeEvent = function () {\n        if (_this.props.onStatusChange) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: failedFiles,\n            response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n          };\n\n          _this.props.onStatusChange.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onStatusChangeEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onStatusChangeEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onRemove = function (uid) {\n      var _a;\n\n      var newState = _this.fileStateCopy;\n      var filesForRemove = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n      var filesToKeep = newState.filter(function (file) {\n        return file.uid !== uid;\n      });\n      var remoteRemoveStatuses = [UploadFileStatus.Uploaded, UploadFileStatus.Initial, UploadFileStatus.RemoveFailed];\n\n      if (remoteRemoveStatuses.indexOf(filesForRemove[0].status) > -1) {\n        var fileGroup = (_a = {}, _a[uid] = filesForRemove, _a);\n        stateUtils.setFilesStatus(fileGroup, UploadFileStatus.Removing);\n\n        _this.removeFiles(fileGroup);\n\n        var onStatusChangeEvent = function () {\n          if (_this.props.onStatusChange) {\n            var eventData = {\n              target: _this,\n              newState: newState,\n              affectedFiles: filesForRemove\n            };\n\n            _this.props.onStatusChange.call(undefined, eventData);\n          }\n        };\n\n        if (_this.isControlled) {\n          onStatusChangeEvent();\n        } else {\n          _this.setState({\n            files: newState\n          }, onStatusChangeEvent);\n        }\n      } else {\n        var onRemoveEvent = function () {\n          if (_this.props.onRemove) {\n            var eventData = {\n              target: _this,\n              newState: filesToKeep,\n              affectedFiles: filesForRemove\n            };\n\n            _this.props.onRemove.call(undefined, eventData);\n          }\n        };\n\n        if (_this.isControlled) {\n          onRemoveEvent();\n        } else {\n          _this.setState({\n            files: filesToKeep\n          }, onRemoveEvent);\n        }\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onRemoveSuccess = function (uid, event) {\n      var newState = _this.fileStateCopy;\n      var filesForRemove = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n      var filesToKeep = newState.filter(function (file) {\n        return file.uid !== uid;\n      });\n\n      var onRemoveEvent = function () {\n        if (_this.props.onRemove) {\n          var eventData = {\n            target: _this,\n            newState: filesToKeep,\n            affectedFiles: filesForRemove,\n            response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n          };\n\n          _this.props.onRemove.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onRemoveEvent();\n      } else {\n        _this.setState({\n          files: filesToKeep\n        }, onRemoveEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onRemoveError = function (uid, event) {\n      var newState = _this.fileStateCopy;\n      var failedFiles = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n      failedFiles.forEach(function (file) {\n        file.status = UploadFileStatus.RemoveFailed;\n      });\n\n      var onStatusChangeEvent = function () {\n        if (_this.props.onStatusChange) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: failedFiles,\n            response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n          };\n\n          _this.props.onStatusChange.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onStatusChangeEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onStatusChangeEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onRetry = function (uid) {\n      var newState = _this.fileStateCopy;\n      var filesForRetry = stateUtils.groupFilesByUid(newState.filter(function (file) {\n        return file.uid === uid;\n      }));\n      stateUtils.setFilesStatus(filesForRetry, UploadFileStatus.Uploading);\n\n      _this.uploadFiles(filesForRetry);\n\n      var onStatusChangeEvent = function () {\n        if (_this.props.onStatusChange) {\n          var eventData = {\n            target: _this,\n            newState: newState,\n            affectedFiles: stateUtils.flatFileGroup(filesForRetry)\n          };\n\n          _this.props.onStatusChange.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onStatusChangeEvent();\n      } else {\n        _this.setState({\n          files: newState\n        }, onStatusChangeEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onCancel = function (uid) {\n      var newState = _this.fileStateCopy;\n      var filesToKeep = newState.filter(function (file) {\n        return file.uid !== uid;\n      });\n      var filesForRemove = newState.filter(function (file) {\n        return file.uid === uid;\n      });\n\n      if (_this._httpSubscriptions[uid]) {\n        _this._httpSubscriptions[uid].cancel();\n\n        delete _this._httpSubscriptions[uid];\n      }\n\n      if (_this.props.onCancel) {\n        var eventData = {\n          target: _this,\n          uid: uid\n        };\n\n        _this.props.onCancel.call(undefined, eventData);\n      }\n\n      var onRemoveEvent = function () {\n        if (_this.props.onRemove) {\n          var eventData = {\n            target: _this,\n            newState: filesToKeep,\n            affectedFiles: filesForRemove\n          };\n\n          _this.props.onRemove.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onRemoveEvent();\n      } else {\n        _this.setState({\n          files: filesToKeep\n        }, onRemoveEvent);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onClear = function () {\n      if (!_this.files.length) {\n        return;\n      }\n\n      Object.keys(_this._httpSubscriptions).forEach(function (key) {\n        _this._httpSubscriptions[key].cancel();\n      });\n      _this._httpSubscriptions = {};\n\n      var onRemoveEvent = function () {\n        if (_this.props.onRemove) {\n          var eventData = {\n            target: _this,\n            newState: [],\n            affectedFiles: _this.fileStateCopy\n          };\n\n          _this.props.onRemove.call(undefined, eventData);\n        }\n      };\n\n      if (_this.isControlled) {\n        onRemoveEvent();\n      } else {\n        _this.setState({\n          files: []\n        }, onRemoveEvent);\n      }\n    };\n\n    validatePackage(packageMetadata);\n    _this.state = {\n      files: props.defaultFiles || []\n    };\n    return _this;\n  }\n\n  Object.defineProperty(Upload.prototype, \"async\", {\n    get: function () {\n      var _a = this.props,\n          autoUpload = _a.autoUpload,\n          batch = _a.batch,\n          removeField = _a.removeField,\n          removeHeaders = _a.removeHeaders,\n          removeMethod = _a.removeMethod,\n          removeUrl = _a.removeUrl,\n          responseType = _a.responseType,\n          saveField = _a.saveField,\n          saveHeaders = _a.saveHeaders,\n          saveMethod = _a.saveMethod,\n          saveUrl = _a.saveUrl,\n          withCredentials = _a.withCredentials;\n      return {\n        autoUpload: autoUpload,\n        batch: batch,\n        removeField: removeField,\n        removeHeaders: removeHeaders,\n        removeMethod: removeMethod,\n        removeUrl: removeUrl,\n        responseType: responseType,\n        saveField: saveField,\n        saveHeaders: saveHeaders,\n        saveMethod: saveMethod,\n        saveUrl: saveUrl,\n        withCredentials: withCredentials\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Upload.prototype, \"files\", {\n    get: function () {\n      var files = this.isControlled ? this.props.files : this.state.files;\n      return files || [];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Upload.prototype, \"isControlled\", {\n    get: function () {\n      return !this.props.defaultFiles;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Upload.prototype, \"isCustomSave\", {\n    get: function () {\n      return this.props.saveUrl && typeof this.props.saveUrl === 'function';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Upload.prototype, \"isCustomRemove\", {\n    get: function () {\n      return this.props.removeUrl && typeof this.props.removeUrl === 'function';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Upload.prototype, \"fileStateCopy\", {\n    get: function () {\n      if (this.isControlled) {\n        return stateUtils.copyState(this.props.files);\n      } else {\n        return stateUtils.copyState(this.state.files);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Upload.prototype, \"actionElement\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      if (this._uploadNavigation) {\n        return this._uploadNavigation.actionElement;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  Upload.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        showFileList = _a.showFileList,\n        onAdd = _a.onAdd,\n        onRemove = _a.onRemove,\n        onCancel = _a.onCancel,\n        autoUpload = _a.autoUpload,\n        showActionButtons = _a.showActionButtons,\n        actionsLayout = _a.actionsLayout,\n        tabIndex = _a.tabIndex,\n        disabled = _a.disabled,\n        others = __rest(_a, [\"showFileList\", \"onAdd\", \"onRemove\", \"onCancel\", \"autoUpload\", \"showActionButtons\", \"actionsLayout\", \"tabIndex\", \"disabled\"]);\n\n    var groupedFiles = stateUtils.groupFilesByUid(this.files);\n    var filesForUpload = stateUtils.filesForUpload(groupedFiles);\n    return React.createElement(UploadNavigation, __assign({\n      groupedFiles: groupedFiles,\n      className: this.props.className,\n      showFileList: showFileList && !!Object.keys(groupedFiles).length,\n      showActionButtons: showActionButtons && !autoUpload && !!Object.keys(filesForUpload).length,\n      actionsLayout: actionsLayout,\n      autoUpload: autoUpload,\n      disabled: disabled,\n      onAdd: this.onAdd,\n      onRemove: this.onRemove,\n      onClear: this.onClear,\n      onUpload: this.onUpload,\n      onRetry: this.onRetry,\n      onCancel: this.onCancel,\n      tabIndex: getTabIndex(tabIndex, disabled),\n      ref: function (ref) {\n        return _this._uploadNavigation = ref;\n      }\n    }, others));\n  };\n  /**\n   * @hidden\n   */\n\n\n  Upload.defaultProps = {\n    autoUpload: true,\n    batch: false,\n    removeField: 'fileNames',\n    removeHeaders: {},\n    removeMethod: 'POST',\n    removeUrl: '',\n    responseType: 'json',\n    saveField: 'files',\n    saveHeaders: {},\n    saveMethod: 'POST',\n    saveUrl: '',\n    withCredentials: true,\n    restrictions: {\n      allowedExtensions: [],\n      maxFileSize: 0,\n      minFileSize: 0\n    },\n    multiple: true,\n    showFileList: true,\n    showActionButtons: true,\n    actionsLayout: 'end',\n    disabled: false\n  };\n  /**\n   * @hidden\n   */\n\n  Upload.propTypes = {\n    autoUpload: PropTypes.bool,\n    batch: PropTypes.bool,\n    withCredentials: PropTypes.bool,\n    saveField: PropTypes.string,\n    saveHeaders: PropTypes.object,\n    saveMethod: PropTypes.string,\n    saveUrl: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    responseType: PropTypes.oneOf(['arraybuffer', 'blob', 'json', 'text']),\n    removeField: PropTypes.string,\n    removeHeaders: PropTypes.object,\n    removeMethod: PropTypes.string,\n    removeUrl: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    multiple: PropTypes.bool,\n    disabled: PropTypes.bool,\n    showFileList: PropTypes.bool,\n    showActionButtons: PropTypes.bool,\n    actionsLayout: PropTypes.oneOf(['start', 'center', 'end', 'stretched']),\n    tabIndex: PropTypes.number,\n    accept: PropTypes.string,\n    listItemUI: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n      render: PropTypes.func.isRequired\n    })]),\n    restrictions: PropTypes.shape({\n      allowedExtensions: PropTypes.arrayOf(PropTypes.string),\n      maxFileSize: PropTypes.number,\n      minFileSize: PropTypes.number\n    }),\n    files: PropTypes.arrayOf(PropTypes.shape({\n      uid: PropTypes.string,\n      name: PropTypes.string,\n      extension: PropTypes.string,\n      size: PropTypes.number,\n      validationErrors: PropTypes.arrayOf(PropTypes.string),\n      status: PropTypes.oneOf([UploadFileStatus.Initial, UploadFileStatus.RemoveFailed, UploadFileStatus.Removing, UploadFileStatus.Selected, UploadFileStatus.UploadFailed, UploadFileStatus.Uploaded, UploadFileStatus.Uploading]),\n      progress: PropTypes.number,\n      getRawFile: PropTypes.func\n    })),\n    defaultFiles: PropTypes.arrayOf(PropTypes.shape({\n      uid: PropTypes.string,\n      name: PropTypes.string,\n      extension: PropTypes.string,\n      size: PropTypes.number,\n      validationErrors: PropTypes.arrayOf(PropTypes.string),\n      status: PropTypes.oneOf([UploadFileStatus.Initial, UploadFileStatus.RemoveFailed, UploadFileStatus.Removing, UploadFileStatus.Selected, UploadFileStatus.UploadFailed, UploadFileStatus.Uploaded, UploadFileStatus.Uploading]),\n      progress: PropTypes.number,\n      getRawFile: PropTypes.func\n    }))\n  };\n  return Upload;\n}(React.Component);\n\nexport { Upload };","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-upload/dist/es/Upload.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","PropTypes","getTabIndex","UploadFileStatus","UploadNavigation","axios","utils","stateUtils","connectionUtils","validationUtils","validatePackage","packageMetadata","Upload","_super","props","_this","_httpSubscriptions","_uploadNavigation","focus","triggerUpload","onUpload","uploadFiles","filesForUpload","async","setFilesStatus","Uploading","groupForEach","currentFiles","uid","headers","cloneRequestHeaders","saveHeaders","additionalData","eventData","target","files","onBeforeUpload","undefined","requestOptions","populateRequestOptions","formData","populateUploadFormData","saveField","isCustomSave","saveUrl","onUploadProgress","then","event","onUploadSuccess","catch","onUploadError","cancelTokenSource","CancelToken","source","method","saveMethod","url","data","cancelToken","token","removeFiles","filesForRemove","removeHeaders","onBeforeRemove","fileNames","map","file","name","populateRemoveFormData","removeField","isCustomRemove","removeUrl","onRemoveSuccess","onRemoveError","removeMethod","newState","fileStateCopy","groupedFiles","groupFilesByUid","onStatusChangeEvent","onStatusChange","affectedFiles","flatFileGroup","isControlled","setState","onAdd","selectedFiles","getAllFileInfo","assignGuidToFiles","batch","validateFiles","restrictions","multiple","addMany","autoUpload","onAddEvent","percentComplete","Math","round","loaded","total","filesWithProgress","filter","forEach","progress","onProgressEvent","onProgress","successFiles","status","Uploaded","response","convertAxiosResponse","failedFiles","UploadFailed","onRemove","_a","filesToKeep","remoteRemoveStatuses","Initial","RemoveFailed","fileGroup","Removing","onRemoveEvent","onRetry","filesForRetry","onCancel","cancel","onClear","keys","key","state","defaultFiles","defineProperty","get","responseType","withCredentials","enumerable","configurable","copyState","actionElement","render","showFileList","showActionButtons","actionsLayout","tabIndex","disabled","others","createElement","className","ref","defaultProps","allowedExtensions","maxFileSize","minFileSize","propTypes","bool","string","object","oneOfType","func","oneOf","number","accept","listItemUI","shape","isRequired","arrayOf","extension","size","validationErrors","Selected","getRawFile","Component"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getTabIndex } from '@progress/kendo-react-common';\nimport { UploadFileStatus } from './interfaces/UploadFileStatus';\nimport { UploadNavigation } from './UploadNavigation';\nimport axios from 'axios';\nimport utils from './utils/utils';\nimport stateUtils from './utils/stateUtils';\nimport connectionUtils from './utils/connectionUtils';\nimport validationUtils from './utils/validationUtils';\nimport { validatePackage } from '@progress/kendo-react-common';\nimport { packageMetadata } from './package-metadata';\nvar Upload = /** @class */ (function (_super) {\n    __extends(Upload, _super);\n    function Upload(props) {\n        var _this = _super.call(this, props) || this;\n        _this._httpSubscriptions = {};\n        _this._uploadNavigation = null;\n        /**\n         * @hidden\n         */\n        _this.focus = function () {\n            if (_this._uploadNavigation) {\n                _this._uploadNavigation.focus();\n            }\n        };\n        /**\n         * Upload the selected files. Usable when the upload action is triggered by external code.\n         */\n        _this.triggerUpload = function () {\n            _this.onUpload();\n        };\n        /**\n         * @hidden\n         */\n        _this.uploadFiles = function (filesForUpload) {\n            var async = _this.async;\n            stateUtils.setFilesStatus(filesForUpload, UploadFileStatus.Uploading);\n            stateUtils.groupForEach(filesForUpload, function (currentFiles, uid) {\n                var headers = connectionUtils.cloneRequestHeaders(async.saveHeaders || {});\n                var additionalData = {};\n                var eventData = {\n                    target: _this,\n                    files: currentFiles,\n                    headers: headers,\n                    additionalData: additionalData\n                };\n                if (_this.props.onBeforeUpload) {\n                    _this.props.onBeforeUpload.call(undefined, eventData);\n                }\n                var requestOptions = connectionUtils.populateRequestOptions(eventData.headers, _this.async);\n                var formData = connectionUtils.populateUploadFormData(currentFiles, async.saveField, eventData.additionalData);\n                if (_this.isCustomSave) {\n                    _this.props.saveUrl(currentFiles, { formData: formData, requestOptions: requestOptions }, _this.onUploadProgress)\n                        .then(function (event) { return _this.onUploadSuccess(event.uid); })\n                        .catch(function (event) { return _this.onUploadError(event.uid); });\n                }\n                else {\n                    var cancelTokenSource = axios.CancelToken.source();\n                    _this._httpSubscriptions[uid] = cancelTokenSource;\n                    axios(__assign(__assign({ method: async.saveMethod, url: async.saveUrl, data: formData, cancelToken: cancelTokenSource.token }, requestOptions), { onUploadProgress: function (event) { return _this.onUploadProgress(uid, event); } }))\n                        .then(function (event) { return _this.onUploadSuccess(uid, event); })\n                        .catch(function (event) { return _this.onUploadError(uid, event); });\n                }\n            });\n        };\n        /**\n         * @hidden\n         */\n        _this.removeFiles = function (filesForRemove) {\n            var async = _this.async;\n            stateUtils.groupForEach(filesForRemove, function (currentFiles, uid) {\n                var headers = connectionUtils.cloneRequestHeaders(async.removeHeaders || {});\n                var additionalData = {};\n                var eventData = {\n                    target: _this,\n                    files: currentFiles,\n                    headers: headers,\n                    additionalData: additionalData\n                };\n                if (_this.props.onBeforeRemove) {\n                    _this.props.onBeforeRemove.call(undefined, eventData);\n                }\n                var fileNames = currentFiles.map(function (file) { return file.name; });\n                var requestOptions = connectionUtils.populateRequestOptions(eventData.headers, _this.async);\n                var formData = connectionUtils.populateRemoveFormData(fileNames, async.removeField, eventData.additionalData);\n                if (_this.isCustomRemove) {\n                    _this.props.removeUrl(currentFiles, { formData: formData, requestOptions: requestOptions })\n                        .then(function (event) { return _this.onRemoveSuccess(event.uid); })\n                        .catch(function (event) { return _this.onRemoveError(event.uid); });\n                }\n                else {\n                    axios(__assign({ method: async.removeMethod, url: async.removeUrl, data: formData }, requestOptions))\n                        .then(function (event) { return _this.onRemoveSuccess(uid, event); })\n                        .catch(function (event) { return _this.onRemoveError(uid, event); });\n                }\n            });\n        };\n        /**\n         * @hidden\n         */\n        _this.onUpload = function () {\n            var newState = _this.fileStateCopy;\n            var groupedFiles = stateUtils.groupFilesByUid(newState);\n            var filesForUpload = stateUtils.filesForUpload(groupedFiles);\n            _this.uploadFiles(filesForUpload);\n            var onStatusChangeEvent = function () {\n                if (_this.props.onStatusChange) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: stateUtils.flatFileGroup(filesForUpload)\n                    };\n                    _this.props.onStatusChange.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onStatusChangeEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onStatusChangeEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onAdd = function (files) {\n            // The problem when removing rawFile is that there is no reliable way of preserving it internally.\n            // For example, uid + filename - the filename can be changed at any moment.\n            var selectedFiles = utils.getAllFileInfo(files);\n            var newState;\n            selectedFiles = utils.assignGuidToFiles(selectedFiles, _this.async.batch);\n            validationUtils.validateFiles(selectedFiles, _this.props.restrictions);\n            if (!_this.props.multiple) {\n                newState = [];\n            }\n            else {\n                newState = _this.fileStateCopy;\n            }\n            stateUtils.addMany(selectedFiles, newState);\n            if (_this.async.autoUpload) {\n                var groupedFiles = stateUtils.groupFilesByUid(newState);\n                _this.uploadFiles(stateUtils.filesForUpload(groupedFiles));\n            }\n            var onAddEvent = function () {\n                if (_this.props.onAdd) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: selectedFiles\n                    };\n                    _this.props.onAdd.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onAddEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onAddEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onUploadProgress = function (uid, event) {\n            var percentComplete = Math.round(100 * event.loaded / event.total) || 0;\n            var newState = _this.fileStateCopy;\n            var filesWithProgress = newState.filter(function (file) { return file.uid === uid; });\n            if (!filesWithProgress.length) {\n                return;\n            }\n            filesWithProgress.forEach(function (file) {\n                file.progress = percentComplete;\n            });\n            var onProgressEvent = function () {\n                if (_this.props.onProgress) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: filesWithProgress\n                    };\n                    _this.props.onProgress.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onProgressEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onProgressEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onUploadSuccess = function (uid, event) {\n            var newState = _this.fileStateCopy;\n            var successFiles = newState.filter(function (file) { return file.uid === uid; });\n            successFiles.forEach(function (file) {\n                file.status = UploadFileStatus.Uploaded;\n            });\n            delete _this._httpSubscriptions[uid];\n            var onStatusChangeEvent = function () {\n                if (_this.props.onStatusChange) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: successFiles,\n                        response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n                    };\n                    _this.props.onStatusChange.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onStatusChangeEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onStatusChangeEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onUploadError = function (uid, event) {\n            var newState = _this.fileStateCopy;\n            var failedFiles = newState.filter(function (file) { return file.uid === uid; });\n            failedFiles.forEach(function (file) {\n                file.status = UploadFileStatus.UploadFailed;\n            });\n            delete _this._httpSubscriptions[uid];\n            if (!failedFiles.length) {\n                return;\n            }\n            var onStatusChangeEvent = function () {\n                if (_this.props.onStatusChange) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: failedFiles,\n                        response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n                    };\n                    _this.props.onStatusChange.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onStatusChangeEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onStatusChangeEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onRemove = function (uid) {\n            var _a;\n            var newState = _this.fileStateCopy;\n            var filesForRemove = newState.filter(function (file) { return file.uid === uid; });\n            var filesToKeep = newState.filter(function (file) { return file.uid !== uid; });\n            var remoteRemoveStatuses = [\n                UploadFileStatus.Uploaded,\n                UploadFileStatus.Initial,\n                UploadFileStatus.RemoveFailed\n            ];\n            if (remoteRemoveStatuses.indexOf(filesForRemove[0].status) > -1) {\n                var fileGroup = (_a = {},\n                    _a[uid] = filesForRemove,\n                    _a);\n                stateUtils.setFilesStatus(fileGroup, UploadFileStatus.Removing);\n                _this.removeFiles(fileGroup);\n                var onStatusChangeEvent = function () {\n                    if (_this.props.onStatusChange) {\n                        var eventData = {\n                            target: _this,\n                            newState: newState,\n                            affectedFiles: filesForRemove\n                        };\n                        _this.props.onStatusChange.call(undefined, eventData);\n                    }\n                };\n                if (_this.isControlled) {\n                    onStatusChangeEvent();\n                }\n                else {\n                    _this.setState({ files: newState }, onStatusChangeEvent);\n                }\n            }\n            else {\n                var onRemoveEvent = function () {\n                    if (_this.props.onRemove) {\n                        var eventData = {\n                            target: _this,\n                            newState: filesToKeep,\n                            affectedFiles: filesForRemove\n                        };\n                        _this.props.onRemove.call(undefined, eventData);\n                    }\n                };\n                if (_this.isControlled) {\n                    onRemoveEvent();\n                }\n                else {\n                    _this.setState({ files: filesToKeep }, onRemoveEvent);\n                }\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onRemoveSuccess = function (uid, event) {\n            var newState = _this.fileStateCopy;\n            var filesForRemove = newState.filter(function (file) { return file.uid === uid; });\n            var filesToKeep = newState.filter(function (file) { return file.uid !== uid; });\n            var onRemoveEvent = function () {\n                if (_this.props.onRemove) {\n                    var eventData = {\n                        target: _this,\n                        newState: filesToKeep,\n                        affectedFiles: filesForRemove,\n                        response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n                    };\n                    _this.props.onRemove.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onRemoveEvent();\n            }\n            else {\n                _this.setState({ files: filesToKeep }, onRemoveEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onRemoveError = function (uid, event) {\n            var newState = _this.fileStateCopy;\n            var failedFiles = newState.filter(function (file) { return file.uid === uid; });\n            failedFiles.forEach(function (file) {\n                file.status = UploadFileStatus.RemoveFailed;\n            });\n            var onStatusChangeEvent = function () {\n                if (_this.props.onStatusChange) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: failedFiles,\n                        response: event ? connectionUtils.convertAxiosResponse(event) : undefined\n                    };\n                    _this.props.onStatusChange.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onStatusChangeEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onStatusChangeEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onRetry = function (uid) {\n            var newState = _this.fileStateCopy;\n            var filesForRetry = stateUtils.groupFilesByUid(newState.filter(function (file) { return file.uid === uid; }));\n            stateUtils.setFilesStatus(filesForRetry, UploadFileStatus.Uploading);\n            _this.uploadFiles(filesForRetry);\n            var onStatusChangeEvent = function () {\n                if (_this.props.onStatusChange) {\n                    var eventData = {\n                        target: _this,\n                        newState: newState,\n                        affectedFiles: stateUtils.flatFileGroup(filesForRetry)\n                    };\n                    _this.props.onStatusChange.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onStatusChangeEvent();\n            }\n            else {\n                _this.setState({ files: newState }, onStatusChangeEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onCancel = function (uid) {\n            var newState = _this.fileStateCopy;\n            var filesToKeep = newState.filter(function (file) { return file.uid !== uid; });\n            var filesForRemove = newState.filter(function (file) { return file.uid === uid; });\n            if (_this._httpSubscriptions[uid]) {\n                _this._httpSubscriptions[uid].cancel();\n                delete _this._httpSubscriptions[uid];\n            }\n            if (_this.props.onCancel) {\n                var eventData = {\n                    target: _this,\n                    uid: uid\n                };\n                _this.props.onCancel.call(undefined, eventData);\n            }\n            var onRemoveEvent = function () {\n                if (_this.props.onRemove) {\n                    var eventData = {\n                        target: _this,\n                        newState: filesToKeep,\n                        affectedFiles: filesForRemove\n                    };\n                    _this.props.onRemove.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onRemoveEvent();\n            }\n            else {\n                _this.setState({ files: filesToKeep }, onRemoveEvent);\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onClear = function () {\n            if (!_this.files.length) {\n                return;\n            }\n            Object.keys(_this._httpSubscriptions).forEach(function (key) {\n                _this._httpSubscriptions[key].cancel();\n            });\n            _this._httpSubscriptions = {};\n            var onRemoveEvent = function () {\n                if (_this.props.onRemove) {\n                    var eventData = {\n                        target: _this,\n                        newState: [],\n                        affectedFiles: _this.fileStateCopy\n                    };\n                    _this.props.onRemove.call(undefined, eventData);\n                }\n            };\n            if (_this.isControlled) {\n                onRemoveEvent();\n            }\n            else {\n                _this.setState({ files: [] }, onRemoveEvent);\n            }\n        };\n        validatePackage(packageMetadata);\n        _this.state = {\n            files: props.defaultFiles || []\n        };\n        return _this;\n    }\n    Object.defineProperty(Upload.prototype, \"async\", {\n        get: function () {\n            var _a = this.props, autoUpload = _a.autoUpload, batch = _a.batch, removeField = _a.removeField, removeHeaders = _a.removeHeaders, removeMethod = _a.removeMethod, removeUrl = _a.removeUrl, responseType = _a.responseType, saveField = _a.saveField, saveHeaders = _a.saveHeaders, saveMethod = _a.saveMethod, saveUrl = _a.saveUrl, withCredentials = _a.withCredentials;\n            return {\n                autoUpload: autoUpload,\n                batch: batch,\n                removeField: removeField,\n                removeHeaders: removeHeaders,\n                removeMethod: removeMethod,\n                removeUrl: removeUrl,\n                responseType: responseType,\n                saveField: saveField,\n                saveHeaders: saveHeaders,\n                saveMethod: saveMethod,\n                saveUrl: saveUrl,\n                withCredentials: withCredentials\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Upload.prototype, \"files\", {\n        get: function () {\n            var files = this.isControlled ? this.props.files : this.state.files;\n            return files || [];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Upload.prototype, \"isControlled\", {\n        get: function () {\n            return !this.props.defaultFiles;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Upload.prototype, \"isCustomSave\", {\n        get: function () {\n            return this.props.saveUrl && typeof this.props.saveUrl === 'function';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Upload.prototype, \"isCustomRemove\", {\n        get: function () {\n            return this.props.removeUrl && typeof this.props.removeUrl === 'function';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Upload.prototype, \"fileStateCopy\", {\n        get: function () {\n            if (this.isControlled) {\n                return stateUtils.copyState(this.props.files);\n            }\n            else {\n                return stateUtils.copyState(this.state.files);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Upload.prototype, \"actionElement\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            if (this._uploadNavigation) {\n                return this._uploadNavigation.actionElement;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    Upload.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, showFileList = _a.showFileList, onAdd = _a.onAdd, onRemove = _a.onRemove, onCancel = _a.onCancel, autoUpload = _a.autoUpload, showActionButtons = _a.showActionButtons, actionsLayout = _a.actionsLayout, tabIndex = _a.tabIndex, disabled = _a.disabled, others = __rest(_a, [\"showFileList\", \"onAdd\", \"onRemove\", \"onCancel\", \"autoUpload\", \"showActionButtons\", \"actionsLayout\", \"tabIndex\", \"disabled\"]);\n        var groupedFiles = stateUtils.groupFilesByUid(this.files);\n        var filesForUpload = stateUtils.filesForUpload(groupedFiles);\n        return (React.createElement(UploadNavigation, __assign({ groupedFiles: groupedFiles, className: this.props.className, showFileList: showFileList && !!Object.keys(groupedFiles).length, showActionButtons: showActionButtons && !autoUpload && !!Object.keys(filesForUpload).length, actionsLayout: actionsLayout, autoUpload: autoUpload, disabled: disabled, onAdd: this.onAdd, onRemove: this.onRemove, onClear: this.onClear, onUpload: this.onUpload, onRetry: this.onRetry, onCancel: this.onCancel, tabIndex: getTabIndex(tabIndex, disabled), ref: function (ref) { return _this._uploadNavigation = ref; } }, others)));\n    };\n    /**\n     * @hidden\n     */\n    Upload.defaultProps = {\n        autoUpload: true,\n        batch: false,\n        removeField: 'fileNames',\n        removeHeaders: {},\n        removeMethod: 'POST',\n        removeUrl: '',\n        responseType: 'json',\n        saveField: 'files',\n        saveHeaders: {},\n        saveMethod: 'POST',\n        saveUrl: '',\n        withCredentials: true,\n        restrictions: {\n            allowedExtensions: [],\n            maxFileSize: 0,\n            minFileSize: 0\n        },\n        multiple: true,\n        showFileList: true,\n        showActionButtons: true,\n        actionsLayout: 'end',\n        disabled: false\n    };\n    /**\n     * @hidden\n     */\n    Upload.propTypes = {\n        autoUpload: PropTypes.bool,\n        batch: PropTypes.bool,\n        withCredentials: PropTypes.bool,\n        saveField: PropTypes.string,\n        saveHeaders: PropTypes.object,\n        saveMethod: PropTypes.string,\n        saveUrl: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        responseType: PropTypes.oneOf(['arraybuffer', 'blob', 'json', 'text']),\n        removeField: PropTypes.string,\n        removeHeaders: PropTypes.object,\n        removeMethod: PropTypes.string,\n        removeUrl: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n        multiple: PropTypes.bool,\n        disabled: PropTypes.bool,\n        showFileList: PropTypes.bool,\n        showActionButtons: PropTypes.bool,\n        actionsLayout: PropTypes.oneOf(['start', 'center', 'end', 'stretched']),\n        tabIndex: PropTypes.number,\n        accept: PropTypes.string,\n        listItemUI: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.string,\n            PropTypes.shape({ render: PropTypes.func.isRequired })\n        ]),\n        restrictions: PropTypes.shape({\n            allowedExtensions: PropTypes.arrayOf(PropTypes.string),\n            maxFileSize: PropTypes.number,\n            minFileSize: PropTypes.number\n        }),\n        files: PropTypes.arrayOf(PropTypes.shape({\n            uid: PropTypes.string,\n            name: PropTypes.string,\n            extension: PropTypes.string,\n            size: PropTypes.number,\n            validationErrors: PropTypes.arrayOf(PropTypes.string),\n            status: PropTypes.oneOf([\n                UploadFileStatus.Initial,\n                UploadFileStatus.RemoveFailed,\n                UploadFileStatus.Removing,\n                UploadFileStatus.Selected,\n                UploadFileStatus.UploadFailed,\n                UploadFileStatus.Uploaded,\n                UploadFileStatus.Uploading\n            ]),\n            progress: PropTypes.number,\n            getRawFile: PropTypes.func\n        })),\n        defaultFiles: PropTypes.arrayOf(PropTypes.shape({\n            uid: PropTypes.string,\n            name: PropTypes.string,\n            extension: PropTypes.string,\n            size: PropTypes.number,\n            validationErrors: PropTypes.arrayOf(PropTypes.string),\n            status: PropTypes.oneOf([\n                UploadFileStatus.Initial,\n                UploadFileStatus.RemoveFailed,\n                UploadFileStatus.Removing,\n                UploadFileStatus.Selected,\n                UploadFileStatus.UploadFailed,\n                UploadFileStatus.Uploaded,\n                UploadFileStatus.Uploading\n            ]),\n            progress: PropTypes.number,\n            getRawFile: PropTypes.func\n        }))\n    };\n    return Upload;\n}(React.Component));\nexport { Upload };\n"]},"metadata":{},"sourceType":"module"}