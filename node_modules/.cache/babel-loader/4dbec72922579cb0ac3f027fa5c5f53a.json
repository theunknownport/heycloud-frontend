{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { Draggable } from '@progress/kendo-react-common';\nimport { closestTagName, getColumnIndex, getOffset, getRowIndex, getSelectionOptions, relativeContextElement } from './utils';\nimport { TABLE_PREVENT_SELECTION_ELEMENT } from './constants';\n/** @hidden */\n\nexport var TableSelection = function (props) {\n  var onRelease = props.onRelease,\n      childRef = props.childRef;\n\n  var _a = getSelectionOptions(props.selectable),\n      selectionEnabled = _a.enabled,\n      selectionDrag = _a.drag,\n      selectionMode = _a.mode,\n      selectionCell = _a.cell;\n\n  var draggableRef = React.useRef(null);\n  var overlayElementRef = React.useRef(null);\n  var dragStartRef = React.useRef({\n    clientX: 0,\n    clientY: 0\n  });\n\n  var _b = React.useState(null),\n      overlaySettings = _b[0],\n      setOverlaySettings = _b[1];\n\n  var offsetParentRef = React.useRef();\n  var isDraggedRef = React.useRef(false);\n  var isPreventedRef = React.useRef(false);\n  var onPressHandler = React.useCallback(function (eventData) {\n    var event = eventData.event;\n    isPreventedRef.current = event.originalEvent.target.hasAttribute(TABLE_PREVENT_SELECTION_ELEMENT);\n\n    if (isPreventedRef.current || !draggableRef.current) {\n      return;\n    }\n\n    offsetParentRef.current = relativeContextElement(draggableRef.current.element);\n    dragStartRef.current = {\n      clientY: event.clientY,\n      clientX: event.clientX\n    };\n  }, []);\n  var onDragHandler = React.useCallback(function (eventData) {\n    var event = eventData.event;\n    var _a = dragStartRef.current,\n        clientX = _a.clientX,\n        clientY = _a.clientY;\n\n    if (isPreventedRef.current) {\n      return;\n    }\n\n    if (!selectionDrag || selectionMode === 'single') {\n      return;\n    }\n\n    if (Math.abs(clientY - event.clientY) > 5 || Math.abs(clientX - event.clientX) > 5) {\n      isDraggedRef.current = true;\n    }\n\n    if (isDraggedRef.current) {\n      var offset = getOffset(offsetParentRef.current);\n      setOverlaySettings({\n        top: Math.min(clientY, event.clientY) - offset.top,\n        left: Math.min(clientX, event.clientX) - offset.left,\n        width: Math.abs(event.clientX - clientX),\n        height: Math.abs(event.clientY - clientY)\n      });\n    }\n  }, [setOverlaySettings, selectionDrag, selectionMode]);\n  var onReleaseHandler = React.useCallback(function (eventData) {\n    var event = eventData.event;\n    var _a = dragStartRef.current,\n        clientX = _a.clientX,\n        clientY = _a.clientY;\n\n    if (isPreventedRef.current || !draggableRef.current) {\n      return;\n    }\n\n    var currentDocument = draggableRef.current.element && draggableRef.current.element.ownerDocument;\n\n    if (!currentDocument) {\n      return;\n    }\n\n    if (!isDraggedRef.current) {\n      var startElement = currentDocument.elementFromPoint(clientX, clientY);\n\n      if (!startElement) {\n        return;\n      }\n\n      var tdElement = closestTagName(startElement, 'TD');\n      var trElement = closestTagName(startElement, 'TR');\n      var colIndex = getColumnIndex(tdElement);\n      var rowIndex = getRowIndex(trElement);\n\n      if (tdElement && trElement && rowIndex !== undefined && colIndex !== undefined) {\n        onRelease({\n          nativeEvent: event.originalEvent,\n          startRowIndex: rowIndex,\n          startColIndex: colIndex,\n          endRowIndex: rowIndex,\n          endColIndex: colIndex,\n          altKey: event.altKey,\n          shiftKey: event.shiftKey,\n          ctrlKey: event.ctrlKey,\n          metaKey: event.metaKey,\n          mode: selectionMode,\n          cell: selectionCell,\n          isDrag: false\n        });\n      }\n    } else {\n      var top_1 = Math.min(clientY, event.clientY);\n      var left = Math.min(clientX, event.clientX);\n      var bottom = Math.max(clientY, event.clientY);\n      var right = Math.max(clientX, event.clientX);\n      var overlayElement = overlayElementRef.current;\n\n      if (!overlayElement) {\n        return;\n      }\n\n      overlayElement.style.visibility = 'hidden';\n      var startElement = currentDocument.elementFromPoint(left, top_1);\n      var endElement = currentDocument.elementFromPoint(right, bottom);\n      overlayElement.style.visibility = '';\n\n      if (!startElement || !endElement) {\n        return;\n      }\n\n      var startTdElement = closestTagName(startElement, 'TD');\n      var startTrElement = closestTagName(startTdElement, 'TR');\n      var endTdElement = closestTagName(endElement, 'TD');\n      var endTrElement = closestTagName(endTdElement, 'TR');\n      var startColIndex = getColumnIndex(startTdElement);\n      var startRowIndex = getRowIndex(startTrElement);\n      var endColIndex = getColumnIndex(endTdElement);\n      var endRowIndex = getRowIndex(endTrElement);\n\n      if (startColIndex !== undefined && startRowIndex !== undefined && endColIndex !== undefined && endRowIndex !== undefined) {\n        onRelease({\n          nativeEvent: event.originalEvent,\n          startRowIndex: startRowIndex,\n          startColIndex: startColIndex,\n          endRowIndex: endRowIndex,\n          endColIndex: endColIndex,\n          altKey: event.altKey,\n          shiftKey: event.shiftKey,\n          ctrlKey: event.ctrlKey,\n          metaKey: event.metaKey,\n          mode: selectionMode,\n          cell: selectionCell,\n          isDrag: true\n        });\n      }\n    }\n\n    setOverlaySettings(null);\n    isDraggedRef.current = false;\n    dragStartRef.current = {\n      clientX: 0,\n      clientY: 0\n    };\n  }, [setOverlaySettings, selectionMode, selectionCell, onRelease]);\n\n  if (!selectionEnabled) {\n    return React.cloneElement(React.Children.only(props.children), {\n      ref: childRef\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Draggable, {\n    onPress: onPressHandler,\n    onDrag: onDragHandler,\n    onRelease: onReleaseHandler,\n    ref: draggableRef,\n    childRef: childRef\n  }, props.children), overlaySettings && React.createElement(\"div\", {\n    ref: overlayElementRef,\n    style: __assign(__assign({}, overlaySettings), {\n      position: 'fixed'\n    }),\n    className: 'k-marquee k-marquee-color'\n  }));\n};","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-data-tools/dist/es/selection/TableSelection.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","Draggable","closestTagName","getColumnIndex","getOffset","getRowIndex","getSelectionOptions","relativeContextElement","TABLE_PREVENT_SELECTION_ELEMENT","TableSelection","props","onRelease","childRef","_a","selectable","selectionEnabled","enabled","selectionDrag","drag","selectionMode","mode","selectionCell","cell","draggableRef","useRef","overlayElementRef","dragStartRef","clientX","clientY","_b","useState","overlaySettings","setOverlaySettings","offsetParentRef","isDraggedRef","isPreventedRef","onPressHandler","useCallback","eventData","event","current","originalEvent","target","hasAttribute","element","onDragHandler","Math","abs","offset","top","min","left","width","height","onReleaseHandler","currentDocument","ownerDocument","startElement","elementFromPoint","tdElement","trElement","colIndex","rowIndex","undefined","nativeEvent","startRowIndex","startColIndex","endRowIndex","endColIndex","altKey","shiftKey","ctrlKey","metaKey","isDrag","top_1","bottom","max","right","overlayElement","style","visibility","endElement","startTdElement","startTrElement","endTdElement","endTrElement","cloneElement","Children","only","children","ref","createElement","Fragment","onPress","onDrag","position","className"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Draggable } from '@progress/kendo-react-common';\nimport { closestTagName, getColumnIndex, getOffset, getRowIndex, getSelectionOptions, relativeContextElement } from './utils';\nimport { TABLE_PREVENT_SELECTION_ELEMENT } from './constants';\n/** @hidden */\nexport var TableSelection = function (props) {\n    var onRelease = props.onRelease, childRef = props.childRef;\n    var _a = getSelectionOptions(props.selectable), selectionEnabled = _a.enabled, selectionDrag = _a.drag, selectionMode = _a.mode, selectionCell = _a.cell;\n    var draggableRef = React.useRef(null);\n    var overlayElementRef = React.useRef(null);\n    var dragStartRef = React.useRef({ clientX: 0, clientY: 0 });\n    var _b = React.useState(null), overlaySettings = _b[0], setOverlaySettings = _b[1];\n    var offsetParentRef = React.useRef();\n    var isDraggedRef = React.useRef(false);\n    var isPreventedRef = React.useRef(false);\n    var onPressHandler = React.useCallback(function (eventData) {\n        var event = eventData.event;\n        isPreventedRef.current = event.originalEvent.target.hasAttribute(TABLE_PREVENT_SELECTION_ELEMENT);\n        if (isPreventedRef.current || !draggableRef.current) {\n            return;\n        }\n        offsetParentRef.current = relativeContextElement(draggableRef.current.element);\n        dragStartRef.current = {\n            clientY: event.clientY,\n            clientX: event.clientX\n        };\n    }, []);\n    var onDragHandler = React.useCallback(function (eventData) {\n        var event = eventData.event;\n        var _a = dragStartRef.current, clientX = _a.clientX, clientY = _a.clientY;\n        if (isPreventedRef.current) {\n            return;\n        }\n        if (!selectionDrag || selectionMode === 'single') {\n            return;\n        }\n        if (Math.abs(clientY - event.clientY) > 5 || Math.abs(clientX - event.clientX) > 5) {\n            isDraggedRef.current = true;\n        }\n        if (isDraggedRef.current) {\n            var offset = getOffset(offsetParentRef.current);\n            setOverlaySettings({\n                top: Math.min(clientY, event.clientY) - offset.top,\n                left: Math.min(clientX, event.clientX) - offset.left,\n                width: Math.abs(event.clientX - clientX),\n                height: Math.abs(event.clientY - clientY)\n            });\n        }\n    }, [setOverlaySettings, selectionDrag, selectionMode]);\n    var onReleaseHandler = React.useCallback(function (eventData) {\n        var event = eventData.event;\n        var _a = dragStartRef.current, clientX = _a.clientX, clientY = _a.clientY;\n        if (isPreventedRef.current || !draggableRef.current) {\n            return;\n        }\n        var currentDocument = draggableRef.current.element && draggableRef.current.element.ownerDocument;\n        if (!currentDocument) {\n            return;\n        }\n        if (!isDraggedRef.current) {\n            var startElement = currentDocument.elementFromPoint(clientX, clientY);\n            if (!startElement) {\n                return;\n            }\n            var tdElement = closestTagName(startElement, 'TD');\n            var trElement = closestTagName(startElement, 'TR');\n            var colIndex = getColumnIndex(tdElement);\n            var rowIndex = getRowIndex(trElement);\n            if (tdElement && trElement && rowIndex !== undefined && colIndex !== undefined) {\n                onRelease({\n                    nativeEvent: event.originalEvent,\n                    startRowIndex: rowIndex,\n                    startColIndex: colIndex,\n                    endRowIndex: rowIndex,\n                    endColIndex: colIndex,\n                    altKey: event.altKey,\n                    shiftKey: event.shiftKey,\n                    ctrlKey: event.ctrlKey,\n                    metaKey: event.metaKey,\n                    mode: selectionMode,\n                    cell: selectionCell,\n                    isDrag: false\n                });\n            }\n        }\n        else {\n            var top_1 = Math.min(clientY, event.clientY);\n            var left = Math.min(clientX, event.clientX);\n            var bottom = Math.max(clientY, event.clientY);\n            var right = Math.max(clientX, event.clientX);\n            var overlayElement = overlayElementRef.current;\n            if (!overlayElement) {\n                return;\n            }\n            overlayElement.style.visibility = 'hidden';\n            var startElement = currentDocument.elementFromPoint(left, top_1);\n            var endElement = currentDocument.elementFromPoint(right, bottom);\n            overlayElement.style.visibility = '';\n            if (!startElement || !endElement) {\n                return;\n            }\n            var startTdElement = closestTagName(startElement, 'TD');\n            var startTrElement = closestTagName(startTdElement, 'TR');\n            var endTdElement = closestTagName(endElement, 'TD');\n            var endTrElement = closestTagName(endTdElement, 'TR');\n            var startColIndex = getColumnIndex(startTdElement);\n            var startRowIndex = getRowIndex(startTrElement);\n            var endColIndex = getColumnIndex(endTdElement);\n            var endRowIndex = getRowIndex(endTrElement);\n            if (startColIndex !== undefined &&\n                startRowIndex !== undefined &&\n                endColIndex !== undefined &&\n                endRowIndex !== undefined) {\n                onRelease({\n                    nativeEvent: event.originalEvent,\n                    startRowIndex: startRowIndex,\n                    startColIndex: startColIndex,\n                    endRowIndex: endRowIndex,\n                    endColIndex: endColIndex,\n                    altKey: event.altKey,\n                    shiftKey: event.shiftKey,\n                    ctrlKey: event.ctrlKey,\n                    metaKey: event.metaKey,\n                    mode: selectionMode,\n                    cell: selectionCell,\n                    isDrag: true\n                });\n            }\n        }\n        setOverlaySettings(null);\n        isDraggedRef.current = false;\n        dragStartRef.current = { clientX: 0, clientY: 0 };\n    }, [setOverlaySettings, selectionMode, selectionCell, onRelease]);\n    if (!selectionEnabled) {\n        return (React.cloneElement(React.Children.only(props.children), { ref: childRef }));\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Draggable, { onPress: onPressHandler, onDrag: onDragHandler, onRelease: onReleaseHandler, ref: draggableRef, childRef: childRef }, props.children),\n        overlaySettings &&\n            React.createElement(\"div\", { ref: overlayElementRef, style: __assign(__assign({}, overlaySettings), { position: 'fixed' }), className: 'k-marquee k-marquee-color' })));\n};\n"]},"metadata":{},"sourceType":"module"}