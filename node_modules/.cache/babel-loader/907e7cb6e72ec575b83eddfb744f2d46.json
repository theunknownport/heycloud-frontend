{"ast":null,"code":"export var LifeCycleEventType;\n\n(function (LifeCycleEventType) {\n  LifeCycleEventType[LifeCycleEventType[\"PERFORMANCE_ENTRY_COLLECTED\"] = 0] = \"PERFORMANCE_ENTRY_COLLECTED\";\n  LifeCycleEventType[LifeCycleEventType[\"AUTO_ACTION_CREATED\"] = 1] = \"AUTO_ACTION_CREATED\";\n  LifeCycleEventType[LifeCycleEventType[\"AUTO_ACTION_COMPLETED\"] = 2] = \"AUTO_ACTION_COMPLETED\";\n  LifeCycleEventType[LifeCycleEventType[\"AUTO_ACTION_DISCARDED\"] = 3] = \"AUTO_ACTION_DISCARDED\";\n  LifeCycleEventType[LifeCycleEventType[\"VIEW_CREATED\"] = 4] = \"VIEW_CREATED\";\n  LifeCycleEventType[LifeCycleEventType[\"VIEW_UPDATED\"] = 5] = \"VIEW_UPDATED\";\n  LifeCycleEventType[LifeCycleEventType[\"VIEW_ENDED\"] = 6] = \"VIEW_ENDED\";\n  LifeCycleEventType[LifeCycleEventType[\"REQUEST_STARTED\"] = 7] = \"REQUEST_STARTED\";\n  LifeCycleEventType[LifeCycleEventType[\"REQUEST_COMPLETED\"] = 8] = \"REQUEST_COMPLETED\"; // The SESSION_EXPIRED lifecycle event has been introduced to represent when a session has expired\n  // and trigger cleanup tasks related to this, prior to renewing the session. Its implementation is\n  // slightly naive: it is not triggered as soon as the session is expired, but rather just before\n  // notifying that the session is renewed. Thus, the session id is already set to the newly renewed\n  // session.\n  //\n  // This implementation is \"good enough\" for our use-cases. Improving this is not trivial,\n  // primarily because multiple instances of the SDK may be managing the same session cookie at\n  // the same time, for example when using Logs and RUM on the same page, or opening multiple tabs\n  // on the same domain.\n\n  LifeCycleEventType[LifeCycleEventType[\"SESSION_EXPIRED\"] = 9] = \"SESSION_EXPIRED\";\n  LifeCycleEventType[LifeCycleEventType[\"SESSION_RENEWED\"] = 10] = \"SESSION_RENEWED\";\n  LifeCycleEventType[LifeCycleEventType[\"BEFORE_UNLOAD\"] = 11] = \"BEFORE_UNLOAD\";\n  LifeCycleEventType[LifeCycleEventType[\"RAW_RUM_EVENT_COLLECTED\"] = 12] = \"RAW_RUM_EVENT_COLLECTED\";\n  LifeCycleEventType[LifeCycleEventType[\"RUM_EVENT_COLLECTED\"] = 13] = \"RUM_EVENT_COLLECTED\";\n  LifeCycleEventType[LifeCycleEventType[\"RAW_ERROR_COLLECTED\"] = 14] = \"RAW_ERROR_COLLECTED\";\n})(LifeCycleEventType || (LifeCycleEventType = {}));\n\nvar LifeCycle =\n/** @class */\nfunction () {\n  function LifeCycle() {\n    this.callbacks = {};\n  }\n\n  LifeCycle.prototype.notify = function (eventType, data) {\n    var eventCallbacks = this.callbacks[eventType];\n\n    if (eventCallbacks) {\n      eventCallbacks.forEach(function (callback) {\n        return callback(data);\n      });\n    }\n  };\n\n  LifeCycle.prototype.subscribe = function (eventType, callback) {\n    var _this = this;\n\n    if (!this.callbacks[eventType]) {\n      this.callbacks[eventType] = [];\n    }\n\n    this.callbacks[eventType].push(callback);\n    return {\n      unsubscribe: function () {\n        _this.callbacks[eventType] = _this.callbacks[eventType].filter(function (other) {\n          return callback !== other;\n        });\n      }\n    };\n  };\n\n  return LifeCycle;\n}();\n\nexport { LifeCycle };","map":{"version":3,"sources":["../../src/domain/lifeCycle.ts"],"names":[],"mappings":"AASA,OAAA,IAAY,kBAAZ;;AAAA,CAAA,UAAY,kBAAZ,EAA8B;AAC5B,EAAA,kBAAA,CAAA,kBAAA,CAAA,6BAAA,CAAA,GAAA,CAAA,CAAA,GAAA,6BAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,qBAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,uBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,uBAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,uBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,uBAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA,CAT4B,CAW5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;AAEA,EAAA,kBAAA,CAAA,kBAAA,CAAA,iBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,iBAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,eAAA,CAAA,GAAA,EAAA,CAAA,GAAA,eAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,yBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,yBAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,qBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,qBAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,qBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,qBAAA;AACD,CA5BD,EAAY,kBAAkB,KAAlB,kBAAkB,GAAA,EAAA,CAA9B;;AA8BA,IAAA,SAAA;AAAA;AAAA,YAAA;AAAA,WAAA,SAAA,GAAA;AACU,SAAA,SAAA,GAA0E,EAA1E;AA8ET;;AAvDC,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,SAAP,EAAsC,IAAtC,EAAgD;AAC9C,QAAM,cAAc,GAAG,KAAK,SAAL,CAAe,SAAf,CAAvB;;AACA,QAAI,cAAJ,EAAoB;AAClB,MAAA,cAAc,CAAC,OAAf,CAAuB,UAAC,QAAD,EAAS;AAAK,eAAA,QAAQ,CAAR,IAAQ,CAAR;AAAc,OAAnD;AACD;AACF,GALD;;AA4CA,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,SAAV,EAAyC,QAAzC,EAAuE;AAAvE,QAAA,KAAA,GAAA,IAAA;;AACE,QAAI,CAAC,KAAK,SAAL,CAAe,SAAf,CAAL,EAAgC;AAC9B,WAAK,SAAL,CAAe,SAAf,IAA4B,EAA5B;AACD;;AACD,SAAK,SAAL,CAAe,SAAf,EAA2B,IAA3B,CAAgC,QAAhC;AACA,WAAO;AACL,MAAA,WAAW,EAAE,YAAA;AACX,QAAA,KAAI,CAAC,SAAL,CAAe,SAAf,IAA4B,KAAI,CAAC,SAAL,CAAe,SAAf,EAA2B,MAA3B,CAAkC,UAAC,KAAD,EAAM;AAAK,iBAAA,QAAQ,KAAR,KAAA;AAAkB,SAA/D,CAA5B;AACD;AAHI,KAAP;AAKD,GAVD;;AAWF,SAAA,SAAA;AAAC,CA/ED,EAAA","sourceRoot":"","sourcesContent":["export var LifeCycleEventType;\n(function (LifeCycleEventType) {\n    LifeCycleEventType[LifeCycleEventType[\"PERFORMANCE_ENTRY_COLLECTED\"] = 0] = \"PERFORMANCE_ENTRY_COLLECTED\";\n    LifeCycleEventType[LifeCycleEventType[\"AUTO_ACTION_CREATED\"] = 1] = \"AUTO_ACTION_CREATED\";\n    LifeCycleEventType[LifeCycleEventType[\"AUTO_ACTION_COMPLETED\"] = 2] = \"AUTO_ACTION_COMPLETED\";\n    LifeCycleEventType[LifeCycleEventType[\"AUTO_ACTION_DISCARDED\"] = 3] = \"AUTO_ACTION_DISCARDED\";\n    LifeCycleEventType[LifeCycleEventType[\"VIEW_CREATED\"] = 4] = \"VIEW_CREATED\";\n    LifeCycleEventType[LifeCycleEventType[\"VIEW_UPDATED\"] = 5] = \"VIEW_UPDATED\";\n    LifeCycleEventType[LifeCycleEventType[\"VIEW_ENDED\"] = 6] = \"VIEW_ENDED\";\n    LifeCycleEventType[LifeCycleEventType[\"REQUEST_STARTED\"] = 7] = \"REQUEST_STARTED\";\n    LifeCycleEventType[LifeCycleEventType[\"REQUEST_COMPLETED\"] = 8] = \"REQUEST_COMPLETED\";\n    // The SESSION_EXPIRED lifecycle event has been introduced to represent when a session has expired\n    // and trigger cleanup tasks related to this, prior to renewing the session. Its implementation is\n    // slightly naive: it is not triggered as soon as the session is expired, but rather just before\n    // notifying that the session is renewed. Thus, the session id is already set to the newly renewed\n    // session.\n    //\n    // This implementation is \"good enough\" for our use-cases. Improving this is not trivial,\n    // primarily because multiple instances of the SDK may be managing the same session cookie at\n    // the same time, for example when using Logs and RUM on the same page, or opening multiple tabs\n    // on the same domain.\n    LifeCycleEventType[LifeCycleEventType[\"SESSION_EXPIRED\"] = 9] = \"SESSION_EXPIRED\";\n    LifeCycleEventType[LifeCycleEventType[\"SESSION_RENEWED\"] = 10] = \"SESSION_RENEWED\";\n    LifeCycleEventType[LifeCycleEventType[\"BEFORE_UNLOAD\"] = 11] = \"BEFORE_UNLOAD\";\n    LifeCycleEventType[LifeCycleEventType[\"RAW_RUM_EVENT_COLLECTED\"] = 12] = \"RAW_RUM_EVENT_COLLECTED\";\n    LifeCycleEventType[LifeCycleEventType[\"RUM_EVENT_COLLECTED\"] = 13] = \"RUM_EVENT_COLLECTED\";\n    LifeCycleEventType[LifeCycleEventType[\"RAW_ERROR_COLLECTED\"] = 14] = \"RAW_ERROR_COLLECTED\";\n})(LifeCycleEventType || (LifeCycleEventType = {}));\nvar LifeCycle = /** @class */ (function () {\n    function LifeCycle() {\n        this.callbacks = {};\n    }\n    LifeCycle.prototype.notify = function (eventType, data) {\n        var eventCallbacks = this.callbacks[eventType];\n        if (eventCallbacks) {\n            eventCallbacks.forEach(function (callback) { return callback(data); });\n        }\n    };\n    LifeCycle.prototype.subscribe = function (eventType, callback) {\n        var _this = this;\n        if (!this.callbacks[eventType]) {\n            this.callbacks[eventType] = [];\n        }\n        this.callbacks[eventType].push(callback);\n        return {\n            unsubscribe: function () {\n                _this.callbacks[eventType] = _this.callbacks[eventType].filter(function (other) { return callback !== other; });\n            },\n        };\n    };\n    return LifeCycle;\n}());\nexport { LifeCycle };\n//# sourceMappingURL=lifeCycle.js.map"]},"metadata":{},"sourceType":"module"}