{"ast":null,"code":"import { generateNavigatableId } from '../../navigation/utils';\nimport { ColumnDefaultProps } from '../ColumnProps';\n\nfunction nextColumn(columns, current) {\n  var currentDepth = columns[current].depth;\n  var next = null;\n\n  for (var index = current + 1; index < columns.length; index++) {\n    if (columns[index].depth === currentDepth) {\n      next = columns[index];\n      break;\n    }\n  }\n\n  return next;\n}\n\nvar getColumnWidth = function (column) {\n  var width = column.width ? parseFloat(column.width.toString()) : 0;\n\n  if (!width && column.children && column.children.length) {\n    width = column.children.reduce(function (currentSum, child) {\n      return getColumnWidth(child) + currentSum;\n    }, 0);\n  }\n\n  return width;\n};\n/**\n * @hidden\n */\n\n\nexport function mapColumns(columns) {\n  var columnsMap = [[]];\n  var maxDepth = 0; // set colspans, get maxdepth\n\n  for (var q = columns.length - 1; q >= 0; q--) {\n    maxDepth = Math.max(maxDepth, columns[q].depth);\n    columns[q].colSpan = columns[q].colSpan || 1;\n\n    if (columns[q].parentIndex !== -1) {\n      columns[columns[q].parentIndex].colSpan = (columns[columns[q].parentIndex].colSpan || 0) + columns[q].colSpan;\n    }\n  }\n\n  var colIndexByLevel = [];\n  var rowSpan = 1; // set rowspan, kFirst, index AND create columnsMap\n\n  columns.forEach(function (column, i) {\n    columnsMap[column.depth] = columnsMap[column.depth] || [];\n    var needKFirst = false;\n\n    if (columnsMap[column.depth].length === 0) {\n      if (rowSpan <= 1) {\n        rowSpan = 1 + (column.children.length > 0 ? 0 : maxDepth - column.depth);\n      } else {\n        rowSpan--;\n        needKFirst = true;\n      }\n    }\n\n    column.rowSpan = 1 + (column.children.length > 0 ? 0 : maxDepth - column.depth);\n    column.kFirst = needKFirst;\n    column.index = columnsMap[column.depth].length;\n    columnsMap[column.depth].push(i);\n    column.ariaColumnIndex = colIndexByLevel[column.depth] ? colIndexByLevel[column.depth] + 1 : 1;\n\n    for (var ci = column.depth; ci < column.depth + column.rowSpan; ci++) {\n      colIndexByLevel[ci] = (colIndexByLevel[ci] || 0) + column.colSpan;\n    }\n  });\n  var stickyLeftWidth = new Array(columnsMap.length).fill(0);\n  var width = 0; // set left AND create stickyLeftWidth\n\n  columns.forEach(function (column) {\n    if (column.locked) {\n      column.left = stickyLeftWidth[column.depth];\n      width = getColumnWidth(column);\n\n      if (column.children.length === 0) {\n        for (var i = column.depth; i < stickyLeftWidth.length; i++) {\n          stickyLeftWidth[i] += width;\n        }\n      } else {\n        stickyLeftWidth[column.depth] += width;\n      }\n    }\n  });\n  var stickyRightWidth = new Array(columnsMap.length).fill(0); // set right, rightBorder AND create stickyRightWidth\n\n  for (var i = columns.length - 1; i >= 0; i--) {\n    var column = columns[i];\n\n    if (column.locked) {\n      column.right = stickyRightWidth[column.depth];\n      width = getColumnWidth(column);\n\n      if (column.children.length === 0) {\n        for (var j = column.depth; j < stickyRightWidth.length; j++) {\n          stickyRightWidth[j] += width;\n        }\n      } else {\n        stickyRightWidth[column.depth] += width;\n      }\n\n      var next = nextColumn(columns, i);\n      column.rightBorder = !(next && next.locked);\n    }\n  }\n\n  return columnsMap;\n}\n/**\n * @hidden\n */\n\nexport function readColumns(elements, idInfo, depth) {\n  if (depth === void 0) {\n    depth = 0;\n  }\n\n  var columns = [];\n\n  if (!elements || !elements.length) {\n    return [];\n  }\n\n  elements.forEach(function (columnProps) {\n    var children = readColumns(columnProps.children || [], idInfo, depth + 1);\n    columns.push(Object.assign({}, {\n      depth: depth\n    }, ColumnDefaultProps, columnProps, {\n      id: columnProps.id ? columnProps.id : generateNavigatableId(\"\".concat(idInfo.prevId++), idInfo.idPrefix, 'column'),\n      declarationIndex: columns.length,\n      children: children,\n      rowSpan: 0,\n      colSpan: 0,\n      isAccessible: true\n    }));\n  });\n\n  var comparator = function (a, b) {\n    return a.orderIndex === b.orderIndex ? a.declarationIndex - b.declarationIndex : (a.orderIndex || 0) - (b.orderIndex || 0);\n  };\n\n  columns.sort(comparator);\n\n  if (depth === 0) {\n    var ret_1 = [];\n\n    var flat_1 = function (cols, pIndex) {\n      return cols.forEach(function (c) {\n        c.parentIndex = pIndex;\n        flat_1(c.children, ret_1.push(c) - 1);\n      });\n    };\n\n    flat_1(columns, -1);\n    return ret_1;\n  }\n\n  return columns;\n}\n/**\n * @hidden\n */\n\nexport function isRtl(element) {\n  return Boolean(element && getComputedStyle(element).direction === 'rtl');\n}\n/**\n * @hidden\n */\n\nexport function getIndex(event, parent) {\n  if (!parent || !event || !event.originalEvent) {\n    return -1;\n  }\n\n  var target = parent.ownerDocument ? parent.ownerDocument.elementFromPoint(event.clientX, event.originalEvent.clientY) : null;\n\n  while (target && target.parentElement !== parent) {\n    target = target.parentElement;\n  }\n\n  var children = parent.children;\n\n  for (var i = 0; i < children.length; i++) {\n    if (children[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-data-tools/dist/es/header/utils/index.js"],"names":["generateNavigatableId","ColumnDefaultProps","nextColumn","columns","current","currentDepth","depth","next","index","length","getColumnWidth","column","width","parseFloat","toString","children","reduce","currentSum","child","mapColumns","columnsMap","maxDepth","q","Math","max","colSpan","parentIndex","colIndexByLevel","rowSpan","forEach","i","needKFirst","kFirst","push","ariaColumnIndex","ci","stickyLeftWidth","Array","fill","locked","left","stickyRightWidth","right","j","rightBorder","readColumns","elements","idInfo","columnProps","Object","assign","id","concat","prevId","idPrefix","declarationIndex","isAccessible","comparator","a","b","orderIndex","sort","ret_1","flat_1","cols","pIndex","c","isRtl","element","Boolean","getComputedStyle","direction","getIndex","event","parent","originalEvent","target","ownerDocument","elementFromPoint","clientX","clientY","parentElement"],"mappings":"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","sourcesContent":["import { generateNavigatableId } from '../../navigation/utils';\nimport { ColumnDefaultProps } from '../ColumnProps';\nfunction nextColumn(columns, current) {\n    var currentDepth = columns[current].depth;\n    var next = null;\n    for (var index = current + 1; index < columns.length; index++) {\n        if (columns[index].depth === currentDepth) {\n            next = columns[index];\n            break;\n        }\n    }\n    return next;\n}\nvar getColumnWidth = function (column) {\n    var width = column.width ? parseFloat(column.width.toString()) : 0;\n    if (!width && column.children && column.children.length) {\n        width = column.children.reduce(function (currentSum, child) { return getColumnWidth(child) + currentSum; }, 0);\n    }\n    return width;\n};\n/**\n * @hidden\n */\nexport function mapColumns(columns) {\n    var columnsMap = [[]];\n    var maxDepth = 0;\n    // set colspans, get maxdepth\n    for (var q = columns.length - 1; q >= 0; q--) {\n        maxDepth = Math.max(maxDepth, columns[q].depth);\n        columns[q].colSpan = columns[q].colSpan || 1;\n        if (columns[q].parentIndex !== -1) {\n            columns[columns[q].parentIndex].colSpan =\n                (columns[columns[q].parentIndex].colSpan || 0) + columns[q].colSpan;\n        }\n    }\n    var colIndexByLevel = [];\n    var rowSpan = 1;\n    // set rowspan, kFirst, index AND create columnsMap\n    columns.forEach(function (column, i) {\n        columnsMap[column.depth] = columnsMap[column.depth] || [];\n        var needKFirst = false;\n        if (columnsMap[column.depth].length === 0) {\n            if (rowSpan <= 1) {\n                rowSpan = 1 + (column.children.length > 0 ? 0 : maxDepth - column.depth);\n            }\n            else {\n                rowSpan--;\n                needKFirst = true;\n            }\n        }\n        column.rowSpan = 1 + (column.children.length > 0 ? 0 : maxDepth - column.depth);\n        column.kFirst = needKFirst;\n        column.index = columnsMap[column.depth].length;\n        columnsMap[column.depth].push(i);\n        column.ariaColumnIndex = colIndexByLevel[column.depth] ? colIndexByLevel[column.depth] + 1 : 1;\n        for (var ci = column.depth; ci < column.depth + column.rowSpan; ci++) {\n            colIndexByLevel[ci] = (colIndexByLevel[ci] || 0) + column.colSpan;\n        }\n    });\n    var stickyLeftWidth = new Array(columnsMap.length).fill(0);\n    var width = 0;\n    // set left AND create stickyLeftWidth\n    columns.forEach(function (column) {\n        if (column.locked) {\n            column.left = stickyLeftWidth[column.depth];\n            width = getColumnWidth(column);\n            if (column.children.length === 0) {\n                for (var i = column.depth; i < stickyLeftWidth.length; i++) {\n                    stickyLeftWidth[i] += width;\n                }\n            }\n            else {\n                stickyLeftWidth[column.depth] += width;\n            }\n        }\n    });\n    var stickyRightWidth = new Array(columnsMap.length).fill(0);\n    // set right, rightBorder AND create stickyRightWidth\n    for (var i = columns.length - 1; i >= 0; i--) {\n        var column = columns[i];\n        if (column.locked) {\n            column.right = stickyRightWidth[column.depth];\n            width = getColumnWidth(column);\n            if (column.children.length === 0) {\n                for (var j = column.depth; j < stickyRightWidth.length; j++) {\n                    stickyRightWidth[j] += width;\n                }\n            }\n            else {\n                stickyRightWidth[column.depth] += width;\n            }\n            var next = nextColumn(columns, i);\n            column.rightBorder = !(next && next.locked);\n        }\n    }\n    return columnsMap;\n}\n/**\n * @hidden\n */\nexport function readColumns(elements, idInfo, depth) {\n    if (depth === void 0) { depth = 0; }\n    var columns = [];\n    if (!elements || !elements.length) {\n        return [];\n    }\n    elements.forEach(function (columnProps) {\n        var children = readColumns(columnProps.children || [], idInfo, depth + 1);\n        columns.push(Object.assign({}, { depth: depth }, ColumnDefaultProps, columnProps, {\n            id: columnProps.id ? columnProps.id : generateNavigatableId(\"\".concat(idInfo.prevId++), idInfo.idPrefix, 'column'),\n            declarationIndex: columns.length,\n            children: children,\n            rowSpan: 0,\n            colSpan: 0,\n            isAccessible: true\n        }));\n    });\n    var comparator = function (a, b) {\n        return a.orderIndex === b.orderIndex ?\n            a.declarationIndex - b.declarationIndex :\n            ((a.orderIndex || 0) - (b.orderIndex || 0));\n    };\n    columns.sort(comparator);\n    if (depth === 0) {\n        var ret_1 = [];\n        var flat_1 = function (cols, pIndex) {\n            return cols.forEach(function (c) {\n                c.parentIndex = pIndex;\n                flat_1(c.children, ret_1.push(c) - 1);\n            });\n        };\n        flat_1(columns, -1);\n        return ret_1;\n    }\n    return columns;\n}\n/**\n * @hidden\n */\nexport function isRtl(element) {\n    return Boolean(element && getComputedStyle(element).direction === 'rtl');\n}\n/**\n * @hidden\n */\nexport function getIndex(event, parent) {\n    if (!parent || !event || !event.originalEvent) {\n        return -1;\n    }\n    var target = parent.ownerDocument ? parent.ownerDocument.elementFromPoint(event.clientX, event.originalEvent.clientY) : null;\n    while (target && target.parentElement !== parent) {\n        target = target.parentElement;\n    }\n    var children = parent.children;\n    for (var i = 0; i < children.length; i++) {\n        if (children[i] === target) {\n            return i;\n        }\n    }\n    return -1;\n}\n"]},"metadata":{},"sourceType":"module"}