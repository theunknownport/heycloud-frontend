{"ast":null,"code":"var _a;\n\nimport { __assign } from \"tslib\";\nimport { monitor, callMonitored, throttle, addEventListeners, addEventListener, includes } from '@datadog/browser-core';\nimport { NodePrivacyLevel } from '../../constants';\nimport { getNodePrivacyLevel, shouldMaskNode } from './privacy';\nimport { getElementInputValue, getSerializedNodeId, hasSerializedNode } from './serializationUtils';\nimport { IncrementalSource, MediaInteractions, MouseInteractions } from './types';\nimport { forEach, getWindowHeight, getWindowWidth, hookSetter, isTouchEvent } from './utils';\nimport { startMutationObserver } from './mutationObserver';\nvar MOUSE_MOVE_OBSERVER_THRESHOLD = 50;\nvar SCROLL_OBSERVER_THRESHOLD = 100;\nexport function initObservers(o) {\n  var mutationHandler = initMutationObserver(o.mutationController, o.mutationCb, o.defaultPrivacyLevel);\n  var mousemoveHandler = initMoveObserver(o.mousemoveCb);\n  var mouseInteractionHandler = initMouseInteractionObserver(o.mouseInteractionCb, o.defaultPrivacyLevel);\n  var scrollHandler = initScrollObserver(o.scrollCb, o.defaultPrivacyLevel);\n  var viewportResizeHandler = initViewportResizeObserver(o.viewportResizeCb);\n  var inputHandler = initInputObserver(o.inputCb, o.defaultPrivacyLevel);\n  var mediaInteractionHandler = initMediaInteractionObserver(o.mediaInteractionCb, o.defaultPrivacyLevel);\n  var styleSheetObserver = initStyleSheetObserver(o.styleSheetRuleCb);\n  var focusHandler = initFocusObserver(o.focusCb);\n  return function () {\n    mutationHandler();\n    mousemoveHandler();\n    mouseInteractionHandler();\n    scrollHandler();\n    viewportResizeHandler();\n    inputHandler();\n    mediaInteractionHandler();\n    styleSheetObserver();\n    focusHandler();\n  };\n}\n\nfunction initMutationObserver(mutationController, cb, defaultPrivacyLevel) {\n  return startMutationObserver(mutationController, cb, defaultPrivacyLevel).stop;\n}\n\nfunction initMoveObserver(cb) {\n  var updatePosition = throttle(monitor(function (event) {\n    var target = event.target;\n\n    if (hasSerializedNode(target)) {\n      var _a = isTouchEvent(event) ? event.changedTouches[0] : event,\n          clientX = _a.clientX,\n          clientY = _a.clientY;\n\n      var position = {\n        id: getSerializedNodeId(target),\n        timeOffset: 0,\n        x: clientX,\n        y: clientY\n      };\n      cb([position], isTouchEvent(event) ? IncrementalSource.TouchMove : IncrementalSource.MouseMove);\n    }\n  }), MOUSE_MOVE_OBSERVER_THRESHOLD, {\n    trailing: false\n  }).throttled;\n  return addEventListeners(document, [\"mousemove\"\n  /* MOUSE_MOVE */\n  , \"touchmove\"\n  /* TOUCH_MOVE */\n  ], updatePosition, {\n    capture: true,\n    passive: true\n  }).stop;\n}\n\nvar eventTypeToMouseInteraction = (_a = {}, _a[\"mouseup\"\n/* MOUSE_UP */\n] = MouseInteractions.MouseUp, _a[\"mousedown\"\n/* MOUSE_DOWN */\n] = MouseInteractions.MouseDown, _a[\"click\"\n/* CLICK */\n] = MouseInteractions.Click, _a[\"contextmenu\"\n/* CONTEXT_MENU */\n] = MouseInteractions.ContextMenu, _a[\"dblclick\"\n/* DBL_CLICK */\n] = MouseInteractions.DblClick, _a[\"focus\"\n/* FOCUS */\n] = MouseInteractions.Focus, _a[\"blur\"\n/* BLUR */\n] = MouseInteractions.Blur, _a[\"touchstart\"\n/* TOUCH_START */\n] = MouseInteractions.TouchStart, _a[\"touchend\"\n/* TOUCH_END */\n] = MouseInteractions.TouchEnd, _a);\n\nfunction initMouseInteractionObserver(cb, defaultPrivacyLevel) {\n  var handler = function (event) {\n    var target = event.target;\n\n    if (getNodePrivacyLevel(target, defaultPrivacyLevel) === NodePrivacyLevel.HIDDEN || !hasSerializedNode(target)) {\n      return;\n    }\n\n    var _a = isTouchEvent(event) ? event.changedTouches[0] : event,\n        clientX = _a.clientX,\n        clientY = _a.clientY;\n\n    cb({\n      id: getSerializedNodeId(target),\n      type: eventTypeToMouseInteraction[event.type],\n      x: clientX,\n      y: clientY\n    });\n  };\n\n  return addEventListeners(document, Object.keys(eventTypeToMouseInteraction), handler, {\n    capture: true,\n    passive: true\n  }).stop;\n}\n\nfunction initScrollObserver(cb, defaultPrivacyLevel) {\n  var updatePosition = throttle(monitor(function (event) {\n    var target = event.target;\n\n    if (!target || getNodePrivacyLevel(target, defaultPrivacyLevel) === NodePrivacyLevel.HIDDEN || !hasSerializedNode(target)) {\n      return;\n    }\n\n    var id = getSerializedNodeId(target);\n\n    if (target === document) {\n      var scrollEl = document.scrollingElement || document.documentElement;\n      cb({\n        id: id,\n        x: scrollEl.scrollLeft,\n        y: scrollEl.scrollTop\n      });\n    } else {\n      cb({\n        id: id,\n        x: target.scrollLeft,\n        y: target.scrollTop\n      });\n    }\n  }), SCROLL_OBSERVER_THRESHOLD).throttled;\n  return addEventListener(document, \"scroll\"\n  /* SCROLL */\n  , updatePosition, {\n    capture: true,\n    passive: true\n  }).stop;\n}\n\nfunction initViewportResizeObserver(cb) {\n  var updateDimension = throttle(monitor(function () {\n    var height = getWindowHeight();\n    var width = getWindowWidth();\n    cb({\n      height: Number(height),\n      width: Number(width)\n    });\n  }), 200).throttled;\n  return addEventListener(window, \"resize\"\n  /* RESIZE */\n  , updateDimension, {\n    capture: true,\n    passive: true\n  }).stop;\n}\n\nexport var INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nvar lastInputStateMap = new WeakMap();\nexport function initInputObserver(cb, defaultPrivacyLevel) {\n  function eventHandler(event) {\n    var target = event.target;\n    var nodePrivacyLevel = getNodePrivacyLevel(target, defaultPrivacyLevel);\n\n    if (!target || !target.tagName || !includes(INPUT_TAGS, target.tagName) || nodePrivacyLevel === NodePrivacyLevel.HIDDEN) {\n      return;\n    }\n\n    var type = target.type;\n    var inputState;\n\n    if (type === 'radio' || type === 'checkbox') {\n      if (shouldMaskNode(target, nodePrivacyLevel)) {\n        return;\n      }\n\n      inputState = {\n        isChecked: target.checked\n      };\n    } else {\n      var value = getElementInputValue(target, nodePrivacyLevel);\n\n      if (value === undefined) {\n        return;\n      }\n\n      inputState = {\n        text: value\n      };\n    } // Can be multiple changes on the same node within the same batched mutation observation.\n\n\n    cbWithDedup(target, inputState); // If a radio was checked, other radios with the same name attribute will be unchecked.\n\n    var name = target.name;\n\n    if (type === 'radio' && name && target.checked) {\n      forEach(document.querySelectorAll(\"input[type=\\\"radio\\\"][name=\\\"\" + name + \"\\\"]\"), function (el) {\n        if (el !== target) {\n          // TODO: Consider the privacy implications for various differing input privacy levels\n          cbWithDedup(el, {\n            isChecked: false\n          });\n        }\n      });\n    }\n  }\n  /**\n   * There can be multiple changes on the same node within the same batched mutation observation.\n   */\n\n\n  function cbWithDedup(target, inputState) {\n    if (!hasSerializedNode(target)) {\n      return;\n    }\n\n    var lastInputState = lastInputStateMap.get(target);\n\n    if (!lastInputState || lastInputState.text !== inputState.text || lastInputState.isChecked !== inputState.isChecked) {\n      lastInputStateMap.set(target, inputState);\n      cb(__assign(__assign({}, inputState), {\n        id: getSerializedNodeId(target)\n      }));\n    }\n  }\n\n  var stopEventListeners = addEventListeners(document, [\"input\"\n  /* INPUT */\n  , \"change\"\n  /* CHANGE */\n  ], eventHandler, {\n    capture: true,\n    passive: true\n  }).stop;\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');\n  var hookProperties = [[HTMLInputElement.prototype, 'value'], [HTMLInputElement.prototype, 'checked'], [HTMLSelectElement.prototype, 'value'], [HTMLTextAreaElement.prototype, 'value'], // Some UI library use selectedIndex to set select value\n  [HTMLSelectElement.prototype, 'selectedIndex']];\n  var hookResetters = [];\n\n  if (propertyDescriptor && propertyDescriptor.set) {\n    hookResetters.push.apply(hookResetters, hookProperties.map(function (p) {\n      return hookSetter(p[0], p[1], {\n        set: monitor(function () {\n          // mock to a normal event\n          eventHandler({\n            target: this\n          });\n        })\n      });\n    }));\n  }\n\n  return function () {\n    hookResetters.forEach(function (h) {\n      return h();\n    });\n    stopEventListeners();\n  };\n}\n\nfunction initStyleSheetObserver(cb) {\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  var insertRule = CSSStyleSheet.prototype.insertRule;\n\n  CSSStyleSheet.prototype.insertRule = function (rule, index) {\n    var _this = this;\n\n    callMonitored(function () {\n      if (hasSerializedNode(_this.ownerNode)) {\n        cb({\n          id: getSerializedNodeId(_this.ownerNode),\n          adds: [{\n            rule: rule,\n            index: index\n          }]\n        });\n      }\n    });\n    return insertRule.call(this, rule, index);\n  }; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\n  var deleteRule = CSSStyleSheet.prototype.deleteRule;\n\n  CSSStyleSheet.prototype.deleteRule = function (index) {\n    var _this = this;\n\n    callMonitored(function () {\n      if (hasSerializedNode(_this.ownerNode)) {\n        cb({\n          id: getSerializedNodeId(_this.ownerNode),\n          removes: [{\n            index: index\n          }]\n        });\n      }\n    });\n    return deleteRule.call(this, index);\n  };\n\n  return function () {\n    CSSStyleSheet.prototype.insertRule = insertRule;\n    CSSStyleSheet.prototype.deleteRule = deleteRule;\n  };\n}\n\nfunction initMediaInteractionObserver(mediaInteractionCb, defaultPrivacyLevel) {\n  var handler = function (event) {\n    var target = event.target;\n\n    if (!target || getNodePrivacyLevel(target, defaultPrivacyLevel) === NodePrivacyLevel.HIDDEN || !hasSerializedNode(target)) {\n      return;\n    }\n\n    mediaInteractionCb({\n      id: getSerializedNodeId(target),\n      type: event.type === \"play\"\n      /* PLAY */\n      ? MediaInteractions.Play : MediaInteractions.Pause\n    });\n  };\n\n  return addEventListeners(document, [\"play\"\n  /* PLAY */\n  , \"pause\"\n  /* PAUSE */\n  ], handler, {\n    capture: true,\n    passive: true\n  }).stop;\n}\n\nfunction initFocusObserver(focusCb) {\n  return addEventListeners(window, [\"focus\"\n  /* FOCUS */\n  , \"blur\"\n  /* BLUR */\n  ], function () {\n    focusCb({\n      has_focus: document.hasFocus()\n    });\n  }).stop;\n}","map":{"version":3,"sources":["../../../src/domain/record/observer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var _a;\nimport { __assign } from \"tslib\";\nimport { monitor, callMonitored, throttle, addEventListeners, addEventListener, includes, } from '@datadog/browser-core';\nimport { NodePrivacyLevel } from '../../constants';\nimport { getNodePrivacyLevel, shouldMaskNode } from './privacy';\nimport { getElementInputValue, getSerializedNodeId, hasSerializedNode } from './serializationUtils';\nimport { IncrementalSource, MediaInteractions, MouseInteractions, } from './types';\nimport { forEach, getWindowHeight, getWindowWidth, hookSetter, isTouchEvent } from './utils';\nimport { startMutationObserver } from './mutationObserver';\nvar MOUSE_MOVE_OBSERVER_THRESHOLD = 50;\nvar SCROLL_OBSERVER_THRESHOLD = 100;\nexport function initObservers(o) {\n    var mutationHandler = initMutationObserver(o.mutationController, o.mutationCb, o.defaultPrivacyLevel);\n    var mousemoveHandler = initMoveObserver(o.mousemoveCb);\n    var mouseInteractionHandler = initMouseInteractionObserver(o.mouseInteractionCb, o.defaultPrivacyLevel);\n    var scrollHandler = initScrollObserver(o.scrollCb, o.defaultPrivacyLevel);\n    var viewportResizeHandler = initViewportResizeObserver(o.viewportResizeCb);\n    var inputHandler = initInputObserver(o.inputCb, o.defaultPrivacyLevel);\n    var mediaInteractionHandler = initMediaInteractionObserver(o.mediaInteractionCb, o.defaultPrivacyLevel);\n    var styleSheetObserver = initStyleSheetObserver(o.styleSheetRuleCb);\n    var focusHandler = initFocusObserver(o.focusCb);\n    return function () {\n        mutationHandler();\n        mousemoveHandler();\n        mouseInteractionHandler();\n        scrollHandler();\n        viewportResizeHandler();\n        inputHandler();\n        mediaInteractionHandler();\n        styleSheetObserver();\n        focusHandler();\n    };\n}\nfunction initMutationObserver(mutationController, cb, defaultPrivacyLevel) {\n    return startMutationObserver(mutationController, cb, defaultPrivacyLevel).stop;\n}\nfunction initMoveObserver(cb) {\n    var updatePosition = throttle(monitor(function (event) {\n        var target = event.target;\n        if (hasSerializedNode(target)) {\n            var _a = isTouchEvent(event) ? event.changedTouches[0] : event, clientX = _a.clientX, clientY = _a.clientY;\n            var position = {\n                id: getSerializedNodeId(target),\n                timeOffset: 0,\n                x: clientX,\n                y: clientY,\n            };\n            cb([position], isTouchEvent(event) ? IncrementalSource.TouchMove : IncrementalSource.MouseMove);\n        }\n    }), MOUSE_MOVE_OBSERVER_THRESHOLD, {\n        trailing: false,\n    }).throttled;\n    return addEventListeners(document, [\"mousemove\" /* MOUSE_MOVE */, \"touchmove\" /* TOUCH_MOVE */], updatePosition, {\n        capture: true,\n        passive: true,\n    }).stop;\n}\nvar eventTypeToMouseInteraction = (_a = {},\n    _a[\"mouseup\" /* MOUSE_UP */] = MouseInteractions.MouseUp,\n    _a[\"mousedown\" /* MOUSE_DOWN */] = MouseInteractions.MouseDown,\n    _a[\"click\" /* CLICK */] = MouseInteractions.Click,\n    _a[\"contextmenu\" /* CONTEXT_MENU */] = MouseInteractions.ContextMenu,\n    _a[\"dblclick\" /* DBL_CLICK */] = MouseInteractions.DblClick,\n    _a[\"focus\" /* FOCUS */] = MouseInteractions.Focus,\n    _a[\"blur\" /* BLUR */] = MouseInteractions.Blur,\n    _a[\"touchstart\" /* TOUCH_START */] = MouseInteractions.TouchStart,\n    _a[\"touchend\" /* TOUCH_END */] = MouseInteractions.TouchEnd,\n    _a);\nfunction initMouseInteractionObserver(cb, defaultPrivacyLevel) {\n    var handler = function (event) {\n        var target = event.target;\n        if (getNodePrivacyLevel(target, defaultPrivacyLevel) === NodePrivacyLevel.HIDDEN || !hasSerializedNode(target)) {\n            return;\n        }\n        var _a = isTouchEvent(event) ? event.changedTouches[0] : event, clientX = _a.clientX, clientY = _a.clientY;\n        cb({\n            id: getSerializedNodeId(target),\n            type: eventTypeToMouseInteraction[event.type],\n            x: clientX,\n            y: clientY,\n        });\n    };\n    return addEventListeners(document, Object.keys(eventTypeToMouseInteraction), handler, {\n        capture: true,\n        passive: true,\n    }).stop;\n}\nfunction initScrollObserver(cb, defaultPrivacyLevel) {\n    var updatePosition = throttle(monitor(function (event) {\n        var target = event.target;\n        if (!target ||\n            getNodePrivacyLevel(target, defaultPrivacyLevel) === NodePrivacyLevel.HIDDEN ||\n            !hasSerializedNode(target)) {\n            return;\n        }\n        var id = getSerializedNodeId(target);\n        if (target === document) {\n            var scrollEl = (document.scrollingElement || document.documentElement);\n            cb({\n                id: id,\n                x: scrollEl.scrollLeft,\n                y: scrollEl.scrollTop,\n            });\n        }\n        else {\n            cb({\n                id: id,\n                x: target.scrollLeft,\n                y: target.scrollTop,\n            });\n        }\n    }), SCROLL_OBSERVER_THRESHOLD).throttled;\n    return addEventListener(document, \"scroll\" /* SCROLL */, updatePosition, { capture: true, passive: true }).stop;\n}\nfunction initViewportResizeObserver(cb) {\n    var updateDimension = throttle(monitor(function () {\n        var height = getWindowHeight();\n        var width = getWindowWidth();\n        cb({\n            height: Number(height),\n            width: Number(width),\n        });\n    }), 200).throttled;\n    return addEventListener(window, \"resize\" /* RESIZE */, updateDimension, { capture: true, passive: true }).stop;\n}\nexport var INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nvar lastInputStateMap = new WeakMap();\nexport function initInputObserver(cb, defaultPrivacyLevel) {\n    function eventHandler(event) {\n        var target = event.target;\n        var nodePrivacyLevel = getNodePrivacyLevel(target, defaultPrivacyLevel);\n        if (!target ||\n            !target.tagName ||\n            !includes(INPUT_TAGS, target.tagName) ||\n            nodePrivacyLevel === NodePrivacyLevel.HIDDEN) {\n            return;\n        }\n        var type = target.type;\n        var inputState;\n        if (type === 'radio' || type === 'checkbox') {\n            if (shouldMaskNode(target, nodePrivacyLevel)) {\n                return;\n            }\n            inputState = { isChecked: target.checked };\n        }\n        else {\n            var value = getElementInputValue(target, nodePrivacyLevel);\n            if (value === undefined) {\n                return;\n            }\n            inputState = { text: value };\n        }\n        // Can be multiple changes on the same node within the same batched mutation observation.\n        cbWithDedup(target, inputState);\n        // If a radio was checked, other radios with the same name attribute will be unchecked.\n        var name = target.name;\n        if (type === 'radio' && name && target.checked) {\n            forEach(document.querySelectorAll(\"input[type=\\\"radio\\\"][name=\\\"\" + name + \"\\\"]\"), function (el) {\n                if (el !== target) {\n                    // TODO: Consider the privacy implications for various differing input privacy levels\n                    cbWithDedup(el, { isChecked: false });\n                }\n            });\n        }\n    }\n    /**\n     * There can be multiple changes on the same node within the same batched mutation observation.\n     */\n    function cbWithDedup(target, inputState) {\n        if (!hasSerializedNode(target)) {\n            return;\n        }\n        var lastInputState = lastInputStateMap.get(target);\n        if (!lastInputState ||\n            lastInputState.text !== inputState.text ||\n            lastInputState.isChecked !== inputState.isChecked) {\n            lastInputStateMap.set(target, inputState);\n            cb(__assign(__assign({}, inputState), { id: getSerializedNodeId(target) }));\n        }\n    }\n    var stopEventListeners = addEventListeners(document, [\"input\" /* INPUT */, \"change\" /* CHANGE */], eventHandler, {\n        capture: true,\n        passive: true,\n    }).stop;\n    var propertyDescriptor = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');\n    var hookProperties = [\n        [HTMLInputElement.prototype, 'value'],\n        [HTMLInputElement.prototype, 'checked'],\n        [HTMLSelectElement.prototype, 'value'],\n        [HTMLTextAreaElement.prototype, 'value'],\n        // Some UI library use selectedIndex to set select value\n        [HTMLSelectElement.prototype, 'selectedIndex'],\n    ];\n    var hookResetters = [];\n    if (propertyDescriptor && propertyDescriptor.set) {\n        hookResetters.push.apply(hookResetters, hookProperties.map(function (p) {\n            return hookSetter(p[0], p[1], {\n                set: monitor(function () {\n                    // mock to a normal event\n                    eventHandler({ target: this });\n                }),\n            });\n        }));\n    }\n    return function () {\n        hookResetters.forEach(function (h) { return h(); });\n        stopEventListeners();\n    };\n}\nfunction initStyleSheetObserver(cb) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    var insertRule = CSSStyleSheet.prototype.insertRule;\n    CSSStyleSheet.prototype.insertRule = function (rule, index) {\n        var _this = this;\n        callMonitored(function () {\n            if (hasSerializedNode(_this.ownerNode)) {\n                cb({\n                    id: getSerializedNodeId(_this.ownerNode),\n                    adds: [{ rule: rule, index: index }],\n                });\n            }\n        });\n        return insertRule.call(this, rule, index);\n    };\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    var deleteRule = CSSStyleSheet.prototype.deleteRule;\n    CSSStyleSheet.prototype.deleteRule = function (index) {\n        var _this = this;\n        callMonitored(function () {\n            if (hasSerializedNode(_this.ownerNode)) {\n                cb({\n                    id: getSerializedNodeId(_this.ownerNode),\n                    removes: [{ index: index }],\n                });\n            }\n        });\n        return deleteRule.call(this, index);\n    };\n    return function () {\n        CSSStyleSheet.prototype.insertRule = insertRule;\n        CSSStyleSheet.prototype.deleteRule = deleteRule;\n    };\n}\nfunction initMediaInteractionObserver(mediaInteractionCb, defaultPrivacyLevel) {\n    var handler = function (event) {\n        var target = event.target;\n        if (!target ||\n            getNodePrivacyLevel(target, defaultPrivacyLevel) === NodePrivacyLevel.HIDDEN ||\n            !hasSerializedNode(target)) {\n            return;\n        }\n        mediaInteractionCb({\n            id: getSerializedNodeId(target),\n            type: event.type === \"play\" /* PLAY */ ? MediaInteractions.Play : MediaInteractions.Pause,\n        });\n    };\n    return addEventListeners(document, [\"play\" /* PLAY */, \"pause\" /* PAUSE */], handler, { capture: true, passive: true }).stop;\n}\nfunction initFocusObserver(focusCb) {\n    return addEventListeners(window, [\"focus\" /* FOCUS */, \"blur\" /* BLUR */], function () {\n        focusCb({ has_focus: document.hasFocus() });\n    }).stop;\n}\n//# sourceMappingURL=observer.js.map"]},"metadata":{},"sourceType":"module"}