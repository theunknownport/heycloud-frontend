{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\React\\\\heycloud-frontend\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport NavbarSide from '../components/NavBarSide';\nimport NavbarTop from \"../components/NavBarTop\";\nimport Footer from '../components/Footer';\nimport RecentTasks from '../components/RecentTasks';\nimport DashboardWidgeds from '../components/DashboardWidgeds';\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport GifLoader from 'react-gif-loader';\nimport Preloader from '../assets/img/logos/logo-preloader.gif';\nimport querySearch from \"stringquery\";\nimport { CSSTransition } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = props => {\n  _s();\n\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const [preloaderState, setPreloaderState] = useState(false);\n  useEffect(() => {\n    let timer1 = setTimeout(() => setPreloaderState(false)); // this will clear Timeout\n    // when component unmount like in willComponentUnmount\n    // and show will not change to true\n\n    return () => {\n      clearTimeout(timer1);\n    };\n  }, // useEffect will run only one time with empty []\n  // if you pass a value to array,\n  // like this - [data]\n  // than clearTimeout will run every time\n  // this value changes (useEffect re-run)\n  []);\n\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrapper\",\n    children: () => {\n      if (preloaderState) {\n        return /*#__PURE__*/_jsxDEV(GifLoader, {\n          loading: preloaderState,\n          imageSrc: Preloader,\n          imageStyle: {\n            height: '20%',\n            ' margin-left': 'auto',\n            'margin-right': 'auto',\n            'margin-top': '15%'\n          },\n          overlayBackground: \"rgba(255,255,255,255)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(NavbarSide, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"d-flex flex-column\",\n            id: \"content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(NavbarTop, {\n                user: currentUser.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"container-fluid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"d-sm-flex justify-content-between align-items-center mb-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    class: \"text-dark mb-0\",\n                    children: \"Dashboard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(DashboardWidgeds, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(RecentTasks, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"xoDFWNALF2OTWukGtOTfq37enok=\", false, function () {\n  return [useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontend/src/pages/Dashboard.js"],"names":["React","useState","useEffect","NavbarSide","NavbarTop","Footer","RecentTasks","DashboardWidgeds","useSelector","Redirect","GifLoader","Preloader","querySearch","CSSTransition","Dashboard","props","user","currentUser","state","auth","preloaderState","setPreloaderState","timer1","setTimeout","clearTimeout","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;;AAIA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAwBT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAzC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAAC,KAAD,CAApD;AAGAC,EAAAA,SAAS,CACL,MAAM;AACJ,QAAIoB,MAAM,GAAGC,UAAU,CAAC,MAAMF,iBAAiB,CAAC,KAAD,CAAxB,CAAvB,CADI,CAGJ;AACA;AACA;;AACA,WAAO,MAAM;AACXG,MAAAA,YAAY,CAACF,MAAD,CAAZ;AACD,KAFD;AAGD,GAVI,EAWL;AACA;AACA;AACA;AACA;AACA,IAhBK,CAAT;;AAmBA,MAAI,CAACL,WAAL,EAAkB;AAChB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,cACK,MAAM;AACH,UAAIG,cAAJ,EAAoB;AAChB,4BACI,QAAC,SAAD;AACA,UAAA,OAAO,EAAEA,cADT;AAEA,UAAA,QAAQ,EAAET,SAFV;AAGA,UAAA,UAAU,EAAE;AAACc,YAAAA,MAAM,EAAE,KAAT;AAAe,4BAAgB,MAA/B;AAAsC,4BAAgB,MAAtD;AAA8D,0BAAc;AAA5E,WAHZ;AAIA,UAAA,iBAAiB,EAAC;AAJlB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OATD,MASO;AACH,4BACI;AAAA,kCACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAK,YAAA,KAAK,EAAC,oBAAX;AAAgC,YAAA,EAAE,EAAC,iBAAnC;AAAA,oCACI;AAAK,cAAA,EAAE,EAAC,SAAR;AAAA,sCACA,QAAC,SAAD;AAAW,gBAAA,IAAI,EAAER,WAAW,CAACD;AAA7B;AAAA;AAAA;AAAA;AAAA,sBADA,eAEI;AAAK,gBAAA,KAAK,EAAC,iBAAX;AAAA,wCACI;AAAK,kBAAA,KAAK,EAAC,2DAAX;AAAA,yCACI;AAAI,oBAAA,KAAK,EAAC,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAWI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA,wBADJ;AAkBH;AAAC;AA9BV;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CA/DD;;GAAMF,S;UAC4BN,W;;;KAD5BM,S;AAiEN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport NavbarSide from '../components/NavBarSide';\nimport NavbarTop from \"../components/NavBarTop\"\nimport Footer from '../components/Footer';\nimport RecentTasks from '../components/RecentTasks';\nimport DashboardWidgeds from '../components/DashboardWidgeds';\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport GifLoader from 'react-gif-loader';\nimport Preloader from '../assets/img/logos/logo-preloader.gif'\nimport querySearch from \"stringquery\";\nimport { CSSTransition } from 'react-transition-group';\n\n\n\nconst Dashboard = (props) => {\n    const { user: currentUser } = useSelector((state) => state.auth);\n    const [preloaderState, setPreloaderState] = useState(false);\n    \n\n    useEffect(\n        () => {\n          let timer1 = setTimeout(() => setPreloaderState(false));\n    \n          // this will clear Timeout\n          // when component unmount like in willComponentUnmount\n          // and show will not change to true\n          return () => {\n            clearTimeout(timer1);\n          };\n        },\n        // useEffect will run only one time with empty []\n        // if you pass a value to array,\n        // like this - [data]\n        // than clearTimeout will run every time\n        // this value changes (useEffect re-run)\n        []\n    );\n\n    if (!currentUser) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n        <div id=\"wrapper\">\n            {() => {\n                if (preloaderState) {\n                    return (\n                        <GifLoader\n                        loading={preloaderState}\n                        imageSrc={Preloader}\n                        imageStyle={{height: '20%',' margin-left': 'auto','margin-right': 'auto', 'margin-top': '15%'}}\n                        overlayBackground=\"rgba(255,255,255,255)\"\n                        />\n                    )\n                } else {\n                    return (\n                        <>\n                        <NavbarSide/>\n                        <div class=\"d-flex flex-column\" id=\"content-wrapper\">\n                            <div id=\"content\">\n                            <NavbarTop user={currentUser.user}/>\n                                <div class=\"container-fluid\">\n                                    <div class=\"d-sm-flex justify-content-between align-items-center mb-4\">\n                                        <h3 class=\"text-dark mb-0\">Dashboard</h3>\n                                    </div>\n                                    <DashboardWidgeds />\n                                    <RecentTasks />\n                                </div>\n                            </div>\n                            <Footer />\n                        </div>\n                        </>\n                    )\n                }}\n\n            }\n        </div>\n    )\n}\n\nexport default Dashboard\n\n"]},"metadata":{},"sourceType":"module"}