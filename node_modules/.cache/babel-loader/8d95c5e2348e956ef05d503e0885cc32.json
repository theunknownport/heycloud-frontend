{"ast":null,"code":"import GeometryElementsArray from './geometry-elements-array';\nimport Element from './element';\nimport { pointsToCurve } from './utils/points-to-curve';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport Arc from '../geometry/arc';\nimport Rect from '../geometry/rect';\nimport Segment from '../geometry/segment';\nimport Point from '../geometry/point';\nimport Size from '../geometry/size';\nimport lineIntersectionsCount from '../geometry/math/line-intersections-count';\nimport { defined, last, rad } from '../util';\nimport parsePath from '../parsing/parse-path';\nimport elementsBoundingBox from './utils/elements-bounding-box';\nimport elementsClippedBoundingBox from './utils/elements-clippend-bounding-box';\nimport limitValue from '../util/limit-value';\nvar SPACE = ' ';\n\nvar printPoints = function (precision) {\n  return function () {\n    var points = [],\n        len = arguments.length;\n\n    while (len--) points[len] = arguments[len];\n\n    return points.map(function (p) {\n      return p.toString(precision);\n    }).join(SPACE);\n    ;\n  };\n};\n\nvar segmentType = function (segmentStart, segmentEnd) {\n  return segmentStart.controlOut() && segmentEnd.controlIn() ? 'C' : 'L';\n};\n\nexport var Path = function (superclass) {\n  function Path(options) {\n    superclass.call(this, options);\n    this.segments = new GeometryElementsArray();\n    this.segments.addObserver(this);\n\n    if (!defined(this.options.stroke)) {\n      this.stroke('#000');\n\n      if (!defined(this.options.stroke.lineJoin)) {\n        this.options.set('stroke.lineJoin', 'miter');\n      }\n    }\n  }\n\n  if (superclass) Path.__proto__ = superclass;\n  Path.prototype = Object.create(superclass && superclass.prototype);\n  Path.prototype.constructor = Path;\n  var prototypeAccessors = {\n    nodeType: {\n      configurable: true\n    }\n  };\n\n  prototypeAccessors.nodeType.get = function () {\n    return 'Path';\n  };\n\n  Path.prototype.moveTo = function moveTo(x, y) {\n    this.suspend();\n    this.segments.elements([]);\n    this.resume();\n    this.lineTo(x, y);\n    return this;\n  };\n\n  Path.prototype.lineTo = function lineTo(x, y) {\n    var point = defined(y) ? new Point(x, y) : x;\n    var segment = new Segment(point);\n    this.segments.push(segment);\n    return this;\n  };\n\n  Path.prototype.curveTo = function curveTo(controlOut, controlIn, point) {\n    if (this.segments.length > 0) {\n      var lastSegment = last(this.segments);\n      var segment = new Segment(point, controlIn);\n      this.suspend();\n      lastSegment.controlOut(controlOut);\n      this.resume();\n      this.segments.push(segment);\n    }\n\n    return this;\n  };\n\n  Path.prototype.arc = function arc(startAngle, endAngle, radiusX, radiusY, anticlockwise) {\n    if (this.segments.length > 0) {\n      var lastSegment = last(this.segments);\n      var anchor = lastSegment.anchor();\n      var start = rad(startAngle);\n      var center = new Point(anchor.x - radiusX * Math.cos(start), anchor.y - radiusY * Math.sin(start));\n      var arc = new Arc(center, {\n        startAngle: startAngle,\n        endAngle: endAngle,\n        radiusX: radiusX,\n        radiusY: radiusY,\n        anticlockwise: anticlockwise\n      });\n\n      this._addArcSegments(arc);\n    }\n\n    return this;\n  };\n\n  Path.prototype.arcTo = function arcTo(end, rx, ry, largeArc, swipe, rotation) {\n    if (this.segments.length > 0) {\n      var lastSegment = last(this.segments);\n      var anchor = lastSegment.anchor();\n      var arc = Arc.fromPoints(anchor, Point.create(end), rx, ry, largeArc, swipe, rotation);\n\n      this._addArcSegments(arc);\n    }\n\n    return this;\n  };\n\n  Path.prototype._addArcSegments = function _addArcSegments(arc) {\n    var this$1 = this;\n    this.suspend();\n    var curvePoints = arc.curvePoints();\n\n    for (var i = 1; i < curvePoints.length; i += 3) {\n      this$1.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n    }\n\n    this.resume();\n    this.geometryChange();\n  };\n\n  Path.prototype.close = function close() {\n    this.options.closed = true;\n    this.geometryChange();\n    return this;\n  };\n\n  Path.prototype.rawBBox = function rawBBox() {\n    return this._bbox();\n  };\n\n  Path.prototype.toString = function toString(digits) {\n    var output = '';\n    var segments = this.segments;\n    var length = segments.length;\n\n    if (length > 0) {\n      var parts = [];\n      var print = printPoints(digits);\n      var currentType;\n\n      for (var i = 1; i < length; i++) {\n        var type = segmentType(segments[i - 1], segments[i]);\n\n        if (type !== currentType) {\n          currentType = type;\n          parts.push(type);\n        }\n\n        if (type === 'L') {\n          parts.push(print(segments[i].anchor()));\n        } else {\n          parts.push(print(segments[i - 1].controlOut(), segments[i].controlIn(), segments[i].anchor()));\n        }\n      }\n\n      output = 'M' + print(segments[0].anchor()) + SPACE + parts.join(SPACE);\n\n      if (this.options.closed) {\n        output += 'Z';\n      }\n    }\n\n    return output;\n  };\n\n  Path.prototype._containsPoint = function _containsPoint(point) {\n    var segments = this.segments;\n    var length = segments.length;\n    var intersectionsCount = 0;\n    var previous, current;\n\n    for (var idx = 1; idx < length; idx++) {\n      previous = segments[idx - 1];\n      current = segments[idx];\n      intersectionsCount += previous._intersectionsTo(current, point);\n    }\n\n    if (this.options.closed || !segments[0].anchor().equals(segments[length - 1].anchor())) {\n      intersectionsCount += lineIntersectionsCount(segments[0].anchor(), segments[length - 1].anchor(), point);\n    }\n\n    return intersectionsCount % 2 !== 0;\n  };\n\n  Path.prototype._isOnPath = function _isOnPath(point, width) {\n    var segments = this.segments;\n    var length = segments.length;\n    var pathWidth = width || this.options.stroke.width;\n\n    if (length > 1) {\n      if (segments[0]._isOnPathTo(segments[1], point, pathWidth, 'start')) {\n        return true;\n      }\n\n      for (var idx = 2; idx <= length - 2; idx++) {\n        if (segments[idx - 1]._isOnPathTo(segments[idx], point, pathWidth)) {\n          return true;\n        }\n      }\n\n      if (segments[length - 2]._isOnPathTo(segments[length - 1], point, pathWidth, 'end')) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Path.prototype._bbox = function _bbox(matrix) {\n    var segments = this.segments;\n    var length = segments.length;\n    var boundingBox;\n\n    if (length === 1) {\n      var anchor = segments[0].anchor().transformCopy(matrix);\n      boundingBox = new Rect(anchor, Size.ZERO);\n    } else if (length > 0) {\n      for (var i = 1; i < length; i++) {\n        var segmentBox = segments[i - 1].bboxTo(segments[i], matrix);\n\n        if (boundingBox) {\n          boundingBox = Rect.union(boundingBox, segmentBox);\n        } else {\n          boundingBox = segmentBox;\n        }\n      }\n    }\n\n    return boundingBox;\n  };\n\n  Path.parse = function parse(str, options) {\n    return MultiPath.parse(str, options);\n  };\n\n  Path.fromRect = function fromRect(rect, options) {\n    var path = new Path(options);\n    var ref = rect.cornerRadius;\n    var rx = ref[0];\n    var ry = ref[1];\n\n    if (rx === 0 && ry === 0) {\n      path.moveTo(rect.topLeft()).lineTo(rect.topRight()).lineTo(rect.bottomRight()).lineTo(rect.bottomLeft()).close();\n    } else {\n      var origin = rect.origin;\n      var x = origin.x;\n      var y = origin.y;\n      var width = rect.width();\n      var height = rect.height();\n      rx = limitValue(rx, 0, width / 2);\n      ry = limitValue(ry, 0, height / 2);\n      path.moveTo(x + rx, y).lineTo(x + width - rx, y).arcTo([x + width, y + ry], rx, ry, false).lineTo(x + width, y + height - ry).arcTo([x + width - rx, y + height], rx, ry, false).lineTo(x + rx, y + height).arcTo([x, y + height - ry], rx, ry, false).lineTo(x, y + ry).arcTo([x + rx, y], rx, ry, false);\n    }\n\n    return path;\n  };\n\n  Path.fromPoints = function fromPoints(points, options) {\n    if (points) {\n      var path = new Path(options);\n\n      for (var i = 0; i < points.length; i++) {\n        var point = Point.create(points[i]);\n\n        if (point) {\n          if (i === 0) {\n            path.moveTo(point);\n          } else {\n            path.lineTo(point);\n          }\n        }\n      }\n\n      return path;\n    }\n  };\n\n  Path.curveFromPoints = function curveFromPoints(points, options) {\n    if (points) {\n      var segments = pointsToCurve(points);\n      var path = new Path(options);\n      path.segments.push.apply(path.segments, segments);\n      return path;\n    }\n  };\n\n  Path.fromArc = function fromArc(arc, options) {\n    var path = new Path(options);\n    var startAngle = arc.startAngle;\n    var start = arc.pointAt(startAngle);\n    path.moveTo(start.x, start.y);\n    path.arc(startAngle, arc.endAngle, arc.radiusX, arc.radiusY, arc.anticlockwise);\n    return path;\n  };\n\n  Object.defineProperties(Path.prototype, prototypeAccessors);\n  return Path;\n}(paintable(measurable(Element)));\nexport var MultiPath = function (superclass) {\n  function MultiPath(options) {\n    superclass.call(this, options);\n    this.paths = new GeometryElementsArray();\n    this.paths.addObserver(this);\n\n    if (!defined(this.options.stroke)) {\n      this.stroke('#000');\n    }\n  }\n\n  if (superclass) MultiPath.__proto__ = superclass;\n  MultiPath.prototype = Object.create(superclass && superclass.prototype);\n  MultiPath.prototype.constructor = MultiPath;\n  var prototypeAccessors$1 = {\n    nodeType: {\n      configurable: true\n    }\n  };\n\n  MultiPath.parse = function parse(str, options) {\n    var instance = new MultiPath(options);\n    return parsePath(instance, str);\n  };\n\n  MultiPath.prototype.toString = function toString(digits) {\n    var paths = this.paths;\n    var output = '';\n\n    if (paths.length > 0) {\n      var result = [];\n\n      for (var i = 0; i < paths.length; i++) {\n        result.push(paths[i].toString(digits));\n      }\n\n      output = result.join(SPACE);\n    }\n\n    return output;\n  };\n\n  prototypeAccessors$1.nodeType.get = function () {\n    return 'MultiPath';\n  };\n\n  MultiPath.prototype.moveTo = function moveTo(x, y) {\n    var path = new Path();\n    path.moveTo(x, y);\n    this.paths.push(path);\n    return this;\n  };\n\n  MultiPath.prototype.lineTo = function lineTo(x, y) {\n    if (this.paths.length > 0) {\n      last(this.paths).lineTo(x, y);\n    }\n\n    return this;\n  };\n\n  MultiPath.prototype.curveTo = function curveTo(controlOut, controlIn, point) {\n    if (this.paths.length > 0) {\n      last(this.paths).curveTo(controlOut, controlIn, point);\n    }\n\n    return this;\n  };\n\n  MultiPath.prototype.arc = function arc(startAngle, endAngle, radiusX, radiusY, anticlockwise) {\n    if (this.paths.length > 0) {\n      last(this.paths).arc(startAngle, endAngle, radiusX, radiusY, anticlockwise);\n    }\n\n    return this;\n  };\n\n  MultiPath.prototype.arcTo = function arcTo(end, rx, ry, largeArc, swipe, rotation) {\n    if (this.paths.length > 0) {\n      last(this.paths).arcTo(end, rx, ry, largeArc, swipe, rotation);\n    }\n\n    return this;\n  };\n\n  MultiPath.prototype.close = function close() {\n    if (this.paths.length > 0) {\n      last(this.paths).close();\n    }\n\n    return this;\n  };\n\n  MultiPath.prototype._bbox = function _bbox(matrix) {\n    return elementsBoundingBox(this.paths, true, matrix);\n  };\n\n  MultiPath.prototype.rawBBox = function rawBBox() {\n    return elementsBoundingBox(this.paths, false);\n  };\n\n  MultiPath.prototype._containsPoint = function _containsPoint(point) {\n    var paths = this.paths;\n\n    for (var idx = 0; idx < paths.length; idx++) {\n      if (paths[idx]._containsPoint(point)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  MultiPath.prototype._isOnPath = function _isOnPath(point) {\n    var paths = this.paths;\n    var width = this.options.stroke.width;\n\n    for (var idx = 0; idx < paths.length; idx++) {\n      if (paths[idx]._isOnPath(point, width)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  MultiPath.prototype._clippedBBox = function _clippedBBox(transformation) {\n    return elementsClippedBoundingBox(this.paths, this.currentTransform(transformation));\n  };\n\n  Object.defineProperties(MultiPath.prototype, prototypeAccessors$1);\n  return MultiPath;\n}(paintable(measurable(Element)));","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-drawing/dist/es/shapes/path.js"],"names":["GeometryElementsArray","Element","pointsToCurve","paintable","measurable","Arc","Rect","Segment","Point","Size","lineIntersectionsCount","defined","last","rad","parsePath","elementsBoundingBox","elementsClippedBoundingBox","limitValue","SPACE","printPoints","precision","points","len","arguments","length","map","p","toString","join","segmentType","segmentStart","segmentEnd","controlOut","controlIn","Path","superclass","options","call","segments","addObserver","stroke","lineJoin","set","__proto__","prototype","Object","create","constructor","prototypeAccessors","nodeType","configurable","get","moveTo","x","y","suspend","elements","resume","lineTo","point","segment","push","curveTo","lastSegment","arc","startAngle","endAngle","radiusX","radiusY","anticlockwise","anchor","start","center","Math","cos","sin","_addArcSegments","arcTo","end","rx","ry","largeArc","swipe","rotation","fromPoints","this$1","curvePoints","i","geometryChange","close","closed","rawBBox","_bbox","digits","output","parts","print","currentType","type","_containsPoint","intersectionsCount","previous","current","idx","_intersectionsTo","equals","_isOnPath","width","pathWidth","_isOnPathTo","matrix","boundingBox","transformCopy","ZERO","segmentBox","bboxTo","union","parse","str","MultiPath","fromRect","rect","path","ref","cornerRadius","topLeft","topRight","bottomRight","bottomLeft","origin","height","curveFromPoints","apply","fromArc","pointAt","defineProperties","paths","prototypeAccessors$1","instance","result","_clippedBBox","transformation","currentTransform"],"mappings":"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","sourcesContent":["import GeometryElementsArray from './geometry-elements-array';\nimport Element from './element';\nimport { pointsToCurve } from './utils/points-to-curve';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport Arc from '../geometry/arc';\nimport Rect from '../geometry/rect';\nimport Segment from '../geometry/segment';\nimport Point from '../geometry/point';\nimport Size from '../geometry/size';\nimport lineIntersectionsCount from '../geometry/math/line-intersections-count';\nimport { defined, last, rad } from '../util';\nimport parsePath from '../parsing/parse-path';\nimport elementsBoundingBox from './utils/elements-bounding-box';\nimport elementsClippedBoundingBox from './utils/elements-clippend-bounding-box';\nimport limitValue from '../util/limit-value';\n\nvar SPACE = ' ';\nvar printPoints = function (precision) { return function () {\n    var points = [], len = arguments.length;\n    while ( len-- ) points[ len ] = arguments[ len ];\n\n    return points.map(function (p) { return p.toString(precision); }).join(SPACE);\n; }    };\nvar segmentType = function (segmentStart, segmentEnd) { return segmentStart.controlOut() && segmentEnd.controlIn() ? 'C' : 'L'; };\n\nexport var Path = (function (superclass) {\n    function Path(options) {\n        superclass.call(this, options);\n        this.segments = new GeometryElementsArray();\n        this.segments.addObserver(this);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke('#000');\n\n            if (!defined(this.options.stroke.lineJoin)) {\n                this.options.set('stroke.lineJoin', 'miter');\n            }\n        }\n    }\n\n    if ( superclass ) Path.__proto__ = superclass;\n    Path.prototype = Object.create( superclass && superclass.prototype );\n    Path.prototype.constructor = Path;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    prototypeAccessors.nodeType.get = function () {\n        return 'Path';\n    };\n\n    Path.prototype.moveTo = function moveTo (x, y) {\n        this.suspend();\n        this.segments.elements([]);\n        this.resume();\n\n        this.lineTo(x, y);\n\n        return this;\n    };\n\n    Path.prototype.lineTo = function lineTo (x, y) {\n        var point = defined(y) ? new Point(x, y) : x;\n        var segment = new Segment(point);\n\n        this.segments.push(segment);\n\n        return this;\n    };\n\n    Path.prototype.curveTo = function curveTo (controlOut, controlIn, point) {\n        if (this.segments.length > 0) {\n            var lastSegment = last(this.segments);\n            var segment = new Segment(point, controlIn);\n            this.suspend();\n            lastSegment.controlOut(controlOut);\n            this.resume();\n\n            this.segments.push(segment);\n        }\n\n        return this;\n    };\n\n    Path.prototype.arc = function arc (startAngle, endAngle, radiusX, radiusY, anticlockwise) {\n        if (this.segments.length > 0) {\n            var lastSegment = last(this.segments);\n            var anchor = lastSegment.anchor();\n            var start = rad(startAngle);\n            var center = new Point(anchor.x - radiusX * Math.cos(start),\n                anchor.y - radiusY * Math.sin(start));\n            var arc = new Arc(center, {\n                startAngle: startAngle,\n                endAngle: endAngle,\n                radiusX: radiusX,\n                radiusY: radiusY,\n                anticlockwise: anticlockwise\n            });\n\n            this._addArcSegments(arc);\n        }\n\n        return this;\n    };\n\n    Path.prototype.arcTo = function arcTo (end, rx, ry, largeArc, swipe, rotation) {\n        if (this.segments.length > 0) {\n            var lastSegment = last(this.segments);\n            var anchor = lastSegment.anchor();\n            var arc = Arc.fromPoints(anchor, Point.create(end), rx, ry, largeArc, swipe, rotation);\n\n            this._addArcSegments(arc);\n        }\n        return this;\n    };\n\n    Path.prototype._addArcSegments = function _addArcSegments (arc) {\n        var this$1 = this;\n\n        this.suspend();\n\n        var curvePoints = arc.curvePoints();\n\n        for (var i = 1; i < curvePoints.length; i += 3) {\n            this$1.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n        }\n\n        this.resume();\n        this.geometryChange();\n    };\n\n    Path.prototype.close = function close () {\n        this.options.closed = true;\n        this.geometryChange();\n\n        return this;\n    };\n\n    Path.prototype.rawBBox = function rawBBox () {\n        return this._bbox();\n    };\n\n    Path.prototype.toString = function toString (digits) {\n        var output = '';\n\n        var segments = this.segments;\n        var length = segments.length;\n        if (length > 0) {\n            var parts = [];\n            var print = printPoints(digits);\n            var currentType;\n\n            for (var i = 1; i < length; i++) {\n                var type = segmentType(segments[i - 1], segments[i]);\n                if (type !== currentType) {\n                    currentType = type;\n                    parts.push(type);\n                }\n\n                if (type === 'L') {\n                    parts.push(print(segments[i].anchor()));\n                } else {\n                    parts.push(print(\n                        segments[i - 1].controlOut(), segments[i].controlIn(), segments[i].anchor()\n                    ));\n                }\n            }\n\n            output = 'M' + print(segments[0].anchor()) + SPACE + parts.join(SPACE);\n            if (this.options.closed) {\n                output += 'Z';\n            }\n        }\n\n        return output;\n    };\n\n    Path.prototype._containsPoint = function _containsPoint (point) {\n        var segments = this.segments;\n        var length = segments.length;\n        var intersectionsCount = 0;\n        var previous, current;\n\n        for (var idx = 1; idx < length; idx++) {\n            previous = segments[idx - 1];\n            current = segments[idx];\n            intersectionsCount += previous._intersectionsTo(current, point);\n        }\n\n        if (this.options.closed || !segments[0].anchor().equals(segments[length - 1].anchor())) {\n            intersectionsCount += lineIntersectionsCount(segments[0].anchor(), segments[length - 1].anchor(), point);\n        }\n\n        return intersectionsCount % 2 !== 0;\n    };\n\n    Path.prototype._isOnPath = function _isOnPath (point, width) {\n        var segments = this.segments;\n        var length = segments.length;\n        var pathWidth = width || this.options.stroke.width;\n\n        if (length > 1) {\n            if (segments[0]._isOnPathTo(segments[1], point, pathWidth, 'start')) {\n                return true;\n            }\n\n            for (var idx = 2; idx <= length - 2; idx++) {\n                if (segments[idx - 1]._isOnPathTo(segments[idx], point, pathWidth)) {\n                    return true;\n                }\n            }\n\n            if (segments[length - 2]._isOnPathTo(segments[length - 1], point, pathWidth, 'end')) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    Path.prototype._bbox = function _bbox (matrix) {\n        var segments = this.segments;\n        var length = segments.length;\n        var boundingBox;\n\n        if (length === 1) {\n            var anchor = segments[0].anchor().transformCopy(matrix);\n            boundingBox = new Rect(anchor, Size.ZERO);\n        } else if (length > 0) {\n            for (var i = 1; i < length; i++) {\n                var segmentBox = segments[i - 1].bboxTo(segments[i], matrix);\n                if (boundingBox) {\n                    boundingBox = Rect.union(boundingBox, segmentBox);\n                } else {\n                    boundingBox = segmentBox;\n                }\n            }\n        }\n\n        return boundingBox;\n    };\n\n    Path.parse = function parse (str, options) {\n        return MultiPath.parse(str, options);\n    };\n\n    Path.fromRect = function fromRect (rect, options) {\n        var path = new Path(options);\n        var ref = rect.cornerRadius;\n        var rx = ref[0];\n        var ry = ref[1];\n\n        if (rx === 0 && ry === 0) {\n            path.moveTo(rect.topLeft())\n                .lineTo(rect.topRight())\n                .lineTo(rect.bottomRight())\n                .lineTo(rect.bottomLeft())\n                .close();\n        } else {\n            var origin = rect.origin;\n            var x = origin.x;\n            var y = origin.y;\n            var width = rect.width();\n            var height = rect.height();\n            rx = limitValue(rx, 0, width / 2);\n            ry = limitValue(ry, 0, height / 2);\n\n            path.moveTo(x + rx, y)\n                .lineTo(x + width - rx, y)\n                .arcTo([ x + width, y + ry ], rx, ry, false)\n                .lineTo(x + width, y + height - ry)\n                .arcTo([ x + width - rx, y + height ], rx, ry, false)\n                .lineTo(x + rx, y + height)\n                .arcTo([ x, y + height - ry ], rx, ry, false)\n                .lineTo(x, y + ry)\n                .arcTo([ x + rx, y ], rx, ry, false);\n        }\n\n        return path;\n    };\n\n    Path.fromPoints = function fromPoints (points, options) {\n        if (points) {\n            var path = new Path(options);\n\n            for (var i = 0; i < points.length; i++) {\n                var point = Point.create(points[i]);\n                if (point) {\n                    if (i === 0) {\n                        path.moveTo(point);\n                    } else {\n                        path.lineTo(point);\n                    }\n                }\n            }\n\n            return path;\n        }\n    };\n\n    Path.curveFromPoints = function curveFromPoints (points, options) {\n        if (points) {\n            var segments = pointsToCurve(points);\n            var path = new Path(options);\n            path.segments.push.apply(path.segments, segments);\n\n            return path;\n        }\n    };\n\n    Path.fromArc = function fromArc (arc, options) {\n        var path = new Path(options);\n        var startAngle = arc.startAngle;\n        var start = arc.pointAt(startAngle);\n        path.moveTo(start.x, start.y);\n        path.arc(startAngle, arc.endAngle, arc.radiusX, arc.radiusY, arc.anticlockwise);\n        return path;\n    };\n\n    Object.defineProperties( Path.prototype, prototypeAccessors );\n\n    return Path;\n}(paintable(measurable(Element))));\n\nexport var MultiPath = (function (superclass) {\n    function MultiPath(options) {\n        superclass.call(this, options);\n        this.paths = new GeometryElementsArray();\n        this.paths.addObserver(this);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke('#000');\n        }\n    }\n\n    if ( superclass ) MultiPath.__proto__ = superclass;\n    MultiPath.prototype = Object.create( superclass && superclass.prototype );\n    MultiPath.prototype.constructor = MultiPath;\n\n    var prototypeAccessors$1 = { nodeType: { configurable: true } };\n\n    MultiPath.parse = function parse (str, options) {\n        var instance = new MultiPath(options);\n        return parsePath(instance, str);\n    };\n\n    MultiPath.prototype.toString = function toString (digits) {\n        var paths = this.paths;\n        var output = '';\n\n        if (paths.length > 0) {\n            var result = [];\n\n            for (var i = 0; i < paths.length; i++) {\n                result.push(paths[i].toString(digits));\n            }\n\n            output = result.join(SPACE);\n        }\n\n        return output;\n    };\n\n    prototypeAccessors$1.nodeType.get = function () {\n        return 'MultiPath';\n    };\n\n    MultiPath.prototype.moveTo = function moveTo (x, y) {\n        var path = new Path();\n        path.moveTo(x, y);\n\n        this.paths.push(path);\n\n        return this;\n    };\n\n    MultiPath.prototype.lineTo = function lineTo (x, y) {\n        if (this.paths.length > 0) {\n            last(this.paths).lineTo(x, y);\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype.curveTo = function curveTo (controlOut, controlIn, point) {\n        if (this.paths.length > 0) {\n            last(this.paths).curveTo(controlOut, controlIn, point);\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype.arc = function arc (startAngle, endAngle, radiusX, radiusY, anticlockwise) {\n        if (this.paths.length > 0) {\n            last(this.paths).arc(startAngle, endAngle, radiusX, radiusY, anticlockwise);\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype.arcTo = function arcTo (end, rx, ry, largeArc, swipe, rotation) {\n        if (this.paths.length > 0) {\n            last(this.paths).arcTo(end, rx, ry, largeArc, swipe, rotation);\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype.close = function close () {\n        if (this.paths.length > 0) {\n            last(this.paths).close();\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype._bbox = function _bbox (matrix) {\n        return elementsBoundingBox(this.paths, true, matrix);\n    };\n\n    MultiPath.prototype.rawBBox = function rawBBox () {\n        return elementsBoundingBox(this.paths, false);\n    };\n\n    MultiPath.prototype._containsPoint = function _containsPoint (point) {\n        var paths = this.paths;\n\n        for (var idx = 0; idx < paths.length; idx++) {\n            if (paths[idx]._containsPoint(point)) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    MultiPath.prototype._isOnPath = function _isOnPath (point) {\n        var paths = this.paths;\n        var width = this.options.stroke.width;\n\n        for (var idx = 0; idx < paths.length; idx++) {\n            if (paths[idx]._isOnPath(point, width)) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    MultiPath.prototype._clippedBBox = function _clippedBBox (transformation) {\n        return elementsClippedBoundingBox(this.paths, this.currentTransform(transformation));\n    };\n\n    Object.defineProperties( MultiPath.prototype, prototypeAccessors$1 );\n\n    return MultiPath;\n}(paintable(measurable(Element))));\n\n"]},"metadata":{},"sourceType":"module"}