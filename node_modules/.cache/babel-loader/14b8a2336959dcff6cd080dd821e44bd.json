{"ast":null,"code":"import { toServerDuration, relativeToClocks, generateUUID } from '@datadog/browser-core';\nimport { RumEventType } from '../../../rawRumEvent.types';\nimport { LifeCycleEventType } from '../../lifeCycle';\nexport function startLongTaskCollection(lifeCycle, session) {\n  lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRY_COLLECTED, function (entry) {\n    if (entry.entryType !== 'longtask' || session.hasLitePlan()) {\n      return;\n    }\n\n    var startClocks = relativeToClocks(entry.startTime);\n    var rawRumEvent = {\n      date: startClocks.timeStamp,\n      long_task: {\n        id: generateUUID(),\n        duration: toServerDuration(entry.duration)\n      },\n      type: RumEventType.LONG_TASK\n    };\n    lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, {\n      rawRumEvent: rawRumEvent,\n      startTime: startClocks.relative,\n      domainContext: {\n        performanceEntry: entry.toJSON()\n      }\n    });\n  });\n}","map":{"version":3,"sources":["../../../../src/domain/rumEventsCollection/longTask/longTaskCollection.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAT,EAA2B,gBAA3B,EAA6C,YAA7C,QAAiE,uBAAjE;AACA,SAA8B,YAA9B,QAAkD,4BAAlD;AACA,SAAoB,kBAApB,QAA8C,iBAA9C;AAGA,OAAM,SAAU,uBAAV,CAAkC,SAAlC,EAAwD,OAAxD,EAA2E;AAC/E,EAAA,SAAS,CAAC,SAAV,CAAoB,kBAAkB,CAAC,2BAAvC,EAAoE,UAAC,KAAD,EAAM;AACxE,QAAI,KAAK,CAAC,SAAN,KAAoB,UAApB,IAAkC,OAAO,CAAC,WAAR,EAAtC,EAA6D;AAC3D;AACD;;AACD,QAAM,WAAW,GAAG,gBAAgB,CAAC,KAAK,CAAC,SAAP,CAApC;AACA,QAAM,WAAW,GAAwB;AACvC,MAAA,IAAI,EAAE,WAAW,CAAC,SADqB;AAEvC,MAAA,SAAS,EAAE;AACT,QAAA,EAAE,EAAE,YAAY,EADP;AAET,QAAA,QAAQ,EAAE,gBAAgB,CAAC,KAAK,CAAC,QAAP;AAFjB,OAF4B;AAMvC,MAAA,IAAI,EAAE,YAAY,CAAC;AANoB,KAAzC;AAQA,IAAA,SAAS,CAAC,MAAV,CAAiB,kBAAkB,CAAC,uBAApC,EAA6D;AAC3D,MAAA,WAAW,EAAA,WADgD;AAE3D,MAAA,SAAS,EAAE,WAAW,CAAC,QAFoC;AAG3D,MAAA,aAAa,EAAE;AAAE,QAAA,gBAAgB,EAAE,KAAK,CAAC,MAAN;AAApB;AAH4C,KAA7D;AAKD,GAlBD;AAmBD","sourceRoot":"","sourcesContent":["import { toServerDuration, relativeToClocks, generateUUID } from '@datadog/browser-core';\nimport { RumEventType } from '../../../rawRumEvent.types';\nimport { LifeCycleEventType } from '../../lifeCycle';\nexport function startLongTaskCollection(lifeCycle, session) {\n    lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRY_COLLECTED, function (entry) {\n        if (entry.entryType !== 'longtask' || session.hasLitePlan()) {\n            return;\n        }\n        var startClocks = relativeToClocks(entry.startTime);\n        var rawRumEvent = {\n            date: startClocks.timeStamp,\n            long_task: {\n                id: generateUUID(),\n                duration: toServerDuration(entry.duration),\n            },\n            type: RumEventType.LONG_TASK,\n        };\n        lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, {\n            rawRumEvent: rawRumEvent,\n            startTime: startClocks.relative,\n            domainContext: { performanceEntry: entry.toJSON() },\n        });\n    });\n}\n//# sourceMappingURL=longTaskCollection.js.map"]},"metadata":{},"sourceType":"module"}