{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { addEventListeners, getRelativeTime, isNumber, monitor, relativeNow, runOnReadyState } from '@datadog/browser-core';\nimport { LifeCycleEventType } from '../domain/lifeCycle';\nimport { FAKE_INITIAL_DOCUMENT, isAllowedRequestUrl } from '../domain/rumEventsCollection/resource/resourceUtils';\nimport { getDocumentTraceId } from '../domain/tracing/getDocumentTraceId';\n\nfunction supportPerformanceObject() {\n  return window.performance !== undefined && 'getEntries' in performance;\n}\n\nexport function supportPerformanceTimingEvent(entryType) {\n  return window.PerformanceObserver && PerformanceObserver.supportedEntryTypes !== undefined && PerformanceObserver.supportedEntryTypes.includes(entryType);\n}\nexport function supportPerformanceEntry() {\n  // Safari 10 doesn't support PerformanceEntry\n  return typeof PerformanceEntry === 'function';\n}\nexport function startPerformanceCollection(lifeCycle, configuration) {\n  retrieveInitialDocumentResourceTiming(function (timing) {\n    handleRumPerformanceEntry(lifeCycle, configuration, timing);\n  });\n\n  if (supportPerformanceObject()) {\n    handlePerformanceEntries(lifeCycle, configuration, performance.getEntries());\n  }\n\n  if (window.PerformanceObserver) {\n    var handlePerformanceEntryList_1 = monitor(function (entries) {\n      return handlePerformanceEntries(lifeCycle, configuration, entries.getEntries());\n    });\n    var mainEntries = ['resource', 'navigation', 'longtask', 'paint'];\n    var experimentalEntries = ['largest-contentful-paint', 'first-input', 'layout-shift'];\n\n    try {\n      // Experimental entries are not retrieved by performance.getEntries()\n      // use a single PerformanceObserver with buffered flag by type\n      // to get values that could happen before SDK init\n      experimentalEntries.forEach(function (type) {\n        var observer = new PerformanceObserver(handlePerformanceEntryList_1);\n        observer.observe({\n          type: type,\n          buffered: true\n        });\n      });\n    } catch (e) {\n      // Some old browser versions don't support PerformanceObserver without entryTypes option\n      mainEntries.push.apply(mainEntries, experimentalEntries);\n    }\n\n    var mainObserver = new PerformanceObserver(handlePerformanceEntryList_1);\n    mainObserver.observe({\n      entryTypes: mainEntries\n    });\n\n    if (supportPerformanceObject() && 'addEventListener' in performance) {\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1559377\n      performance.addEventListener('resourcetimingbufferfull', function () {\n        performance.clearResourceTimings();\n      });\n    }\n  }\n\n  if (!supportPerformanceTimingEvent('navigation')) {\n    retrieveNavigationTiming(function (timing) {\n      handleRumPerformanceEntry(lifeCycle, configuration, timing);\n    });\n  }\n\n  if (!supportPerformanceTimingEvent('first-input')) {\n    retrieveFirstInputTiming(function (timing) {\n      handleRumPerformanceEntry(lifeCycle, configuration, timing);\n    });\n  }\n}\nexport function retrieveInitialDocumentResourceTiming(callback) {\n  runOnReadyState('interactive', function () {\n    var timing;\n    var forcedAttributes = {\n      entryType: 'resource',\n      initiatorType: FAKE_INITIAL_DOCUMENT,\n      traceId: getDocumentTraceId(document)\n    };\n\n    if (supportPerformanceTimingEvent('navigation') && performance.getEntriesByType('navigation').length > 0) {\n      var navigationEntry = performance.getEntriesByType('navigation')[0];\n      timing = __assign(__assign({}, navigationEntry.toJSON()), forcedAttributes);\n    } else {\n      var relativePerformanceTiming = computeRelativePerformanceTiming();\n      timing = __assign(__assign(__assign({}, relativePerformanceTiming), {\n        decodedBodySize: 0,\n        duration: relativePerformanceTiming.responseEnd,\n        name: window.location.href,\n        startTime: 0\n      }), forcedAttributes);\n    }\n\n    callback(timing);\n  });\n}\n\nfunction retrieveNavigationTiming(callback) {\n  function sendFakeTiming() {\n    callback(__assign(__assign({}, computeRelativePerformanceTiming()), {\n      entryType: 'navigation'\n    }));\n  }\n\n  runOnReadyState('complete', function () {\n    // Send it a bit after the actual load event, so the \"loadEventEnd\" timing is accurate\n    setTimeout(monitor(sendFakeTiming));\n  });\n}\n/**\n * first-input timing entry polyfill based on\n * https://github.com/GoogleChrome/web-vitals/blob/master/src/lib/polyfills/firstInputPolyfill.ts\n */\n\n\nfunction retrieveFirstInputTiming(callback) {\n  var startTimeStamp = Date.now();\n  var timingSent = false;\n  var removeEventListeners = addEventListeners(window, [\"click\"\n  /* CLICK */\n  , \"mousedown\"\n  /* MOUSE_DOWN */\n  , \"keydown\"\n  /* KEY_DOWN */\n  , \"touchstart\"\n  /* TOUCH_START */\n  , \"pointerdown\"\n  /* POINTER_DOWN */\n  ], function (evt) {\n    // Only count cancelable events, which should trigger behavior important to the user.\n    if (!evt.cancelable) {\n      return;\n    } // This timing will be used to compute the \"first Input delay\", which is the delta between\n    // when the system received the event (e.g. evt.timeStamp) and when it could run the callback\n    // (e.g. performance.now()).\n\n\n    var timing = {\n      entryType: 'first-input',\n      processingStart: relativeNow(),\n      startTime: evt.timeStamp\n    };\n\n    if (evt.type === \"pointerdown\"\n    /* POINTER_DOWN */\n    ) {\n      sendTimingIfPointerIsNotCancelled(timing);\n    } else {\n      sendTiming(timing);\n    }\n  }, {\n    passive: true,\n    capture: true\n  }).stop;\n  /**\n   * Pointer events are a special case, because they can trigger main or compositor thread behavior.\n   * We differentiate these cases based on whether or not we see a pointercancel event, which are\n   * fired when we scroll. If we're scrolling we don't need to report input delay since FID excludes\n   * scrolling and pinch/zooming.\n   */\n\n  function sendTimingIfPointerIsNotCancelled(timing) {\n    addEventListeners(window, [\"pointerup\"\n    /* POINTER_UP */\n    , \"pointercancel\"\n    /* POINTER_CANCEL */\n    ], function (event) {\n      if (event.type === \"pointerup\"\n      /* POINTER_UP */\n      ) {\n        sendTiming(timing);\n      }\n    }, {\n      once: true\n    });\n  }\n\n  function sendTiming(timing) {\n    if (!timingSent) {\n      timingSent = true;\n      removeEventListeners(); // In some cases the recorded delay is clearly wrong, e.g. it's negative or it's larger than\n      // the time between now and when the page was loaded.\n      // - https://github.com/GoogleChromeLabs/first-input-delay/issues/4\n      // - https://github.com/GoogleChromeLabs/first-input-delay/issues/6\n      // - https://github.com/GoogleChromeLabs/first-input-delay/issues/7\n\n      var delay = timing.processingStart - timing.startTime;\n\n      if (delay >= 0 && delay < Date.now() - startTimeStamp) {\n        callback(timing);\n      }\n    }\n  }\n}\n\nfunction computeRelativePerformanceTiming() {\n  var result = {};\n  var timing = performance.timing;\n\n  for (var key in timing) {\n    if (isNumber(timing[key])) {\n      var numberKey = key; // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n\n      var timingElement = timing[numberKey];\n      result[numberKey] = timingElement === 0 ? 0 : getRelativeTime(timingElement);\n    }\n  }\n\n  return result;\n}\n\nfunction handlePerformanceEntries(lifeCycle, configuration, entries) {\n  entries.forEach(function (entry) {\n    if (entry.entryType === 'resource' || entry.entryType === 'navigation' || entry.entryType === 'paint' || entry.entryType === 'longtask' || entry.entryType === 'largest-contentful-paint' || entry.entryType === 'first-input' || entry.entryType === 'layout-shift') {\n      handleRumPerformanceEntry(lifeCycle, configuration, entry);\n    }\n  });\n}\n\nfunction handleRumPerformanceEntry(lifeCycle, configuration, entry) {\n  if (isIncompleteNavigation(entry) || isForbiddenResource(configuration, entry)) {\n    return;\n  }\n\n  lifeCycle.notify(LifeCycleEventType.PERFORMANCE_ENTRY_COLLECTED, entry);\n}\n\nfunction isIncompleteNavigation(entry) {\n  return entry.entryType === 'navigation' && entry.loadEventEnd <= 0;\n}\n\nfunction isForbiddenResource(configuration, entry) {\n  return entry.entryType === 'resource' && !isAllowedRequestUrl(configuration, entry.name);\n}","map":{"version":3,"sources":["../../src/browser/performanceCollection.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { addEventListeners, getRelativeTime, isNumber, monitor, relativeNow, runOnReadyState, } from '@datadog/browser-core';\nimport { LifeCycleEventType } from '../domain/lifeCycle';\nimport { FAKE_INITIAL_DOCUMENT, isAllowedRequestUrl } from '../domain/rumEventsCollection/resource/resourceUtils';\nimport { getDocumentTraceId } from '../domain/tracing/getDocumentTraceId';\nfunction supportPerformanceObject() {\n    return window.performance !== undefined && 'getEntries' in performance;\n}\nexport function supportPerformanceTimingEvent(entryType) {\n    return (window.PerformanceObserver &&\n        PerformanceObserver.supportedEntryTypes !== undefined &&\n        PerformanceObserver.supportedEntryTypes.includes(entryType));\n}\nexport function supportPerformanceEntry() {\n    // Safari 10 doesn't support PerformanceEntry\n    return typeof PerformanceEntry === 'function';\n}\nexport function startPerformanceCollection(lifeCycle, configuration) {\n    retrieveInitialDocumentResourceTiming(function (timing) {\n        handleRumPerformanceEntry(lifeCycle, configuration, timing);\n    });\n    if (supportPerformanceObject()) {\n        handlePerformanceEntries(lifeCycle, configuration, performance.getEntries());\n    }\n    if (window.PerformanceObserver) {\n        var handlePerformanceEntryList_1 = monitor(function (entries) {\n            return handlePerformanceEntries(lifeCycle, configuration, entries.getEntries());\n        });\n        var mainEntries = ['resource', 'navigation', 'longtask', 'paint'];\n        var experimentalEntries = ['largest-contentful-paint', 'first-input', 'layout-shift'];\n        try {\n            // Experimental entries are not retrieved by performance.getEntries()\n            // use a single PerformanceObserver with buffered flag by type\n            // to get values that could happen before SDK init\n            experimentalEntries.forEach(function (type) {\n                var observer = new PerformanceObserver(handlePerformanceEntryList_1);\n                observer.observe({ type: type, buffered: true });\n            });\n        }\n        catch (e) {\n            // Some old browser versions don't support PerformanceObserver without entryTypes option\n            mainEntries.push.apply(mainEntries, experimentalEntries);\n        }\n        var mainObserver = new PerformanceObserver(handlePerformanceEntryList_1);\n        mainObserver.observe({ entryTypes: mainEntries });\n        if (supportPerformanceObject() && 'addEventListener' in performance) {\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1559377\n            performance.addEventListener('resourcetimingbufferfull', function () {\n                performance.clearResourceTimings();\n            });\n        }\n    }\n    if (!supportPerformanceTimingEvent('navigation')) {\n        retrieveNavigationTiming(function (timing) {\n            handleRumPerformanceEntry(lifeCycle, configuration, timing);\n        });\n    }\n    if (!supportPerformanceTimingEvent('first-input')) {\n        retrieveFirstInputTiming(function (timing) {\n            handleRumPerformanceEntry(lifeCycle, configuration, timing);\n        });\n    }\n}\nexport function retrieveInitialDocumentResourceTiming(callback) {\n    runOnReadyState('interactive', function () {\n        var timing;\n        var forcedAttributes = {\n            entryType: 'resource',\n            initiatorType: FAKE_INITIAL_DOCUMENT,\n            traceId: getDocumentTraceId(document),\n        };\n        if (supportPerformanceTimingEvent('navigation') && performance.getEntriesByType('navigation').length > 0) {\n            var navigationEntry = performance.getEntriesByType('navigation')[0];\n            timing = __assign(__assign({}, navigationEntry.toJSON()), forcedAttributes);\n        }\n        else {\n            var relativePerformanceTiming = computeRelativePerformanceTiming();\n            timing = __assign(__assign(__assign({}, relativePerformanceTiming), { decodedBodySize: 0, duration: relativePerformanceTiming.responseEnd, name: window.location.href, startTime: 0 }), forcedAttributes);\n        }\n        callback(timing);\n    });\n}\nfunction retrieveNavigationTiming(callback) {\n    function sendFakeTiming() {\n        callback(__assign(__assign({}, computeRelativePerformanceTiming()), { entryType: 'navigation' }));\n    }\n    runOnReadyState('complete', function () {\n        // Send it a bit after the actual load event, so the \"loadEventEnd\" timing is accurate\n        setTimeout(monitor(sendFakeTiming));\n    });\n}\n/**\n * first-input timing entry polyfill based on\n * https://github.com/GoogleChrome/web-vitals/blob/master/src/lib/polyfills/firstInputPolyfill.ts\n */\nfunction retrieveFirstInputTiming(callback) {\n    var startTimeStamp = Date.now();\n    var timingSent = false;\n    var removeEventListeners = addEventListeners(window, [\"click\" /* CLICK */, \"mousedown\" /* MOUSE_DOWN */, \"keydown\" /* KEY_DOWN */, \"touchstart\" /* TOUCH_START */, \"pointerdown\" /* POINTER_DOWN */], function (evt) {\n        // Only count cancelable events, which should trigger behavior important to the user.\n        if (!evt.cancelable) {\n            return;\n        }\n        // This timing will be used to compute the \"first Input delay\", which is the delta between\n        // when the system received the event (e.g. evt.timeStamp) and when it could run the callback\n        // (e.g. performance.now()).\n        var timing = {\n            entryType: 'first-input',\n            processingStart: relativeNow(),\n            startTime: evt.timeStamp,\n        };\n        if (evt.type === \"pointerdown\" /* POINTER_DOWN */) {\n            sendTimingIfPointerIsNotCancelled(timing);\n        }\n        else {\n            sendTiming(timing);\n        }\n    }, { passive: true, capture: true }).stop;\n    /**\n     * Pointer events are a special case, because they can trigger main or compositor thread behavior.\n     * We differentiate these cases based on whether or not we see a pointercancel event, which are\n     * fired when we scroll. If we're scrolling we don't need to report input delay since FID excludes\n     * scrolling and pinch/zooming.\n     */\n    function sendTimingIfPointerIsNotCancelled(timing) {\n        addEventListeners(window, [\"pointerup\" /* POINTER_UP */, \"pointercancel\" /* POINTER_CANCEL */], function (event) {\n            if (event.type === \"pointerup\" /* POINTER_UP */) {\n                sendTiming(timing);\n            }\n        }, { once: true });\n    }\n    function sendTiming(timing) {\n        if (!timingSent) {\n            timingSent = true;\n            removeEventListeners();\n            // In some cases the recorded delay is clearly wrong, e.g. it's negative or it's larger than\n            // the time between now and when the page was loaded.\n            // - https://github.com/GoogleChromeLabs/first-input-delay/issues/4\n            // - https://github.com/GoogleChromeLabs/first-input-delay/issues/6\n            // - https://github.com/GoogleChromeLabs/first-input-delay/issues/7\n            var delay = timing.processingStart - timing.startTime;\n            if (delay >= 0 && delay < Date.now() - startTimeStamp) {\n                callback(timing);\n            }\n        }\n    }\n}\nfunction computeRelativePerformanceTiming() {\n    var result = {};\n    var timing = performance.timing;\n    for (var key in timing) {\n        if (isNumber(timing[key])) {\n            var numberKey = key;\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            var timingElement = timing[numberKey];\n            result[numberKey] = timingElement === 0 ? 0 : getRelativeTime(timingElement);\n        }\n    }\n    return result;\n}\nfunction handlePerformanceEntries(lifeCycle, configuration, entries) {\n    entries.forEach(function (entry) {\n        if (entry.entryType === 'resource' ||\n            entry.entryType === 'navigation' ||\n            entry.entryType === 'paint' ||\n            entry.entryType === 'longtask' ||\n            entry.entryType === 'largest-contentful-paint' ||\n            entry.entryType === 'first-input' ||\n            entry.entryType === 'layout-shift') {\n            handleRumPerformanceEntry(lifeCycle, configuration, entry);\n        }\n    });\n}\nfunction handleRumPerformanceEntry(lifeCycle, configuration, entry) {\n    if (isIncompleteNavigation(entry) || isForbiddenResource(configuration, entry)) {\n        return;\n    }\n    lifeCycle.notify(LifeCycleEventType.PERFORMANCE_ENTRY_COLLECTED, entry);\n}\nfunction isIncompleteNavigation(entry) {\n    return entry.entryType === 'navigation' && entry.loadEventEnd <= 0;\n}\nfunction isForbiddenResource(configuration, entry) {\n    return entry.entryType === 'resource' && !isAllowedRequestUrl(configuration, entry.name);\n}\n//# sourceMappingURL=performanceCollection.js.map"]},"metadata":{},"sourceType":"module"}