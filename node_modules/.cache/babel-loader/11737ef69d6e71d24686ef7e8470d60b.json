{"ast":null,"code":"import { callMonitored } from '../domain/internalMonitoring';\nexport function instrumentMethod(object, method, instrumentationFactory) {\n  var original = object[method];\n  var instrumentation = instrumentationFactory(original);\n\n  var instrumentationWrapper = function () {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return instrumentation.apply(this, arguments);\n  };\n\n  object[method] = instrumentationWrapper;\n  return {\n    stop: function () {\n      if (object[method] === instrumentationWrapper) {\n        object[method] = original;\n      } else {\n        instrumentation = original;\n      }\n    }\n  };\n}\nexport function instrumentMethodAndCallOriginal(object, method, _a) {\n  var before = _a.before,\n      after = _a.after;\n  return instrumentMethod(object, method, function (original) {\n    return function () {\n      var args = arguments;\n      var result;\n\n      if (before) {\n        callMonitored(before, this, args);\n      }\n\n      if (typeof original === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        result = original.apply(this, args);\n      }\n\n      if (after) {\n        callMonitored(after, this, args);\n      } // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n\n      return result;\n    };\n  });\n}","map":{"version":3,"sources":["../../src/tools/instrumentMethod.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,QAA8B,8BAA9B;AAEA,OAAM,SAAU,gBAAV,CACJ,MADI,EAEJ,MAFI,EAGJ,sBAHI,EAKkF;AAEtF,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAD,CAAvB;AAEA,MAAI,eAAe,GAAG,sBAAsB,CAAC,QAAD,CAA5C;;AAEA,MAAM,sBAAsB,GAAG,YAAA;AAC7B;AACA,WAAO,eAAe,CAAC,KAAhB,CAAsB,IAAtB,EAA6B,SAA7B,CAAP;AACD,GAHD;;AAIA,EAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,sBAAjB;AAEA,SAAO;AACL,IAAA,IAAI,EAAE,YAAA;AACJ,UAAI,MAAM,CAAC,MAAD,CAAN,KAAmB,sBAAvB,EAA+C;AAC7C,QAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,QAAjB;AACD,OAFD,MAEO;AACL,QAAA,eAAe,GAAG,QAAlB;AACD;AACF;AAPI,GAAP;AASD;AAED,OAAM,SAAU,+BAAV,CACJ,MADI,EAEJ,MAFI,EAGJ,EAHI,EASH;MALC,MAAM,GAAA,EAAA,CAAA,M;MACN,KAAK,GAAA,EAAA,CAAA,K;AAMP,SAAO,gBAAgB,CACrB,MADqB,EAErB,MAFqB,EAGrB,UAAC,QAAD,EAAS;AACP,WAAA,YAAA;AACE,UAAM,IAAI,GAAI,SAAd;AACA,UAAI,MAAJ;;AAEA,UAAI,MAAJ,EAAY;AACV,QAAA,aAAa,CAAC,MAAD,EAAS,IAAT,EAAoD,IAApD,CAAb;AACD;;AAED,UAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAClC;AACA,QAAA,MAAM,GAAG,QAAQ,CAAC,KAAT,CAAe,IAAf,EAAqB,IAArB,CAAT;AACD;;AAED,UAAI,KAAJ,EAAW;AACT,QAAA,aAAa,CAAC,KAAD,EAAQ,IAAR,EAAmD,IAAnD,CAAb;AACD,OAfH,CAiBE;;;AACA,aAAO,MAAP;AACD,KAnBD;AAmBC,GAvBkB,CAAvB;AAyBD","sourceRoot":"","sourcesContent":["import { callMonitored } from '../domain/internalMonitoring';\nexport function instrumentMethod(object, method, instrumentationFactory) {\n    var original = object[method];\n    var instrumentation = instrumentationFactory(original);\n    var instrumentationWrapper = function () {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return instrumentation.apply(this, arguments);\n    };\n    object[method] = instrumentationWrapper;\n    return {\n        stop: function () {\n            if (object[method] === instrumentationWrapper) {\n                object[method] = original;\n            }\n            else {\n                instrumentation = original;\n            }\n        },\n    };\n}\nexport function instrumentMethodAndCallOriginal(object, method, _a) {\n    var before = _a.before, after = _a.after;\n    return instrumentMethod(object, method, function (original) {\n        return function () {\n            var args = arguments;\n            var result;\n            if (before) {\n                callMonitored(before, this, args);\n            }\n            if (typeof original === 'function') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                result = original.apply(this, args);\n            }\n            if (after) {\n                callMonitored(after, this, args);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return result;\n        };\n    });\n}\n//# sourceMappingURL=instrumentMethod.js.map"]},"metadata":{},"sourceType":"module"}