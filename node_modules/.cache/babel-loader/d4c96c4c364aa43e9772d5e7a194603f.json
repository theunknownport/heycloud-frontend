{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport addRegion from \"../services/admin.service\";\n\nconst CreateRegionForm = () => {\n  _s();\n\n  const form = useRef();\n  const checkBtn = useRef();\n  const [fullName, setFullName] = useState(\"\");\n  const [shortName, setShortName] = useState(\"\");\n  const [proxHost, setProxHost] = useState(\"\");\n  const [proxPort, setProxPort] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [proxUser, setProxUser] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const {\n    isLoggedIn\n  } = useSelector(state => state.auth);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const onChangeFullName = e => {\n    const fullName = e.target.value;\n    setFullName(fullName);\n  };\n\n  const onChangeShortName = e => {\n    const shortName = e.target.value;\n    setShortName(shortName);\n  };\n\n  const onChangeProxHost = e => {\n    const proxHost = e.target.value;\n    setProxHost(proxHost);\n  };\n\n  const onChangeProxPort = e => {\n    const proxPort = e.target.value;\n    setProxPort(proxPort);\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const onChangeProxUser = e => {\n    const proxUser = e.target.value;\n    setProxUser(proxUser);\n  };\n\n  const handleCreateRegion = e => {\n    e.preventDefault();\n    setLoading(true);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      dispatch(addRegion(email, password)).then(() => {\n        props.history.push(\"/dashboard?preloader=true\");\n      }).catch(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return \"\";\n};\n\n_s(CreateRegionForm, \"kqCHEolBDpkDXjU1jp5QmjL6KCQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CreateRegionForm;\nexport default CreateRegionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRegionForm\");","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/src/components/CreateRegionForm.js"],"names":["React","useState","useRef","useDispatch","useSelector","Form","Input","addRegion","CreateRegionForm","form","checkBtn","fullName","setFullName","shortName","setShortName","proxHost","setProxHost","proxPort","setProxPort","password","setPassword","proxUser","setProxUser","loading","setLoading","isLoggedIn","state","auth","message","dispatch","onChangeFullName","e","target","value","onChangeShortName","onChangeProxHost","onChangeProxPort","onChangePassword","onChangeProxUser","handleCreateRegion","preventDefault","current","validateAll","context","_errors","length","email","then","props","history","push","catch"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport addRegion from \"../services/admin.service\"\r\n\r\nconst CreateRegionForm = () => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [shortName, setShortName] = useState(\"\");\r\n  const [proxHost, setProxHost] = useState(\"\");\r\n  const [proxPort, setProxPort] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [proxUser, setProxUser] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { isLoggedIn } = useSelector(state => state.auth);\r\n  const { message } = useSelector(state => state.message);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeFullName = (e) => {\r\n    const fullName = e.target.value;\r\n    setFullName(fullName);\r\n  };\r\n\r\n  const onChangeShortName = (e) => {\r\n    const shortName = e.target.value;\r\n    setShortName(shortName);\r\n  };\r\n\r\n  const onChangeProxHost = (e) => {\r\n    const proxHost = e.target.value;\r\n    setProxHost(proxHost);\r\n  };\r\n\r\n  const onChangeProxPort = (e) => {\r\n    const proxPort = e.target.value;\r\n    setProxPort(proxPort);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const onChangeProxUser = (e) => {\r\n    const proxUser = e.target.value;\r\n    setProxUser(proxUser);\r\n  };\r\n\r\n  const handleCreateRegion = (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      dispatch(addRegion(email, password))\r\n        .then(() => {\r\n          props.history.push(\"/dashboard?preloader=true\");\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \"\"\r\n  )\r\n}\r\n\r\nexport default CreateRegionForm"]},"metadata":{},"sourceType":"module"}