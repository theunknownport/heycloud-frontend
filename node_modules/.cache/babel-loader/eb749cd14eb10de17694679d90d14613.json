{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * @hidden\n */\n\n\nexport function tableColumnsVirtualization(args) {\n  var enabled = args.enabled,\n      _a = args.columns,\n      columns = _a === void 0 ? [] : _a,\n      tableViewPortWidth = args.tableViewPortWidth,\n      scrollLeft = args.scrollLeft;\n  var colSpans = columns.map(function () {\n    return 1;\n  });\n  var hiddenColumns = columns.map(function () {\n    return false;\n  });\n\n  if (!enabled) {\n    return {\n      colSpans: colSpans,\n      hiddenColumns: hiddenColumns\n    };\n  }\n\n  var widths = columns.map(function (c) {\n    return parseFloat((c.width || '').toString()) || 10;\n  });\n  var widthOfHiddenColumns = 0;\n\n  for (var i = 0; i < columns.length; i++) {\n    if (columns[i].locked) {\n      continue;\n    }\n\n    var considerNext = i < widths.length - 1 ? widths[i + 1] : 0;\n\n    if (widthOfHiddenColumns + widths[i] + considerNext < scrollLeft) {\n      hiddenColumns[i] = true;\n      widthOfHiddenColumns += widths[i];\n    } else {\n      break;\n    }\n  }\n\n  var totalWidth = widths.reduce(function (acc, current) {\n    return acc + current;\n  }, 0);\n  widthOfHiddenColumns = 0;\n\n  for (var i = columns.length - 1; i >= 0; i--) {\n    if (columns[i].locked) {\n      continue;\n    }\n\n    if (widthOfHiddenColumns + 2 * widths[i] < totalWidth - tableViewPortWidth - scrollLeft) {\n      hiddenColumns[i] = true;\n      widthOfHiddenColumns += widths[i];\n    } else {\n      break;\n    }\n  }\n\n  var hiddenCols = __spreadArray([], hiddenColumns, true);\n\n  var hidden = function (value) {\n    return value;\n  };\n\n  var lastVisible = hiddenCols.lastIndexOf(false);\n  var anyHidden = hiddenCols.some(hidden);\n  var allHidden = hiddenCols.every(hidden);\n  var hiddenSeqLength;\n  var updateIndex;\n\n  while (anyHidden && hiddenCols.length && (lastVisible !== -1 || allHidden)) {\n    if (lastVisible < hiddenCols.length - 1) {\n      hiddenSeqLength = allHidden ? hiddenCols.length : hiddenCols.length - lastVisible - 1;\n      updateIndex = hiddenCols.length - hiddenSeqLength;\n\n      if (updateIndex === 0) {\n        updateIndex = hiddenSeqLength - 1;\n      }\n\n      hiddenColumns[updateIndex] = false;\n      colSpans[updateIndex] = hiddenSeqLength;\n      hiddenCols.splice(lastVisible + 1, hiddenSeqLength);\n    }\n\n    while (hiddenCols.length && !hiddenCols[hiddenCols.length - 1]) {\n      hiddenCols.pop();\n    }\n\n    lastVisible = hiddenCols.lastIndexOf(false);\n    anyHidden = hiddenCols.some(hidden);\n    allHidden = hiddenCols.every(hidden);\n  }\n\n  return {\n    colSpans: colSpans,\n    hiddenColumns: hiddenColumns\n  };\n}","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-data-tools/dist/es/virtualization/columns.js"],"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","tableColumnsVirtualization","args","enabled","_a","columns","tableViewPortWidth","scrollLeft","colSpans","map","hiddenColumns","widths","c","parseFloat","width","toString","widthOfHiddenColumns","locked","considerNext","totalWidth","reduce","acc","current","hiddenCols","hidden","value","lastVisible","lastIndexOf","anyHidden","some","allHidden","every","hiddenSeqLength","updateIndex","splice","pop"],"mappings":"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","sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * @hidden\n */\nexport function tableColumnsVirtualization(args) {\n    var enabled = args.enabled, _a = args.columns, columns = _a === void 0 ? [] : _a, tableViewPortWidth = args.tableViewPortWidth, scrollLeft = args.scrollLeft;\n    var colSpans = columns.map(function () { return 1; });\n    var hiddenColumns = columns.map(function () { return false; });\n    if (!enabled) {\n        return { colSpans: colSpans, hiddenColumns: hiddenColumns };\n    }\n    var widths = columns.map(function (c) { return parseFloat((c.width || '').toString()) || 10; });\n    var widthOfHiddenColumns = 0;\n    for (var i = 0; i < columns.length; i++) {\n        if (columns[i].locked) {\n            continue;\n        }\n        var considerNext = (i < widths.length - 1) ? widths[i + 1] : 0;\n        if (widthOfHiddenColumns + widths[i] + considerNext < scrollLeft) {\n            hiddenColumns[i] = true;\n            widthOfHiddenColumns += widths[i];\n        }\n        else {\n            break;\n        }\n    }\n    var totalWidth = widths.reduce(function (acc, current) { return acc + current; }, 0);\n    widthOfHiddenColumns = 0;\n    for (var i = columns.length - 1; i >= 0; i--) {\n        if (columns[i].locked) {\n            continue;\n        }\n        if (widthOfHiddenColumns + 2 * widths[i] < totalWidth - tableViewPortWidth - scrollLeft) {\n            hiddenColumns[i] = true;\n            widthOfHiddenColumns += widths[i];\n        }\n        else {\n            break;\n        }\n    }\n    var hiddenCols = __spreadArray([], hiddenColumns, true);\n    var hidden = function (value) { return value; };\n    var lastVisible = hiddenCols.lastIndexOf(false);\n    var anyHidden = hiddenCols.some(hidden);\n    var allHidden = hiddenCols.every(hidden);\n    var hiddenSeqLength;\n    var updateIndex;\n    while (anyHidden && hiddenCols.length && (lastVisible !== -1 || allHidden)) {\n        if (lastVisible < hiddenCols.length - 1) {\n            hiddenSeqLength = allHidden ? hiddenCols.length : hiddenCols.length - lastVisible - 1;\n            updateIndex = hiddenCols.length - hiddenSeqLength;\n            if (updateIndex === 0) {\n                updateIndex = hiddenSeqLength - 1;\n            }\n            hiddenColumns[updateIndex] = false;\n            colSpans[updateIndex] = hiddenSeqLength;\n            hiddenCols.splice(lastVisible + 1, hiddenSeqLength);\n        }\n        while (hiddenCols.length && !hiddenCols[hiddenCols.length - 1]) {\n            hiddenCols.pop();\n        }\n        lastVisible = hiddenCols.lastIndexOf(false);\n        anyHidden = hiddenCols.some(hidden);\n        allHidden = hiddenCols.every(hidden);\n    }\n    return { colSpans: colSpans, hiddenColumns: hiddenColumns };\n}\n"]},"metadata":{},"sourceType":"module"}