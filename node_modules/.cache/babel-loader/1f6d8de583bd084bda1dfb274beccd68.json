{"ast":null,"code":"/**\n * @hidden\n */\nvar ColumnResize =\n/** @class */\nfunction () {\n  function ColumnResize(triggerResize) {\n    var _this = this; // Typings. `col` and `colgroup` do not differ, both represnt a `HTMLTableColElement`.\n    // Implemented as `any`.\n\n\n    this.columns = [];\n    /**\n     * The settings for resizing the Grid.\n     */\n\n    this.resizable = false;\n    this.isRtl = false;\n\n    this.setIsRtl = function (isRtl) {\n      _this.isRtl = isRtl;\n    };\n\n    this.onResize = triggerResize;\n    this.dragHandler = this.dragHandler.bind(this);\n  }\n\n  ColumnResize.prototype.dragHandler = function (event, column, dragCue, end) {\n    var e = event.originalEvent;\n\n    if (!end) {\n      e.preventDefault();\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n\n    var tdElement = dragCue.parentElement;\n\n    if (!tdElement || !tdElement.parentElement) {\n      return;\n    }\n\n    var oldWidth = tdElement.clientWidth;\n    var newWidth;\n\n    if (this.isRtl) {\n      newWidth = dragCue.getBoundingClientRect().right - dragCue.offsetWidth / 2 - event.clientX;\n      newWidth += oldWidth;\n    } else {\n      newWidth = oldWidth + event.clientX - dragCue.getBoundingClientRect().left - dragCue.offsetWidth / 2;\n    }\n\n    if (!end && Math.abs(newWidth - oldWidth) < 1) {\n      return;\n    }\n\n    this.setWidths(column, Math.floor(newWidth) / oldWidth);\n    var index = this.columns.filter(function (c) {\n      return !c.children.length;\n    }).indexOf(column);\n    this.onResize(index, oldWidth, newWidth, e, end);\n  };\n\n  ColumnResize.prototype.setWidths = function (column, coef) {\n    var indexInOriginal = this.columns.indexOf(column);\n    var toAdjust = [];\n    var more = column.children.length;\n\n    for (var i = indexInOriginal + 1; more > 0 && i < this.columns.length; i++, more--) {\n      var cc = this.columns[i];\n\n      if (!cc.children.length) {\n        toAdjust.push(cc);\n      } else {\n        more += cc.children.length;\n      }\n    }\n\n    if (toAdjust.length === 0) {\n      toAdjust.push(column);\n    }\n\n    toAdjust.forEach(function (colToAdjust) {\n      var targetWidth = colToAdjust.width ? parseFloat(colToAdjust.width.toString()) * coef : 0;\n      var min = colToAdjust.minResizableWidth === undefined ? 10 : colToAdjust.minResizableWidth;\n\n      if (targetWidth < min) {\n        targetWidth = min;\n      }\n\n      colToAdjust.width = Math.floor(targetWidth);\n    });\n    this.updateColElements(toAdjust);\n  };\n\n  ColumnResize.prototype.updateColElements = function (affectedColumns) {\n    var columns = this.columns.filter(function (c) {\n      return !c.children.length;\n    });\n    var difference = 1e-10;\n\n    for (var i = 0; i < affectedColumns.length; i++) {\n      var colIndex = columns.indexOf(affectedColumns[i]);\n      var currentColumnFloatWidth = parseFloat((affectedColumns[i].width || 0).toString());\n      difference += currentColumnFloatWidth - Math.floor(currentColumnFloatWidth);\n      var currentWidth = Math.floor(currentColumnFloatWidth) + Math.floor(difference);\n      difference -= Math.floor(difference);\n      this.setColWidth(this.colGroupMain && this.colGroupMain.children[colIndex], currentWidth);\n      this.setColWidth(this.colGroupHeader && this.colGroupHeader.children[colIndex], currentWidth);\n      this.setColWidth(this.colGroupFooter && this.colGroupFooter.children[colIndex], currentWidth);\n    }\n  };\n\n  ColumnResize.prototype.setColWidth = function (col, width) {\n    if (col) {\n      col.style.width = width + 'px';\n    }\n  };\n\n  return ColumnResize;\n}();\n\nexport { ColumnResize };","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-data-tools/dist/es/drag/ColumnResize.js"],"names":["ColumnResize","triggerResize","_this","columns","resizable","isRtl","setIsRtl","onResize","dragHandler","bind","prototype","event","column","dragCue","end","e","originalEvent","preventDefault","stopPropagation","stopImmediatePropagation","tdElement","parentElement","oldWidth","clientWidth","newWidth","getBoundingClientRect","right","offsetWidth","clientX","left","Math","abs","setWidths","floor","index","filter","c","children","length","indexOf","coef","indexInOriginal","toAdjust","more","i","cc","push","forEach","colToAdjust","targetWidth","width","parseFloat","toString","min","minResizableWidth","undefined","updateColElements","affectedColumns","difference","colIndex","currentColumnFloatWidth","currentWidth","setColWidth","colGroupMain","colGroupHeader","colGroupFooter","col","style"],"mappings":"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","sourcesContent":["/**\n * @hidden\n */\nvar ColumnResize = /** @class */ (function () {\n    function ColumnResize(triggerResize) {\n        var _this = this;\n        // Typings. `col` and `colgroup` do not differ, both represnt a `HTMLTableColElement`.\n        // Implemented as `any`.\n        this.columns = [];\n        /**\n         * The settings for resizing the Grid.\n         */\n        this.resizable = false;\n        this.isRtl = false;\n        this.setIsRtl = function (isRtl) {\n            _this.isRtl = isRtl;\n        };\n        this.onResize = triggerResize;\n        this.dragHandler = this.dragHandler.bind(this);\n    }\n    ColumnResize.prototype.dragHandler = function (event, column, dragCue, end) {\n        var e = event.originalEvent;\n        if (!end) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n        var tdElement = dragCue.parentElement;\n        if (!tdElement || !tdElement.parentElement) {\n            return;\n        }\n        var oldWidth = tdElement.clientWidth;\n        var newWidth;\n        if (this.isRtl) {\n            newWidth = (dragCue.getBoundingClientRect().right - (dragCue.offsetWidth / 2)) - event.clientX;\n            newWidth += oldWidth;\n        }\n        else {\n            newWidth = oldWidth + event.clientX - dragCue.getBoundingClientRect().left - (dragCue.offsetWidth / 2);\n        }\n        if (!end && Math.abs(newWidth - oldWidth) < 1) {\n            return;\n        }\n        this.setWidths(column, Math.floor(newWidth) / oldWidth);\n        var index = this.columns.filter(function (c) { return !c.children.length; }).indexOf(column);\n        this.onResize(index, oldWidth, newWidth, e, end);\n    };\n    ColumnResize.prototype.setWidths = function (column, coef) {\n        var indexInOriginal = this.columns.indexOf(column);\n        var toAdjust = [];\n        var more = column.children.length;\n        for (var i = indexInOriginal + 1; more > 0 && i < this.columns.length; i++, more--) {\n            var cc = this.columns[i];\n            if (!cc.children.length) {\n                toAdjust.push(cc);\n            }\n            else {\n                more += cc.children.length;\n            }\n        }\n        if (toAdjust.length === 0) {\n            toAdjust.push(column);\n        }\n        toAdjust.forEach(function (colToAdjust) {\n            var targetWidth = colToAdjust.width ? parseFloat(colToAdjust.width.toString()) * coef : 0;\n            var min = colToAdjust.minResizableWidth === undefined ? 10 : colToAdjust.minResizableWidth;\n            if (targetWidth < min) {\n                targetWidth = min;\n            }\n            colToAdjust.width = Math.floor(targetWidth);\n        });\n        this.updateColElements(toAdjust);\n    };\n    ColumnResize.prototype.updateColElements = function (affectedColumns) {\n        var columns = this.columns.filter(function (c) { return !c.children.length; });\n        var difference = 1e-10;\n        for (var i = 0; i < affectedColumns.length; i++) {\n            var colIndex = columns.indexOf(affectedColumns[i]);\n            var currentColumnFloatWidth = parseFloat((affectedColumns[i].width || 0).toString());\n            difference += currentColumnFloatWidth - Math.floor(currentColumnFloatWidth);\n            var currentWidth = Math.floor(currentColumnFloatWidth) + Math.floor(difference);\n            difference -= Math.floor(difference);\n            this.setColWidth(this.colGroupMain && this.colGroupMain.children[colIndex], currentWidth);\n            this.setColWidth(this.colGroupHeader && this.colGroupHeader.children[colIndex], currentWidth);\n            this.setColWidth(this.colGroupFooter && this.colGroupFooter.children[colIndex], currentWidth);\n        }\n    };\n    ColumnResize.prototype.setColWidth = function (col, width) {\n        if (col) {\n            col.style.width = width + 'px';\n        }\n    };\n    return ColumnResize;\n}());\nexport { ColumnResize };\n"]},"metadata":{},"sourceType":"module"}