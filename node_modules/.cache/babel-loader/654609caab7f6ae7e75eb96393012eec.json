{"ast":null,"code":"import { isPresent } from './misc';\nimport { parseColor } from '@progress/kendo-drawing';\n/**\n * @hidden\n */\n\nvar ColorPaletteService =\n/** @class */\nfunction () {\n  function ColorPaletteService() {\n    this.colorRows = [];\n  }\n\n  ColorPaletteService.prototype.setColorMatrix = function (palette, columns) {\n    this.colorRows = [];\n\n    if (!(isPresent(palette) && palette.length)) {\n      return;\n    }\n\n    columns = columns || palette.length;\n\n    for (var start = 0; start < palette.length; start += columns) {\n      var row = palette.slice(start, columns + start);\n      this.colorRows.push(row);\n    }\n  };\n\n  ColorPaletteService.prototype.getCellCoordsFor = function (color) {\n    var _this = this;\n\n    if (!isPresent(color)) {\n      return;\n    }\n\n    var parsedColor = color ? parseColor(color, true) : color;\n    var colors = [color];\n\n    if (isPresent(parsedColor)) {\n      colors.push(parsedColor.toCss(), parsedColor.toCssRgba());\n    }\n\n    var _loop_1 = function (row) {\n      var _loop_2 = function (col) {\n        if (colors.some(function (c) {\n          return c === _this.colorRows[row][col];\n        })) {\n          return {\n            value: {\n              row: row,\n              col: col\n            }\n          };\n        }\n      };\n\n      for (var col = 0; col < this_1.colorRows[row].length; col++) {\n        var state_2 = _loop_2(col);\n\n        if (typeof state_2 === \"object\") return state_2;\n      }\n    };\n\n    var this_1 = this;\n\n    for (var row = 0; row < this.colorRows.length; row++) {\n      var state_1 = _loop_1(row);\n\n      if (typeof state_1 === \"object\") return state_1.value;\n    }\n  };\n\n  ColorPaletteService.prototype.getColorAt = function (cellCoords) {\n    if (!(isPresent(cellCoords) && isPresent(this.colorRows[cellCoords.row]))) {\n      return;\n    }\n\n    return this.colorRows[cellCoords.row][cellCoords.col];\n  };\n\n  ColorPaletteService.prototype.getNextCell = function (current, horizontalStep, verticalStep) {\n    if (!(isPresent(current) && isPresent(current.row) && isPresent(current.col))) {\n      return {\n        row: 0,\n        col: 0\n      };\n    }\n\n    var row = this.clampIndex(current.row + verticalStep, this.colorRows.length - 1);\n    var col = this.clampIndex(current.col + horizontalStep, this.colorRows[row].length - 1);\n    return {\n      row: row,\n      col: col\n    };\n  };\n\n  ColorPaletteService.prototype.clampIndex = function (index, max) {\n    var minArrayIndex = 0;\n\n    if (index < minArrayIndex) {\n      return minArrayIndex;\n    }\n\n    if (index > max) {\n      return max;\n    }\n\n    return index;\n  };\n\n  return ColorPaletteService;\n}();\n\nexport { ColorPaletteService };","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/node_modules/@progress/kendo-react-inputs/dist/es/colors/utils/color-palette.service.js"],"names":["isPresent","parseColor","ColorPaletteService","colorRows","prototype","setColorMatrix","palette","columns","length","start","row","slice","push","getCellCoordsFor","color","_this","parsedColor","colors","toCss","toCssRgba","_loop_1","_loop_2","col","some","c","value","this_1","state_2","state_1","getColorAt","cellCoords","getNextCell","current","horizontalStep","verticalStep","clampIndex","index","max","minArrayIndex"],"mappings":"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","sourcesContent":["import { isPresent } from './misc';\nimport { parseColor } from '@progress/kendo-drawing';\n/**\n * @hidden\n */\nvar ColorPaletteService = /** @class */ (function () {\n    function ColorPaletteService() {\n        this.colorRows = [];\n    }\n    ColorPaletteService.prototype.setColorMatrix = function (palette, columns) {\n        this.colorRows = [];\n        if (!(isPresent(palette) && palette.length)) {\n            return;\n        }\n        columns = columns || palette.length;\n        for (var start = 0; start < palette.length; start += columns) {\n            var row = palette.slice(start, columns + start);\n            this.colorRows.push(row);\n        }\n    };\n    ColorPaletteService.prototype.getCellCoordsFor = function (color) {\n        var _this = this;\n        if (!isPresent(color)) {\n            return;\n        }\n        var parsedColor = color ? parseColor(color, true) : color;\n        var colors = [color];\n        if (isPresent(parsedColor)) {\n            colors.push(parsedColor.toCss(), parsedColor.toCssRgba());\n        }\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                if (colors.some(function (c) { return c === _this.colorRows[row][col]; })) {\n                    return { value: { row: row, col: col } };\n                }\n            };\n            for (var col = 0; col < this_1.colorRows[row].length; col++) {\n                var state_2 = _loop_2(col);\n                if (typeof state_2 === \"object\")\n                    return state_2;\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row < this.colorRows.length; row++) {\n            var state_1 = _loop_1(row);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n    };\n    ColorPaletteService.prototype.getColorAt = function (cellCoords) {\n        if (!(isPresent(cellCoords) && isPresent(this.colorRows[cellCoords.row]))) {\n            return;\n        }\n        return this.colorRows[cellCoords.row][cellCoords.col];\n    };\n    ColorPaletteService.prototype.getNextCell = function (current, horizontalStep, verticalStep) {\n        if (!(isPresent(current) && isPresent(current.row) && isPresent(current.col))) {\n            return { row: 0, col: 0 };\n        }\n        var row = this.clampIndex(current.row + verticalStep, this.colorRows.length - 1);\n        var col = this.clampIndex(current.col + horizontalStep, this.colorRows[row].length - 1);\n        return { row: row, col: col };\n    };\n    ColorPaletteService.prototype.clampIndex = function (index, max) {\n        var minArrayIndex = 0;\n        if (index < minArrayIndex) {\n            return minArrayIndex;\n        }\n        if (index > max) {\n            return max;\n        }\n        return index;\n    };\n    return ColorPaletteService;\n}());\nexport { ColorPaletteService };\n"]},"metadata":{},"sourceType":"module"}