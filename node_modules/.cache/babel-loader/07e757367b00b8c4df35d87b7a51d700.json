{"ast":null,"code":"import { combine } from '@datadog/browser-core';\nimport { createDOMMutationObservable } from '../browser/domMutationObservable';\nimport { startPerformanceCollection } from '../browser/performanceCollection';\nimport { startRumAssembly } from '../domain/assembly';\nimport { startForegroundContexts } from '../domain/foregroundContexts';\nimport { startInternalContext } from '../domain/internalContext';\nimport { LifeCycle } from '../domain/lifeCycle';\nimport { startParentContexts } from '../domain/parentContexts';\nimport { startRequestCollection } from '../domain/requestCollection';\nimport { startActionCollection } from '../domain/rumEventsCollection/action/actionCollection';\nimport { startErrorCollection } from '../domain/rumEventsCollection/error/errorCollection';\nimport { startLongTaskCollection } from '../domain/rumEventsCollection/longTask/longTaskCollection';\nimport { startResourceCollection } from '../domain/rumEventsCollection/resource/resourceCollection';\nimport { startViewCollection } from '../domain/rumEventsCollection/view/viewCollection';\nimport { startRumSession } from '../domain/rumSession';\nimport { startRumBatch } from '../transport/batch';\nimport { startUrlContexts } from '../domain/urlContexts';\nimport { createLocationChangeObservable } from '../browser/locationChangeObservable';\nexport function startRum(initConfiguration, configuration, internalMonitoring, getCommonContext, recorderApi, initialViewName) {\n  var lifeCycle = new LifeCycle();\n  var session = startRumSession(configuration, lifeCycle);\n  var domMutationObservable = createDOMMutationObservable();\n  var locationChangeObservable = createLocationChangeObservable(location);\n  internalMonitoring.setExternalContextProvider(function () {\n    return combine({\n      application_id: initConfiguration.applicationId\n    }, parentContexts.findView(), getCommonContext().context);\n  });\n\n  var _a = startRumEventCollection(initConfiguration.applicationId, lifeCycle, configuration, location, session, locationChangeObservable, getCommonContext),\n      parentContexts = _a.parentContexts,\n      foregroundContexts = _a.foregroundContexts,\n      urlContexts = _a.urlContexts;\n\n  startLongTaskCollection(lifeCycle, session);\n  startResourceCollection(lifeCycle);\n\n  var _b = startViewCollection(lifeCycle, configuration, location, domMutationObservable, locationChangeObservable, foregroundContexts, recorderApi, initialViewName),\n      addTiming = _b.addTiming,\n      startView = _b.startView;\n\n  var addError = startErrorCollection(lifeCycle, foregroundContexts).addError;\n  var addAction = startActionCollection(lifeCycle, domMutationObservable, configuration, foregroundContexts).addAction;\n  startRequestCollection(lifeCycle, configuration, session);\n  startPerformanceCollection(lifeCycle, configuration);\n  var internalContext = startInternalContext(initConfiguration.applicationId, session, parentContexts, urlContexts);\n  return {\n    addAction: addAction,\n    addError: addError,\n    addTiming: addTiming,\n    startView: startView,\n    lifeCycle: lifeCycle,\n    parentContexts: parentContexts,\n    session: session,\n    getInternalContext: internalContext.get\n  };\n}\nexport function startRumEventCollection(applicationId, lifeCycle, configuration, location, session, locationChangeObservable, getCommonContext) {\n  var parentContexts = startParentContexts(lifeCycle, session);\n  var urlContexts = startUrlContexts(lifeCycle, locationChangeObservable, location);\n  var foregroundContexts = startForegroundContexts();\n  var batch = startRumBatch(configuration, lifeCycle);\n  startRumAssembly(applicationId, configuration, lifeCycle, session, parentContexts, urlContexts, getCommonContext);\n  return {\n    parentContexts: parentContexts,\n    foregroundContexts: foregroundContexts,\n    urlContexts: urlContexts,\n    stop: function () {\n      // prevent batch from previous tests to keep running and send unwanted requests\n      // could be replaced by stopping all the component when they will all have a stop method\n      batch.stop();\n      parentContexts.stop();\n      foregroundContexts.stop();\n    }\n  };\n}","map":{"version":3,"sources":["../../src/boot/startRum.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { combine } from '@datadog/browser-core';\nimport { createDOMMutationObservable } from '../browser/domMutationObservable';\nimport { startPerformanceCollection } from '../browser/performanceCollection';\nimport { startRumAssembly } from '../domain/assembly';\nimport { startForegroundContexts } from '../domain/foregroundContexts';\nimport { startInternalContext } from '../domain/internalContext';\nimport { LifeCycle } from '../domain/lifeCycle';\nimport { startParentContexts } from '../domain/parentContexts';\nimport { startRequestCollection } from '../domain/requestCollection';\nimport { startActionCollection } from '../domain/rumEventsCollection/action/actionCollection';\nimport { startErrorCollection } from '../domain/rumEventsCollection/error/errorCollection';\nimport { startLongTaskCollection } from '../domain/rumEventsCollection/longTask/longTaskCollection';\nimport { startResourceCollection } from '../domain/rumEventsCollection/resource/resourceCollection';\nimport { startViewCollection } from '../domain/rumEventsCollection/view/viewCollection';\nimport { startRumSession } from '../domain/rumSession';\nimport { startRumBatch } from '../transport/batch';\nimport { startUrlContexts } from '../domain/urlContexts';\nimport { createLocationChangeObservable } from '../browser/locationChangeObservable';\nexport function startRum(initConfiguration, configuration, internalMonitoring, getCommonContext, recorderApi, initialViewName) {\n    var lifeCycle = new LifeCycle();\n    var session = startRumSession(configuration, lifeCycle);\n    var domMutationObservable = createDOMMutationObservable();\n    var locationChangeObservable = createLocationChangeObservable(location);\n    internalMonitoring.setExternalContextProvider(function () {\n        return combine({\n            application_id: initConfiguration.applicationId,\n        }, parentContexts.findView(), getCommonContext().context);\n    });\n    var _a = startRumEventCollection(initConfiguration.applicationId, lifeCycle, configuration, location, session, locationChangeObservable, getCommonContext), parentContexts = _a.parentContexts, foregroundContexts = _a.foregroundContexts, urlContexts = _a.urlContexts;\n    startLongTaskCollection(lifeCycle, session);\n    startResourceCollection(lifeCycle);\n    var _b = startViewCollection(lifeCycle, configuration, location, domMutationObservable, locationChangeObservable, foregroundContexts, recorderApi, initialViewName), addTiming = _b.addTiming, startView = _b.startView;\n    var addError = startErrorCollection(lifeCycle, foregroundContexts).addError;\n    var addAction = startActionCollection(lifeCycle, domMutationObservable, configuration, foregroundContexts).addAction;\n    startRequestCollection(lifeCycle, configuration, session);\n    startPerformanceCollection(lifeCycle, configuration);\n    var internalContext = startInternalContext(initConfiguration.applicationId, session, parentContexts, urlContexts);\n    return {\n        addAction: addAction,\n        addError: addError,\n        addTiming: addTiming,\n        startView: startView,\n        lifeCycle: lifeCycle,\n        parentContexts: parentContexts,\n        session: session,\n        getInternalContext: internalContext.get,\n    };\n}\nexport function startRumEventCollection(applicationId, lifeCycle, configuration, location, session, locationChangeObservable, getCommonContext) {\n    var parentContexts = startParentContexts(lifeCycle, session);\n    var urlContexts = startUrlContexts(lifeCycle, locationChangeObservable, location);\n    var foregroundContexts = startForegroundContexts();\n    var batch = startRumBatch(configuration, lifeCycle);\n    startRumAssembly(applicationId, configuration, lifeCycle, session, parentContexts, urlContexts, getCommonContext);\n    return {\n        parentContexts: parentContexts,\n        foregroundContexts: foregroundContexts,\n        urlContexts: urlContexts,\n        stop: function () {\n            // prevent batch from previous tests to keep running and send unwanted requests\n            // could be replaced by stopping all the component when they will all have a stop method\n            batch.stop();\n            parentContexts.stop();\n            foregroundContexts.stop();\n        },\n    };\n}\n//# sourceMappingURL=startRum.js.map"]},"metadata":{},"sourceType":"module"}