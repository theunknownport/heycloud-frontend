{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { elapsed, generateUUID, monitor, ONE_MINUTE, throttle, clocksNow, clocksOrigin, timeStampNow, display, looksLikeRelativeTime } from '@datadog/browser-core';\nimport { ViewLoadingType } from '../../../rawRumEvent.types';\nimport { LifeCycleEventType } from '../../lifeCycle';\nimport { trackInitialViewTimings } from './trackInitialViewTimings';\nimport { trackViewMetrics } from './trackViewMetrics';\nexport var THROTTLE_VIEW_UPDATE_PERIOD = 3000;\nexport var SESSION_KEEP_ALIVE_INTERVAL = 5 * ONE_MINUTE;\nexport function trackViews(location, lifeCycle, domMutationObservable, locationChangeObservable, areViewsTrackedAutomatically, initialViewName) {\n  var _a = trackInitialView(initialViewName),\n      stopInitialViewTracking = _a.stop,\n      initialView = _a.initialView;\n\n  var currentView = initialView;\n  var stopViewLifeCycle = startViewLifeCycle().stop;\n  var locationChangeSubscription;\n\n  if (areViewsTrackedAutomatically) {\n    locationChangeSubscription = renewViewOnLocationChange(locationChangeObservable);\n  }\n\n  function trackInitialView(name) {\n    var initialView = newView(lifeCycle, domMutationObservable, location, ViewLoadingType.INITIAL_LOAD, clocksOrigin(), name);\n    var stop = trackInitialViewTimings(lifeCycle, function (timings) {\n      initialView.updateTimings(timings);\n      initialView.scheduleUpdate();\n    }).stop;\n    return {\n      initialView: initialView,\n      stop: stop\n    };\n  }\n\n  function trackViewChange(startClocks, name) {\n    return newView(lifeCycle, domMutationObservable, location, ViewLoadingType.ROUTE_CHANGE, startClocks, name);\n  }\n\n  function startViewLifeCycle() {\n    lifeCycle.subscribe(LifeCycleEventType.SESSION_RENEWED, function () {\n      // do not trigger view update to avoid wrong data\n      currentView.end(); // Renew view on session renewal\n\n      currentView = trackViewChange(undefined, currentView.name);\n    }); // End the current view on page unload\n\n    lifeCycle.subscribe(LifeCycleEventType.BEFORE_UNLOAD, function () {\n      currentView.end();\n      currentView.triggerUpdate();\n    }); // Session keep alive\n\n    var keepAliveInterval = window.setInterval(monitor(function () {\n      currentView.triggerUpdate();\n    }), SESSION_KEEP_ALIVE_INTERVAL);\n    return {\n      stop: function () {\n        clearInterval(keepAliveInterval);\n      }\n    };\n  }\n\n  function renewViewOnLocationChange(locationChangeObservable) {\n    return locationChangeObservable.subscribe(function (_a) {\n      var oldLocation = _a.oldLocation,\n          newLocation = _a.newLocation;\n\n      if (areDifferentLocation(oldLocation, newLocation)) {\n        currentView.end();\n        currentView.triggerUpdate();\n        currentView = trackViewChange();\n        return;\n      }\n    });\n  }\n\n  return {\n    addTiming: function (name, time) {\n      if (time === void 0) {\n        time = timeStampNow();\n      }\n\n      currentView.addTiming(name, time);\n      currentView.triggerUpdate();\n    },\n    startView: function (name, startClocks) {\n      currentView.end(startClocks);\n      currentView.triggerUpdate();\n      currentView = trackViewChange(startClocks, name);\n    },\n    stop: function () {\n      locationChangeSubscription === null || locationChangeSubscription === void 0 ? void 0 : locationChangeSubscription.unsubscribe();\n      stopInitialViewTracking();\n      stopViewLifeCycle();\n      currentView.end();\n    }\n  };\n}\n\nfunction newView(lifeCycle, domMutationObservable, initialLocation, loadingType, startClocks, name) {\n  if (startClocks === void 0) {\n    startClocks = clocksNow();\n  } // Setup initial values\n\n\n  var id = generateUUID();\n  var timings = {};\n  var customTimings = {};\n  var documentVersion = 0;\n  var endClocks;\n\n  var location = __assign({}, initialLocation);\n\n  lifeCycle.notify(LifeCycleEventType.VIEW_CREATED, {\n    id: id,\n    name: name,\n    startClocks: startClocks\n  }); // Update the view every time the measures are changing\n\n  var _a = throttle(monitor(triggerViewUpdate), THROTTLE_VIEW_UPDATE_PERIOD, {\n    leading: false\n  }),\n      scheduleViewUpdate = _a.throttled,\n      cancelScheduleViewUpdate = _a.cancel;\n\n  var _b = trackViewMetrics(lifeCycle, domMutationObservable, scheduleViewUpdate, loadingType),\n      setLoadEvent = _b.setLoadEvent,\n      stopViewMetricsTracking = _b.stop,\n      viewMetrics = _b.viewMetrics; // Initial view update\n\n\n  triggerViewUpdate();\n\n  function triggerViewUpdate() {\n    documentVersion += 1;\n    var currentEnd = endClocks === undefined ? timeStampNow() : endClocks.timeStamp;\n    lifeCycle.notify(LifeCycleEventType.VIEW_UPDATED, __assign(__assign({}, viewMetrics), {\n      customTimings: customTimings,\n      documentVersion: documentVersion,\n      id: id,\n      name: name,\n      loadingType: loadingType,\n      location: location,\n      startClocks: startClocks,\n      timings: timings,\n      duration: elapsed(startClocks.timeStamp, currentEnd),\n      isActive: endClocks === undefined\n    }));\n  }\n\n  return {\n    name: name,\n    scheduleUpdate: scheduleViewUpdate,\n    end: function (clocks) {\n      if (clocks === void 0) {\n        clocks = clocksNow();\n      }\n\n      endClocks = clocks;\n      stopViewMetricsTracking();\n      lifeCycle.notify(LifeCycleEventType.VIEW_ENDED, {\n        endClocks: endClocks\n      });\n    },\n    triggerUpdate: function () {\n      // cancel any pending view updates execution\n      cancelScheduleViewUpdate();\n      triggerViewUpdate();\n    },\n    updateTimings: function (newTimings) {\n      timings = newTimings;\n\n      if (newTimings.loadEvent !== undefined) {\n        setLoadEvent(newTimings.loadEvent);\n      }\n    },\n    addTiming: function (name, time) {\n      var relativeTime = looksLikeRelativeTime(time) ? time : elapsed(startClocks.timeStamp, time);\n      customTimings[sanitizeTiming(name)] = relativeTime;\n    }\n  };\n}\n/**\n * Timing name is used as facet path that must contain only letters, digits, or the characters - _ . @ $\n */\n\n\nfunction sanitizeTiming(name) {\n  var sanitized = name.replace(/[^a-zA-Z0-9-_.@$]/g, '_');\n\n  if (sanitized !== name) {\n    display.warn(\"Invalid timing name: \" + name + \", sanitized to: \" + sanitized);\n  }\n\n  return sanitized;\n}\n\nfunction areDifferentLocation(currentLocation, otherLocation) {\n  return currentLocation.pathname !== otherLocation.pathname || !isHashAnAnchor(otherLocation.hash) && getPathFromHash(otherLocation.hash) !== getPathFromHash(currentLocation.hash);\n}\n\nfunction isHashAnAnchor(hash) {\n  var correspondingId = hash.substr(1);\n  return !!document.getElementById(correspondingId);\n}\n\nfunction getPathFromHash(hash) {\n  var index = hash.indexOf('?');\n  return index < 0 ? hash : hash.slice(0, index);\n}","map":{"version":3,"sources":["../../../../src/domain/rumEventsCollection/view/trackViews.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { elapsed, generateUUID, monitor, ONE_MINUTE, throttle, clocksNow, clocksOrigin, timeStampNow, display, looksLikeRelativeTime, } from '@datadog/browser-core';\nimport { ViewLoadingType } from '../../../rawRumEvent.types';\nimport { LifeCycleEventType } from '../../lifeCycle';\nimport { trackInitialViewTimings } from './trackInitialViewTimings';\nimport { trackViewMetrics } from './trackViewMetrics';\nexport var THROTTLE_VIEW_UPDATE_PERIOD = 3000;\nexport var SESSION_KEEP_ALIVE_INTERVAL = 5 * ONE_MINUTE;\nexport function trackViews(location, lifeCycle, domMutationObservable, locationChangeObservable, areViewsTrackedAutomatically, initialViewName) {\n    var _a = trackInitialView(initialViewName), stopInitialViewTracking = _a.stop, initialView = _a.initialView;\n    var currentView = initialView;\n    var stopViewLifeCycle = startViewLifeCycle().stop;\n    var locationChangeSubscription;\n    if (areViewsTrackedAutomatically) {\n        locationChangeSubscription = renewViewOnLocationChange(locationChangeObservable);\n    }\n    function trackInitialView(name) {\n        var initialView = newView(lifeCycle, domMutationObservable, location, ViewLoadingType.INITIAL_LOAD, clocksOrigin(), name);\n        var stop = trackInitialViewTimings(lifeCycle, function (timings) {\n            initialView.updateTimings(timings);\n            initialView.scheduleUpdate();\n        }).stop;\n        return { initialView: initialView, stop: stop };\n    }\n    function trackViewChange(startClocks, name) {\n        return newView(lifeCycle, domMutationObservable, location, ViewLoadingType.ROUTE_CHANGE, startClocks, name);\n    }\n    function startViewLifeCycle() {\n        lifeCycle.subscribe(LifeCycleEventType.SESSION_RENEWED, function () {\n            // do not trigger view update to avoid wrong data\n            currentView.end();\n            // Renew view on session renewal\n            currentView = trackViewChange(undefined, currentView.name);\n        });\n        // End the current view on page unload\n        lifeCycle.subscribe(LifeCycleEventType.BEFORE_UNLOAD, function () {\n            currentView.end();\n            currentView.triggerUpdate();\n        });\n        // Session keep alive\n        var keepAliveInterval = window.setInterval(monitor(function () {\n            currentView.triggerUpdate();\n        }), SESSION_KEEP_ALIVE_INTERVAL);\n        return {\n            stop: function () {\n                clearInterval(keepAliveInterval);\n            },\n        };\n    }\n    function renewViewOnLocationChange(locationChangeObservable) {\n        return locationChangeObservable.subscribe(function (_a) {\n            var oldLocation = _a.oldLocation, newLocation = _a.newLocation;\n            if (areDifferentLocation(oldLocation, newLocation)) {\n                currentView.end();\n                currentView.triggerUpdate();\n                currentView = trackViewChange();\n                return;\n            }\n        });\n    }\n    return {\n        addTiming: function (name, time) {\n            if (time === void 0) { time = timeStampNow(); }\n            currentView.addTiming(name, time);\n            currentView.triggerUpdate();\n        },\n        startView: function (name, startClocks) {\n            currentView.end(startClocks);\n            currentView.triggerUpdate();\n            currentView = trackViewChange(startClocks, name);\n        },\n        stop: function () {\n            locationChangeSubscription === null || locationChangeSubscription === void 0 ? void 0 : locationChangeSubscription.unsubscribe();\n            stopInitialViewTracking();\n            stopViewLifeCycle();\n            currentView.end();\n        },\n    };\n}\nfunction newView(lifeCycle, domMutationObservable, initialLocation, loadingType, startClocks, name) {\n    if (startClocks === void 0) { startClocks = clocksNow(); }\n    // Setup initial values\n    var id = generateUUID();\n    var timings = {};\n    var customTimings = {};\n    var documentVersion = 0;\n    var endClocks;\n    var location = __assign({}, initialLocation);\n    lifeCycle.notify(LifeCycleEventType.VIEW_CREATED, { id: id, name: name, startClocks: startClocks });\n    // Update the view every time the measures are changing\n    var _a = throttle(monitor(triggerViewUpdate), THROTTLE_VIEW_UPDATE_PERIOD, {\n        leading: false,\n    }), scheduleViewUpdate = _a.throttled, cancelScheduleViewUpdate = _a.cancel;\n    var _b = trackViewMetrics(lifeCycle, domMutationObservable, scheduleViewUpdate, loadingType), setLoadEvent = _b.setLoadEvent, stopViewMetricsTracking = _b.stop, viewMetrics = _b.viewMetrics;\n    // Initial view update\n    triggerViewUpdate();\n    function triggerViewUpdate() {\n        documentVersion += 1;\n        var currentEnd = endClocks === undefined ? timeStampNow() : endClocks.timeStamp;\n        lifeCycle.notify(LifeCycleEventType.VIEW_UPDATED, __assign(__assign({}, viewMetrics), { customTimings: customTimings,\n            documentVersion: documentVersion,\n            id: id,\n            name: name,\n            loadingType: loadingType,\n            location: location,\n            startClocks: startClocks,\n            timings: timings, duration: elapsed(startClocks.timeStamp, currentEnd), isActive: endClocks === undefined }));\n    }\n    return {\n        name: name,\n        scheduleUpdate: scheduleViewUpdate,\n        end: function (clocks) {\n            if (clocks === void 0) { clocks = clocksNow(); }\n            endClocks = clocks;\n            stopViewMetricsTracking();\n            lifeCycle.notify(LifeCycleEventType.VIEW_ENDED, { endClocks: endClocks });\n        },\n        triggerUpdate: function () {\n            // cancel any pending view updates execution\n            cancelScheduleViewUpdate();\n            triggerViewUpdate();\n        },\n        updateTimings: function (newTimings) {\n            timings = newTimings;\n            if (newTimings.loadEvent !== undefined) {\n                setLoadEvent(newTimings.loadEvent);\n            }\n        },\n        addTiming: function (name, time) {\n            var relativeTime = looksLikeRelativeTime(time) ? time : elapsed(startClocks.timeStamp, time);\n            customTimings[sanitizeTiming(name)] = relativeTime;\n        },\n    };\n}\n/**\n * Timing name is used as facet path that must contain only letters, digits, or the characters - _ . @ $\n */\nfunction sanitizeTiming(name) {\n    var sanitized = name.replace(/[^a-zA-Z0-9-_.@$]/g, '_');\n    if (sanitized !== name) {\n        display.warn(\"Invalid timing name: \" + name + \", sanitized to: \" + sanitized);\n    }\n    return sanitized;\n}\nfunction areDifferentLocation(currentLocation, otherLocation) {\n    return (currentLocation.pathname !== otherLocation.pathname ||\n        (!isHashAnAnchor(otherLocation.hash) &&\n            getPathFromHash(otherLocation.hash) !== getPathFromHash(currentLocation.hash)));\n}\nfunction isHashAnAnchor(hash) {\n    var correspondingId = hash.substr(1);\n    return !!document.getElementById(correspondingId);\n}\nfunction getPathFromHash(hash) {\n    var index = hash.indexOf('?');\n    return index < 0 ? hash : hash.slice(0, index);\n}\n//# sourceMappingURL=trackViews.js.map"]},"metadata":{},"sourceType":"module"}