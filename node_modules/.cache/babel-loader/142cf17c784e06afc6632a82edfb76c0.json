{"ast":null,"code":"import { SESSION_TIME_OUT_DELAY, relativeNow } from '@datadog/browser-core';\nimport { ContextHistory } from './contextHistory';\nimport { LifeCycleEventType } from './lifeCycle';\n/**\n * We want to attach to an event:\n * - the url corresponding to its start\n * - the referrer corresponding to the previous view url (or document referrer for initial view)\n */\n\nexport var URL_CONTEXT_TIME_OUT_DELAY = SESSION_TIME_OUT_DELAY;\nexport function startUrlContexts(lifeCycle, locationChangeObservable, location) {\n  var urlContextHistory = new ContextHistory(URL_CONTEXT_TIME_OUT_DELAY);\n  var previousViewUrl;\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_ENDED, function (_a) {\n    var endClocks = _a.endClocks;\n    urlContextHistory.closeCurrent(endClocks.relative);\n  });\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_CREATED, function (_a) {\n    var startClocks = _a.startClocks;\n    var viewUrl = location.href;\n    urlContextHistory.setCurrent(buildUrlContext({\n      url: viewUrl,\n      referrer: !previousViewUrl ? document.referrer : previousViewUrl\n    }), startClocks.relative);\n    previousViewUrl = viewUrl;\n  });\n  var locationChangeSubscription = locationChangeObservable.subscribe(function (_a) {\n    var newLocation = _a.newLocation;\n    var current = urlContextHistory.getCurrent();\n\n    if (current) {\n      var changeTime = relativeNow();\n      urlContextHistory.closeCurrent(changeTime);\n      urlContextHistory.setCurrent(buildUrlContext({\n        url: newLocation.href,\n        referrer: current.view.referrer\n      }), changeTime);\n    }\n  });\n\n  function buildUrlContext(_a) {\n    var url = _a.url,\n        referrer = _a.referrer;\n    return {\n      view: {\n        url: url,\n        referrer: referrer\n      }\n    };\n  }\n\n  return {\n    findUrl: function (startTime) {\n      return urlContextHistory.find(startTime);\n    },\n    stop: function () {\n      locationChangeSubscription.unsubscribe();\n      urlContextHistory.stop();\n    }\n  };\n}","map":{"version":3,"sources":["../../src/domain/urlContexts.ts"],"names":[],"mappings":"AAAA,SAAmC,sBAAnC,EAA2D,WAA3D,QAA8E,uBAA9E;AAGA,SAAS,cAAT,QAA+B,kBAA/B;AACA,SAAoB,kBAApB,QAA8C,aAA9C;AAEA;;;;AAIG;;AAEH,OAAO,IAAM,0BAA0B,GAAG,sBAAnC;AAOP,OAAM,SAAU,gBAAV,CACJ,SADI,EAEJ,wBAFI,EAGJ,QAHI,EAGc;AAElB,MAAM,iBAAiB,GAAG,IAAI,cAAJ,CAA+B,0BAA/B,CAA1B;AAEA,MAAI,eAAJ;AAEA,EAAA,SAAS,CAAC,SAAV,CAAoB,kBAAkB,CAAC,UAAvC,EAAmD,UAAC,EAAD,EAAc;QAAX,SAAS,GAAA,EAAA,CAAA,S;AAC7D,IAAA,iBAAiB,CAAC,YAAlB,CAA+B,SAAS,CAAC,QAAzC;AACD,GAFD;AAIA,EAAA,SAAS,CAAC,SAAV,CAAoB,kBAAkB,CAAC,YAAvC,EAAqD,UAAC,EAAD,EAAgB;QAAb,WAAW,GAAA,EAAA,CAAA,W;AACjE,QAAM,OAAO,GAAG,QAAQ,CAAC,IAAzB;AACA,IAAA,iBAAiB,CAAC,UAAlB,CACE,eAAe,CAAC;AACd,MAAA,GAAG,EAAE,OADS;AAEd,MAAA,QAAQ,EAAE,CAAC,eAAD,GAAmB,QAAQ,CAAC,QAA5B,GAAuC;AAFnC,KAAD,CADjB,EAKE,WAAW,CAAC,QALd;AAOA,IAAA,eAAe,GAAG,OAAlB;AACD,GAVD;AAYA,MAAM,0BAA0B,GAAG,wBAAwB,CAAC,SAAzB,CAAmC,UAAC,EAAD,EAAgB;QAAb,WAAW,GAAA,EAAA,CAAA,W;AAClF,QAAM,OAAO,GAAG,iBAAiB,CAAC,UAAlB,EAAhB;;AACA,QAAI,OAAJ,EAAa;AACX,UAAM,UAAU,GAAG,WAAW,EAA9B;AACA,MAAA,iBAAiB,CAAC,YAAlB,CAA+B,UAA/B;AACA,MAAA,iBAAiB,CAAC,UAAlB,CACE,eAAe,CAAC;AACd,QAAA,GAAG,EAAE,WAAW,CAAC,IADH;AAEd,QAAA,QAAQ,EAAE,OAAO,CAAC,IAAR,CAAa;AAFT,OAAD,CADjB,EAKE,UALF;AAOD;AACF,GAbkC,CAAnC;;AAeA,WAAS,eAAT,CAAyB,EAAzB,EAA6E;QAAlD,GAAG,GAAA,EAAA,CAAA,G;QAAE,QAAQ,GAAA,EAAA,CAAA,Q;AACtC,WAAO;AACL,MAAA,IAAI,EAAE;AACJ,QAAA,GAAG,EAAA,GADC;AAEJ,QAAA,QAAQ,EAAA;AAFJ;AADD,KAAP;AAMD;;AAED,SAAO;AACL,IAAA,OAAO,EAAE,UAAC,SAAD,EAAyB;AAAK,aAAA,iBAAiB,CAAC,IAAlB,CAAA,SAAA,CAAA;AAAiC,KADnE;AAEL,IAAA,IAAI,EAAE,YAAA;AACJ,MAAA,0BAA0B,CAAC,WAA3B;AACA,MAAA,iBAAiB,CAAC,IAAlB;AACD;AALI,GAAP;AAOD","sourceRoot":"","sourcesContent":["import { SESSION_TIME_OUT_DELAY, relativeNow } from '@datadog/browser-core';\nimport { ContextHistory } from './contextHistory';\nimport { LifeCycleEventType } from './lifeCycle';\n/**\n * We want to attach to an event:\n * - the url corresponding to its start\n * - the referrer corresponding to the previous view url (or document referrer for initial view)\n */\nexport var URL_CONTEXT_TIME_OUT_DELAY = SESSION_TIME_OUT_DELAY;\nexport function startUrlContexts(lifeCycle, locationChangeObservable, location) {\n    var urlContextHistory = new ContextHistory(URL_CONTEXT_TIME_OUT_DELAY);\n    var previousViewUrl;\n    lifeCycle.subscribe(LifeCycleEventType.VIEW_ENDED, function (_a) {\n        var endClocks = _a.endClocks;\n        urlContextHistory.closeCurrent(endClocks.relative);\n    });\n    lifeCycle.subscribe(LifeCycleEventType.VIEW_CREATED, function (_a) {\n        var startClocks = _a.startClocks;\n        var viewUrl = location.href;\n        urlContextHistory.setCurrent(buildUrlContext({\n            url: viewUrl,\n            referrer: !previousViewUrl ? document.referrer : previousViewUrl,\n        }), startClocks.relative);\n        previousViewUrl = viewUrl;\n    });\n    var locationChangeSubscription = locationChangeObservable.subscribe(function (_a) {\n        var newLocation = _a.newLocation;\n        var current = urlContextHistory.getCurrent();\n        if (current) {\n            var changeTime = relativeNow();\n            urlContextHistory.closeCurrent(changeTime);\n            urlContextHistory.setCurrent(buildUrlContext({\n                url: newLocation.href,\n                referrer: current.view.referrer,\n            }), changeTime);\n        }\n    });\n    function buildUrlContext(_a) {\n        var url = _a.url, referrer = _a.referrer;\n        return {\n            view: {\n                url: url,\n                referrer: referrer,\n            },\n        };\n    }\n    return {\n        findUrl: function (startTime) { return urlContextHistory.find(startTime); },\n        stop: function () {\n            locationChangeSubscription.unsubscribe();\n            urlContextHistory.stop();\n        },\n    };\n}\n//# sourceMappingURL=urlContexts.js.map"]},"metadata":{},"sourceType":"module"}