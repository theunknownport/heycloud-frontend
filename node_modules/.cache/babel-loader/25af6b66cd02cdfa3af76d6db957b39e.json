{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { addEventListener, instrumentMethodAndCallOriginal, Observable } from '@datadog/browser-core';\nexport function createLocationChangeObservable(location) {\n  var currentLocation = __assign({}, location);\n\n  var observable = new Observable(function () {\n    var stopHistoryTracking = trackHistory(onLocationChange).stop;\n    var stopHashTracking = trackHash(onLocationChange).stop;\n    return function () {\n      stopHistoryTracking();\n      stopHashTracking();\n    };\n  });\n\n  function onLocationChange() {\n    if (currentLocation.href === location.href) {\n      return;\n    }\n\n    var newLocation = __assign({}, location);\n\n    observable.notify({\n      newLocation: newLocation,\n      oldLocation: currentLocation\n    });\n    currentLocation = newLocation;\n  }\n\n  return observable;\n}\n\nfunction trackHistory(onHistoryChange) {\n  var stopInstrumentingPushState = instrumentMethodAndCallOriginal(history, 'pushState', {\n    after: onHistoryChange\n  }).stop;\n  var stopInstrumentingReplaceState = instrumentMethodAndCallOriginal(history, 'replaceState', {\n    after: onHistoryChange\n  }).stop;\n  var removeListener = addEventListener(window, \"popstate\"\n  /* POP_STATE */\n  , onHistoryChange).stop;\n  return {\n    stop: function () {\n      stopInstrumentingPushState();\n      stopInstrumentingReplaceState();\n      removeListener();\n    }\n  };\n}\n\nfunction trackHash(onHashChange) {\n  return addEventListener(window, \"hashchange\"\n  /* HASH_CHANGE */\n  , onHashChange);\n}","map":{"version":3,"sources":["../../src/browser/locationChangeObservable.ts"],"names":[],"mappings":";AAAA,SAAS,gBAAT,EAAsC,+BAAtC,EAAuE,UAAvE,QAAyF,uBAAzF;AAOA,OAAM,SAAU,8BAAV,CAAyC,QAAzC,EAA2D;AAC/D,MAAI,eAAe,GAAA,QAAA,CAAA,EAAA,EAAQ,QAAR,CAAnB;;AACA,MAAM,UAAU,GAAG,IAAI,UAAJ,CAA+B,YAAA;AACxC,QAAM,mBAAmB,GAAK,YAAY,CAAC,gBAAD,CAAZ,CAAL,IAAzB;AACA,QAAM,gBAAgB,GAAK,SAAS,CAAC,gBAAD,CAAT,CAAL,IAAtB;AACR,WAAO,YAAA;AACL,MAAA,mBAAmB;AACnB,MAAA,gBAAgB;AACjB,KAHD;AAID,GAPkB,CAAnB;;AASA,WAAS,gBAAT,GAAyB;AACvB,QAAI,eAAe,CAAC,IAAhB,KAAyB,QAAQ,CAAC,IAAtC,EAA4C;AAC1C;AACD;;AACD,QAAM,WAAW,GAAA,QAAA,CAAA,EAAA,EAAQ,QAAR,CAAjB;;AACA,IAAA,UAAU,CAAC,MAAX,CAAkB;AAChB,MAAA,WAAW,EAAA,WADK;AAEhB,MAAA,WAAW,EAAE;AAFG,KAAlB;AAIA,IAAA,eAAe,GAAG,WAAlB;AACD;;AAED,SAAO,UAAP;AACD;;AAED,SAAS,YAAT,CAAsB,eAAtB,EAAiD;AACvC,MAAM,0BAA0B,GAAK,+BAA+B,CAAC,OAAD,EAAU,WAAV,EAAuB;AACjG,IAAA,KAAK,EAAE;AAD0F,GAAvB,CAA/B,CAAL,IAAhC;AAGA,MAAM,6BAA6B,GAAK,+BAA+B,CAAC,OAAD,EAAU,cAAV,EAA0B;AACvG,IAAA,KAAK,EAAE;AADgG,GAA1B,CAA/B,CAAL,IAAnC;AAGA,MAAM,cAAc,GAAK,gBAAgB,CAAC,MAAD,EAAO;AAAA;AAAP,IAA8B,eAA9B,CAAhB,CAAL,IAApB;AAER,SAAO;AACL,IAAA,IAAI,EAAE,YAAA;AACJ,MAAA,0BAA0B;AAC1B,MAAA,6BAA6B;AAC7B,MAAA,cAAc;AACf;AALI,GAAP;AAOD;;AAED,SAAS,SAAT,CAAmB,YAAnB,EAA2C;AACzC,SAAO,gBAAgB,CAAC,MAAD,EAAO;AAAA;AAAP,IAAgC,YAAhC,CAAvB;AACD","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { addEventListener, instrumentMethodAndCallOriginal, Observable } from '@datadog/browser-core';\nexport function createLocationChangeObservable(location) {\n    var currentLocation = __assign({}, location);\n    var observable = new Observable(function () {\n        var stopHistoryTracking = trackHistory(onLocationChange).stop;\n        var stopHashTracking = trackHash(onLocationChange).stop;\n        return function () {\n            stopHistoryTracking();\n            stopHashTracking();\n        };\n    });\n    function onLocationChange() {\n        if (currentLocation.href === location.href) {\n            return;\n        }\n        var newLocation = __assign({}, location);\n        observable.notify({\n            newLocation: newLocation,\n            oldLocation: currentLocation,\n        });\n        currentLocation = newLocation;\n    }\n    return observable;\n}\nfunction trackHistory(onHistoryChange) {\n    var stopInstrumentingPushState = instrumentMethodAndCallOriginal(history, 'pushState', {\n        after: onHistoryChange,\n    }).stop;\n    var stopInstrumentingReplaceState = instrumentMethodAndCallOriginal(history, 'replaceState', {\n        after: onHistoryChange,\n    }).stop;\n    var removeListener = addEventListener(window, \"popstate\" /* POP_STATE */, onHistoryChange).stop;\n    return {\n        stop: function () {\n            stopInstrumentingPushState();\n            stopInstrumentingReplaceState();\n            removeListener();\n        },\n    };\n}\nfunction trackHash(onHashChange) {\n    return addEventListener(window, \"hashchange\" /* HASH_CHANGE */, onHashChange);\n}\n//# sourceMappingURL=locationChangeObservable.js.map"]},"metadata":{},"sourceType":"module"}