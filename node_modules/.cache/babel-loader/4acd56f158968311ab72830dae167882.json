{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { combine, toServerDuration, generateUUID } from '@datadog/browser-core';\nimport { ActionType, RumEventType } from '../../../rawRumEvent.types';\nimport { LifeCycleEventType } from '../../lifeCycle';\nimport { trackActions } from './trackActions';\nexport function startActionCollection(lifeCycle, domMutationObservable, configuration, foregroundContexts) {\n  lifeCycle.subscribe(LifeCycleEventType.AUTO_ACTION_COMPLETED, function (action) {\n    return lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, processAction(action, foregroundContexts));\n  });\n\n  if (configuration.trackInteractions) {\n    trackActions(lifeCycle, domMutationObservable, configuration);\n  }\n\n  return {\n    addAction: function (action, savedCommonContext) {\n      lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, __assign({\n        savedCommonContext: savedCommonContext\n      }, processAction(action, foregroundContexts)));\n    }\n  };\n}\n\nfunction processAction(action, foregroundContexts) {\n  var autoActionProperties = isAutoAction(action) ? {\n    action: {\n      error: {\n        count: action.counts.errorCount\n      },\n      id: action.id,\n      loading_time: toServerDuration(action.duration),\n      long_task: {\n        count: action.counts.longTaskCount\n      },\n      resource: {\n        count: action.counts.resourceCount\n      }\n    }\n  } : undefined;\n  var customerContext = !isAutoAction(action) ? action.context : undefined;\n  var actionEvent = combine({\n    action: {\n      id: generateUUID(),\n      target: {\n        name: action.name\n      },\n      type: action.type\n    },\n    date: action.startClocks.timeStamp,\n    type: RumEventType.ACTION\n  }, autoActionProperties);\n  var inForeground = foregroundContexts.isInForegroundAt(action.startClocks.relative);\n\n  if (inForeground !== undefined) {\n    actionEvent.view = {\n      in_foreground: inForeground\n    };\n  }\n\n  return {\n    customerContext: customerContext,\n    rawRumEvent: actionEvent,\n    startTime: action.startClocks.relative,\n    domainContext: isAutoAction(action) ? {\n      event: action.event\n    } : {}\n  };\n}\n\nfunction isAutoAction(action) {\n  return action.type !== ActionType.CUSTOM;\n}","map":{"version":3,"sources":["../../../../src/domain/rumEventsCollection/action/actionCollection.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { combine, toServerDuration, generateUUID } from '@datadog/browser-core';\nimport { ActionType, RumEventType } from '../../../rawRumEvent.types';\nimport { LifeCycleEventType } from '../../lifeCycle';\nimport { trackActions } from './trackActions';\nexport function startActionCollection(lifeCycle, domMutationObservable, configuration, foregroundContexts) {\n    lifeCycle.subscribe(LifeCycleEventType.AUTO_ACTION_COMPLETED, function (action) {\n        return lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, processAction(action, foregroundContexts));\n    });\n    if (configuration.trackInteractions) {\n        trackActions(lifeCycle, domMutationObservable, configuration);\n    }\n    return {\n        addAction: function (action, savedCommonContext) {\n            lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, __assign({ savedCommonContext: savedCommonContext }, processAction(action, foregroundContexts)));\n        },\n    };\n}\nfunction processAction(action, foregroundContexts) {\n    var autoActionProperties = isAutoAction(action)\n        ? {\n            action: {\n                error: {\n                    count: action.counts.errorCount,\n                },\n                id: action.id,\n                loading_time: toServerDuration(action.duration),\n                long_task: {\n                    count: action.counts.longTaskCount,\n                },\n                resource: {\n                    count: action.counts.resourceCount,\n                },\n            },\n        }\n        : undefined;\n    var customerContext = !isAutoAction(action) ? action.context : undefined;\n    var actionEvent = combine({\n        action: {\n            id: generateUUID(),\n            target: {\n                name: action.name,\n            },\n            type: action.type,\n        },\n        date: action.startClocks.timeStamp,\n        type: RumEventType.ACTION,\n    }, autoActionProperties);\n    var inForeground = foregroundContexts.isInForegroundAt(action.startClocks.relative);\n    if (inForeground !== undefined) {\n        actionEvent.view = { in_foreground: inForeground };\n    }\n    return {\n        customerContext: customerContext,\n        rawRumEvent: actionEvent,\n        startTime: action.startClocks.relative,\n        domainContext: isAutoAction(action) ? { event: action.event } : {},\n    };\n}\nfunction isAutoAction(action) {\n    return action.type !== ActionType.CUSTOM;\n}\n//# sourceMappingURL=actionCollection.js.map"]},"metadata":{},"sourceType":"module"}