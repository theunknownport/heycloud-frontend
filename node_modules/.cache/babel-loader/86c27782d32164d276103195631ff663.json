{"ast":null,"code":"var _jsxFileName = \"/home/finn/Documents/heycloud-frontend/heycloud-frontend/src/common/AuthVerify.js\";\nimport React from \"react\";\nimport { isExpired, decodeToken } from \"react-jwt\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthVerify = props => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user) {\n    const decodedToken = decodeToken(user.access_token);\n    var now = new Date();\n    var tokenExpire = new Date(decodedToken.exp);\n\n    if (tokenExpire < now) {\n      props.logOut();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n\n_c = AuthVerify;\nexport default AuthVerify;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthVerify\");","map":{"version":3,"sources":["/home/finn/Documents/heycloud-frontend/heycloud-frontend/src/common/AuthVerify.js"],"names":["React","isExpired","decodeToken","moment","AuthVerify","props","user","JSON","parse","localStorage","getItem","decodedToken","access_token","now","Date","tokenExpire","exp","logOut"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,WAAvC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,MAAIJ,IAAJ,EAAU;AACR,UAAMK,YAAY,GAAIT,WAAW,CAACI,IAAI,CAACM,YAAN,CAAjC;AACA,QAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,QAAIC,WAAW,GAAG,IAAID,IAAJ,CAASH,YAAY,CAACK,GAAtB,CAAlB;;AACA,QAAID,WAAW,GAAGF,GAAlB,EAAuB;AACrBR,MAAAA,KAAK,CAACY,MAAN;AACD;AACF;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAZD;;KAAMb,U;AAcN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { isExpired, decodeToken } from \"react-jwt\";\nimport moment from 'moment';\n\n\nconst AuthVerify = (props) => {\n  const user = JSON.parse(localStorage.getItem(\"user\")) ;\n  if (user) {\n    const decodedToken = (decodeToken(user.access_token))\n    var now = new Date();\n    var tokenExpire = new Date(decodedToken.exp);\n    if (tokenExpire < now) {\n      props.logOut();\n    }\n  }\n\n  return <div></div>;\n};\n\nexport default AuthVerify;"]},"metadata":{},"sourceType":"module"}