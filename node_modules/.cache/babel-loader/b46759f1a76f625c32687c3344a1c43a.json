{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nconst API_URL = \"http://localhost:8000/vps\";\n\nconst getVpsCost = () => {\n  return axios.get(API_URL + \"/cost\", {\n    headers: authHeader()\n  });\n};\n\nconst listRegionsUser = (oldpassword, password) => {\n  return axios.get(API_URL + \"/regions\", {\n    oldpassword,\n    password\n  }, {\n    headers: authHeader()\n  }).then(response => {\n    return JSON.stringify(response.data);\n  });\n};\n\nconst listRecentTasks = () => {\n  return axios.get(API_URL + \"recent-tasks\", {\n    headers: authHeader()\n  });\n};\n\nconst listVps = () => {\n  return axios.get(API_URL + \"vps\", {\n    headers: authHeader()\n  });\n};\n\nconst listNgrokTokens = () => {\n  return axios.get(API_URL + \"ngrok-tokens\", {\n    headers: authHeader()\n  });\n};\n\nconst clearTasks = () => {\n  return axios.delete(API_URL + \"recent-tasks\", {\n    headers: authHeader()\n  });\n};\n\nconst getUser = () => {\n  return axios.get(API_URL + \"users\", {\n    headers: authHeader()\n  });\n};\n\nconst getPortalSession = () => {\n  return axios.get(API_URL + \"accounts/portal\", {\n    headers: authHeader()\n  });\n};\n\nconst changePassword = (oldpassword, password) => {\n  return axios.post(API_URL + \"accounts/change-password\", {\n    oldpassword,\n    password\n  }, {\n    headers: authHeader()\n  }).then(response => {\n    return JSON.stringify(response.data);\n  });\n};\n\nexport default {\n  getVpsCost,\n  listRegionsUser\n};","map":{"version":3,"sources":["C:/Projects/React/heycloud-frontent-2/src/services/vps.service.js"],"names":["axios","authHeader","API_URL","getVpsCost","get","headers","listRegionsUser","oldpassword","password","then","response","JSON","stringify","data","listRecentTasks","listVps","listNgrokTokens","clearTasks","delete","getUser","getPortalSession","changePassword","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,2BAAhB;;AAGA,MAAMC,UAAU,GAAG,MAAM;AACvB,SAAOH,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,OAApB,EAA6B;AAAEG,IAAAA,OAAO,EAAEJ,UAAU;AAArB,GAA7B,CAAP;AACD,CAFD;;AAKA,MAAMK,eAAe,GAAG,CAACC,WAAD,EAAcC,QAAd,KAA2B;AAC/C,SAAOR,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,UAApB,EAAgC;AACrCK,IAAAA,WADqC;AAErCC,IAAAA;AAFqC,GAAhC,EAIP;AACAH,IAAAA,OAAO,EAAEJ,UAAU;AADnB,GAJO,EAONQ,IAPM,CAOAC,QAAD,IAAc;AAElB,WAAOC,IAAI,CAACC,SAAL,CAAeF,QAAQ,CAACG,IAAxB,CAAP;AACD,GAVM,CAAP;AAWD,CAZH;;AAcA,MAAMC,eAAe,GAAG,MAAM;AAC5B,SAAOd,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,cAApB,EAAoC;AAAEG,IAAAA,OAAO,EAAEJ,UAAU;AAArB,GAApC,CAAP;AACD,CAFD;;AAIA,MAAMc,OAAO,GAAG,MAAM;AACpB,SAAOf,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,KAApB,EAA2B;AAAEG,IAAAA,OAAO,EAAEJ,UAAU;AAArB,GAA3B,CAAP;AACD,CAFD;;AAIA,MAAMe,eAAe,GAAG,MAAM;AAC5B,SAAOhB,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,cAApB,EAAoC;AAAEG,IAAAA,OAAO,EAAEJ,UAAU;AAArB,GAApC,CAAP;AACD,CAFD;;AAIA,MAAMgB,UAAU,GAAG,MAAM;AACvB,SAAOjB,KAAK,CAACkB,MAAN,CAAahB,OAAO,GAAG,cAAvB,EAAuC;AAAEG,IAAAA,OAAO,EAAEJ,UAAU;AAArB,GAAvC,CAAP;AACD,CAFD;;AAIA,MAAMkB,OAAO,GAAG,MAAM;AACpB,SAAOnB,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,OAApB,EAA6B;AAAEG,IAAAA,OAAO,EAAEJ,UAAU;AAArB,GAA7B,CAAP;AACD,CAFD;;AAIA,MAAMmB,gBAAgB,GAAG,MAAM;AAC7B,SAAOpB,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,iBAApB,EAAuC;AAAEG,IAAAA,OAAO,EAAEJ,UAAU;AAArB,GAAvC,CAAP;AACD,CAFD;;AAIA,MAAMoB,cAAc,GAAG,CAACd,WAAD,EAAcC,QAAd,KAA2B;AAChD,SAAOR,KAAK,CAACsB,IAAN,CAAWpB,OAAO,GAAG,0BAArB,EAAiD;AACtDK,IAAAA,WADsD;AAEtDC,IAAAA;AAFsD,GAAjD,EAIP;AACAH,IAAAA,OAAO,EAAEJ,UAAU;AADnB,GAJO,EAONQ,IAPM,CAOAC,QAAD,IAAc;AAElB,WAAOC,IAAI,CAACC,SAAL,CAAeF,QAAQ,CAACG,IAAxB,CAAP;AACD,GAVM,CAAP;AAWD,CAZD;;AAcA,eAAe;AACXV,EAAAA,UADW;AAEXG,EAAAA;AAFW,CAAf","sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:8000/vps\";\r\n\r\n\r\nconst getVpsCost = () => {\r\n  return axios.get(API_URL + \"/cost\", { headers: authHeader() });\r\n};\r\n\r\n\r\nconst listRegionsUser = (oldpassword, password) => {\r\n    return axios.get(API_URL + \"/regions\", {\r\n      oldpassword,\r\n      password,\r\n    },\r\n    {\r\n    headers: authHeader()\r\n    })\r\n    .then((response) => {\r\n  \r\n      return JSON.stringify(response.data);\r\n    });\r\n  };\r\n\r\nconst listRecentTasks = () => {\r\n  return axios.get(API_URL + \"recent-tasks\", { headers: authHeader() });\r\n};\r\n\r\nconst listVps = () => {\r\n  return axios.get(API_URL + \"vps\", { headers: authHeader() });\r\n};\r\n\r\nconst listNgrokTokens = () => {\r\n  return axios.get(API_URL + \"ngrok-tokens\", { headers: authHeader() });\r\n};\r\n\r\nconst clearTasks = () => {\r\n  return axios.delete(API_URL + \"recent-tasks\", { headers: authHeader() });\r\n};\r\n\r\nconst getUser = () => {\r\n  return axios.get(API_URL + \"users\", { headers: authHeader() });\r\n};\r\n\r\nconst getPortalSession = () => {\r\n  return axios.get(API_URL + \"accounts/portal\", { headers: authHeader() });\r\n};\r\n\r\nconst changePassword = (oldpassword, password) => {\r\n  return axios.post(API_URL + \"accounts/change-password\", {\r\n    oldpassword,\r\n    password,\r\n  },\r\n  {\r\n  headers: authHeader()\r\n  })\r\n  .then((response) => {\r\n\r\n    return JSON.stringify(response.data);\r\n  });\r\n};\r\n\r\nexport default {\r\n    getVpsCost,\r\n    listRegionsUser\r\n};\r\n"]},"metadata":{},"sourceType":"module"}