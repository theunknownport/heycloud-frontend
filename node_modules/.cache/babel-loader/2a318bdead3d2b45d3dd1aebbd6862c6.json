{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { combine, generateUUID, RequestType, ResourceType, toServerDuration, relativeToClocks } from '@datadog/browser-core';\nimport { supportPerformanceEntry } from '../../../browser/performanceCollection';\nimport { RumEventType } from '../../../rawRumEvent.types';\nimport { LifeCycleEventType } from '../../lifeCycle';\nimport { matchRequestTiming } from './matchRequestTiming';\nimport { computePerformanceResourceDetails, computePerformanceResourceDuration, computeResourceKind, computeSize, isRequestKind } from './resourceUtils';\nexport function startResourceCollection(lifeCycle) {\n  lifeCycle.subscribe(LifeCycleEventType.REQUEST_COMPLETED, function (request) {\n    lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, processRequest(request));\n  });\n  lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRY_COLLECTED, function (entry) {\n    if (entry.entryType === 'resource' && !isRequestKind(entry)) {\n      lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, processResourceEntry(entry));\n    }\n  });\n}\n\nfunction processRequest(request) {\n  var type = request.type === RequestType.XHR ? ResourceType.XHR : ResourceType.FETCH;\n  var matchingTiming = matchRequestTiming(request);\n  var startClocks = matchingTiming ? relativeToClocks(matchingTiming.startTime) : request.startClocks;\n  var correspondingTimingOverrides = matchingTiming ? computePerformanceEntryMetrics(matchingTiming) : undefined;\n  var tracingInfo = computeRequestTracingInfo(request);\n  var resourceEvent = combine({\n    date: startClocks.timeStamp,\n    resource: {\n      id: generateUUID(),\n      type: type,\n      duration: toServerDuration(request.duration),\n      method: request.method,\n      status_code: request.status,\n      url: request.url\n    },\n    type: RumEventType.RESOURCE\n  }, tracingInfo, correspondingTimingOverrides);\n  return {\n    startTime: startClocks.relative,\n    rawRumEvent: resourceEvent,\n    domainContext: {\n      performanceEntry: matchingTiming && toPerformanceEntryRepresentation(matchingTiming),\n      xhr: request.xhr,\n      response: request.response,\n      requestInput: request.input,\n      requestInit: request.init,\n      error: request.error\n    }\n  };\n}\n\nfunction processResourceEntry(entry) {\n  var type = computeResourceKind(entry);\n  var entryMetrics = computePerformanceEntryMetrics(entry);\n  var tracingInfo = computeEntryTracingInfo(entry);\n  var startClocks = relativeToClocks(entry.startTime);\n  var resourceEvent = combine({\n    date: startClocks.timeStamp,\n    resource: {\n      id: generateUUID(),\n      type: type,\n      url: entry.name\n    },\n    type: RumEventType.RESOURCE\n  }, tracingInfo, entryMetrics);\n  return {\n    startTime: startClocks.relative,\n    rawRumEvent: resourceEvent,\n    domainContext: {\n      performanceEntry: toPerformanceEntryRepresentation(entry)\n    }\n  };\n}\n\nfunction computePerformanceEntryMetrics(timing) {\n  return {\n    resource: __assign({\n      duration: computePerformanceResourceDuration(timing),\n      size: computeSize(timing)\n    }, computePerformanceResourceDetails(timing))\n  };\n}\n\nfunction computeRequestTracingInfo(request) {\n  var hasBeenTraced = request.traceId && request.spanId;\n\n  if (!hasBeenTraced) {\n    return undefined;\n  }\n\n  return {\n    _dd: {\n      span_id: request.spanId.toDecimalString(),\n      trace_id: request.traceId.toDecimalString()\n    }\n  };\n}\n\nfunction computeEntryTracingInfo(entry) {\n  return entry.traceId ? {\n    _dd: {\n      trace_id: entry.traceId\n    }\n  } : undefined;\n}\n\nfunction toPerformanceEntryRepresentation(entry) {\n  if (supportPerformanceEntry() && entry instanceof PerformanceEntry) {\n    entry.toJSON();\n  }\n\n  return entry;\n}","map":{"version":3,"sources":["../../../../src/domain/rumEventsCollection/resource/resourceCollection.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { combine, generateUUID, RequestType, ResourceType, toServerDuration, relativeToClocks, } from '@datadog/browser-core';\nimport { supportPerformanceEntry, } from '../../../browser/performanceCollection';\nimport { RumEventType } from '../../../rawRumEvent.types';\nimport { LifeCycleEventType } from '../../lifeCycle';\nimport { matchRequestTiming } from './matchRequestTiming';\nimport { computePerformanceResourceDetails, computePerformanceResourceDuration, computeResourceKind, computeSize, isRequestKind, } from './resourceUtils';\nexport function startResourceCollection(lifeCycle) {\n    lifeCycle.subscribe(LifeCycleEventType.REQUEST_COMPLETED, function (request) {\n        lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, processRequest(request));\n    });\n    lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRY_COLLECTED, function (entry) {\n        if (entry.entryType === 'resource' && !isRequestKind(entry)) {\n            lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, processResourceEntry(entry));\n        }\n    });\n}\nfunction processRequest(request) {\n    var type = request.type === RequestType.XHR ? ResourceType.XHR : ResourceType.FETCH;\n    var matchingTiming = matchRequestTiming(request);\n    var startClocks = matchingTiming ? relativeToClocks(matchingTiming.startTime) : request.startClocks;\n    var correspondingTimingOverrides = matchingTiming ? computePerformanceEntryMetrics(matchingTiming) : undefined;\n    var tracingInfo = computeRequestTracingInfo(request);\n    var resourceEvent = combine({\n        date: startClocks.timeStamp,\n        resource: {\n            id: generateUUID(),\n            type: type,\n            duration: toServerDuration(request.duration),\n            method: request.method,\n            status_code: request.status,\n            url: request.url,\n        },\n        type: RumEventType.RESOURCE,\n    }, tracingInfo, correspondingTimingOverrides);\n    return {\n        startTime: startClocks.relative,\n        rawRumEvent: resourceEvent,\n        domainContext: {\n            performanceEntry: matchingTiming && toPerformanceEntryRepresentation(matchingTiming),\n            xhr: request.xhr,\n            response: request.response,\n            requestInput: request.input,\n            requestInit: request.init,\n            error: request.error,\n        },\n    };\n}\nfunction processResourceEntry(entry) {\n    var type = computeResourceKind(entry);\n    var entryMetrics = computePerformanceEntryMetrics(entry);\n    var tracingInfo = computeEntryTracingInfo(entry);\n    var startClocks = relativeToClocks(entry.startTime);\n    var resourceEvent = combine({\n        date: startClocks.timeStamp,\n        resource: {\n            id: generateUUID(),\n            type: type,\n            url: entry.name,\n        },\n        type: RumEventType.RESOURCE,\n    }, tracingInfo, entryMetrics);\n    return {\n        startTime: startClocks.relative,\n        rawRumEvent: resourceEvent,\n        domainContext: {\n            performanceEntry: toPerformanceEntryRepresentation(entry),\n        },\n    };\n}\nfunction computePerformanceEntryMetrics(timing) {\n    return {\n        resource: __assign({ duration: computePerformanceResourceDuration(timing), size: computeSize(timing) }, computePerformanceResourceDetails(timing)),\n    };\n}\nfunction computeRequestTracingInfo(request) {\n    var hasBeenTraced = request.traceId && request.spanId;\n    if (!hasBeenTraced) {\n        return undefined;\n    }\n    return {\n        _dd: {\n            span_id: request.spanId.toDecimalString(),\n            trace_id: request.traceId.toDecimalString(),\n        },\n    };\n}\nfunction computeEntryTracingInfo(entry) {\n    return entry.traceId ? { _dd: { trace_id: entry.traceId } } : undefined;\n}\nfunction toPerformanceEntryRepresentation(entry) {\n    if (supportPerformanceEntry() && entry instanceof PerformanceEntry) {\n        entry.toJSON();\n    }\n    return entry;\n}\n//# sourceMappingURL=resourceCollection.js.map"]},"metadata":{},"sourceType":"module"}