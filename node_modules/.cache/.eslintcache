[{"C:\\Projects\\React\\heycloud-frontend-new\\src\\index.js":"1","C:\\Projects\\React\\heycloud-frontend-new\\src\\store.js":"2","C:\\Projects\\React\\heycloud-frontend-new\\src\\App.js":"3","C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Profile.js":"4","C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Login.js":"5","C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Vps.js":"6","C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Verify.js":"7","C:\\Projects\\React\\heycloud-frontend-new\\src\\actions\\message.js":"8","C:\\Projects\\React\\heycloud-frontend-new\\src\\helpers\\history.js":"9","C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Dashboard.js":"10","C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Register.js":"11","C:\\Projects\\React\\heycloud-frontend-new\\src\\common\\EventBus.js":"12","C:\\Projects\\React\\heycloud-frontend-new\\src\\common\\AuthVerify.js":"13","C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\ForgotPassword.js":"14","C:\\Projects\\React\\heycloud-frontend-new\\src\\actions\\auth.js":"15","C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Security.js":"16","C:\\Projects\\React\\heycloud-frontend-new\\src\\reducers\\index.js":"17","C:\\Projects\\React\\heycloud-frontend-new\\src\\actions\\types.js":"18","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\Footer.js":"19","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\NavBarSide.js":"20","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\ChangePassword.js":"21","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\NavBarTop.js":"22","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\EarlyFooter.js":"23","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\UserInfo.js":"24","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\RecentTasks.js":"25","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\SendCode.js":"26","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\VpsPanel.js":"27","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\NgrokPanel.js":"28","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\ResetPassword.js":"29","C:\\Projects\\React\\heycloud-frontend-new\\src\\services\\user.service.js":"30","C:\\Projects\\React\\heycloud-frontend-new\\src\\services\\auth.service.js":"31","C:\\Projects\\React\\heycloud-frontend-new\\src\\reducers\\message.js":"32","C:\\Projects\\React\\heycloud-frontend-new\\src\\reducers\\auth.js":"33","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\RecentTaskEntry.js":"34","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\VpsPanelEntry.js":"35","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\NgrokPanelEntry.js":"36","C:\\Projects\\React\\heycloud-frontend-new\\src\\services\\auth-header.js":"37","C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Admin.js":"38","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\RegionEntry.js":"39","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\RegionPanel.js":"40","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\CreateRegion.js":"41"},{"size":1686,"mtime":1641227383986,"results":"42","hashOfConfig":"43"},{"size":426,"mtime":1635887880207,"results":"44","hashOfConfig":"43"},{"size":3174,"mtime":1641220700458,"results":"45","hashOfConfig":"43"},{"size":1333,"mtime":1641217653935,"results":"46","hashOfConfig":"43"},{"size":6868,"mtime":1641220416547,"results":"47","hashOfConfig":"43"},{"size":1159,"mtime":1635887880388,"results":"48","hashOfConfig":"43"},{"size":8512,"mtime":1637911843751,"results":"49","hashOfConfig":"43"},{"size":207,"mtime":1635887880210,"results":"50","hashOfConfig":"43"},{"size":96,"mtime":1635887880229,"results":"51","hashOfConfig":"43"},{"size":2250,"mtime":1641220485748,"results":"52","hashOfConfig":"43"},{"size":14552,"mtime":1637913432167,"results":"53","hashOfConfig":"43"},{"size":350,"mtime":1635887880374,"results":"54","hashOfConfig":"43"},{"size":533,"mtime":1635887880373,"results":"55","hashOfConfig":"43"},{"size":1106,"mtime":1635971885022,"results":"56","hashOfConfig":"43"},{"size":3830,"mtime":1637912190229,"results":"57","hashOfConfig":"43"},{"size":1226,"mtime":1636359698092,"results":"58","hashOfConfig":"43"},{"size":158,"mtime":1635887880227,"results":"59","hashOfConfig":"43"},{"size":572,"mtime":1635887880209,"results":"60","hashOfConfig":"43"},{"size":366,"mtime":1635887880246,"results":"61","hashOfConfig":"43"},{"size":3782,"mtime":1641222274138,"results":"62","hashOfConfig":"43"},{"size":7260,"mtime":1638516399980,"results":"63","hashOfConfig":"43"},{"size":3427,"mtime":1641216905927,"results":"64","hashOfConfig":"43"},{"size":1124,"mtime":1636730083852,"results":"65","hashOfConfig":"43"},{"size":3704,"mtime":1641219739477,"results":"66","hashOfConfig":"43"},{"size":4166,"mtime":1641216818513,"results":"67","hashOfConfig":"43"},{"size":7113,"mtime":1637911867094,"results":"68","hashOfConfig":"43"},{"size":4365,"mtime":1635887880233,"results":"69","hashOfConfig":"43"},{"size":4062,"mtime":1636373375041,"results":"70","hashOfConfig":"43"},{"size":10540,"mtime":1636107532473,"results":"71","hashOfConfig":"43"},{"size":1463,"mtime":1641222874106,"results":"72","hashOfConfig":"43"},{"size":1413,"mtime":1641216339962,"results":"73","hashOfConfig":"43"},{"size":353,"mtime":1635887880224,"results":"74","hashOfConfig":"43"},{"size":1044,"mtime":1635887880225,"results":"75","hashOfConfig":"43"},{"size":348,"mtime":1635887880245,"results":"76","hashOfConfig":"43"},{"size":2666,"mtime":1635887880235,"results":"77","hashOfConfig":"43"},{"size":404,"mtime":1636361917476,"results":"78","hashOfConfig":"43"},{"size":222,"mtime":1635887880215,"results":"79","hashOfConfig":"43"},{"size":2986,"mtime":1641228734103,"results":"80","hashOfConfig":"43"},{"size":533,"mtime":1641223810793,"results":"81","hashOfConfig":"43"},{"size":4505,"mtime":1641228848082,"results":"82","hashOfConfig":"43"},{"size":2367,"mtime":1641228799028,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8o3ngv",{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\React\\heycloud-frontend-new\\src\\index.js",["180"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\store.js",[],["181","182"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\App.js",["183","184"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Profile.js",["185","186","187"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Login.js",["188"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Vps.js",["189","190"],"import { React, useCallback, useState } from 'react'\nimport NavbarSide from '../components/NavBarSide';\nimport NavbarTop from \"../components/NavBarTop\"\nimport Footer from '../components/Footer';\nimport VpsPanel from '../components/VpsPanel';\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\n\nconst VPS = () => {\n    const { user: currentUser } = useSelector((state) => state.auth);\n    if (!currentUser) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n        <div id=\"wrapper\">\n            <NavbarSide/>\n            <div class=\"d-flex flex-column\" id=\"content-wrapper\">\n                <div id=\"content\">\n                    <NavbarTop user={currentUser.user}/>\n                    <div class=\"container-fluid\">\n                        <div class=\"d-sm-flex justify-content-between align-items-center mb-4\">\n                            <h3 class=\"text-dark mb-0\">Profile</h3>\n                        </div>\n                        <VpsPanel user={currentUser.user}/>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        </div>\n    )\n}\n\nexport default VPS\n","C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Verify.js",["191","192","193","194","195","196","197","198","199","200"],"import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Link, Redirect } from \"react-router-dom\";\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport { parsePhoneNumber } from 'libphonenumber-js'\nimport querySearch from \"stringquery\";\nimport EarlyFooter from \"../components/EarlyFooter\";\n\n\n\nimport { register, verify } from \"../actions/auth\";\nimport { setMessage } from \"../actions/message\";\n\nimport logo from './../assets/img/logos/logo-white-small.png'\nimport illustration from './../assets/img/illustrations/secure1.png'\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        This field is required!\n      </div>\n    );\n  }\n};\n\n\nconst Verify = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [code, setCode] = useState(\"\");\n  const [phone, setPhone] = useState((() => {\n    if (querySearch(props.location.search) != \"\") {\n      return querySearch(props.location.search).phone\n    } else {\n      return \"\"\n    }\n  })());\n  const [successful, setSuccessful] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [phoneValidMessage, setPhoneValidMessage] = useState(\"initial\")\n  const { isLoggedIn } = useSelector(state => state.auth);\n  const { message } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const onChangePhone = value => {\n    setPhone(value)\n  };\n\n  const onChangeCode = (e) => {\n    const code = e.target.value;\n    setCode(code);\n  };\n\n\n  const handleVerify = (e) => {\n    e.preventDefault();\n    setSuccessful(false);\n\n    setLoading(true);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0 && phoneValidMessage == \"\") {\n      dispatch(verify(phone,code))\n        .then(() => {\n          setSuccessful(true);\n          props.history.push(\"/login\");\n          window.location.reload();\n        })\n        .catch(() => {\n          setSuccessful(false);\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n    \n  };\n\n\n  const validateNumber = (value) => {\n    if(value === '' && phoneValidMessage != \"initial\"){\n      return 'Please enter phone number'\n    }\n    try {\n      const num = parsePhoneNumber(value)\n      if (!num.isValid()) {\n        setPhoneValidMessage('Invalid phone number.')\n        return\n      }\n    } catch (e) {\n      if (phoneValidMessage == \"initial\") {\n        return true;\n      }\n      setPhoneValidMessage('This field is required')\n      return\n    }\n    setPhoneValidMessage('');\n    return true;\n  }\n  \n\n  if (isLoggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <div className=\"bg-gradient-primary\" style={{'margin': '0','height': '100%','width': '100%','min-height': '100%'}}>\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-9 col-lg-12 col-xl-10\">\n          <div className=\"card shadow-lg o-hidden border-0 my-5\">\n              <div className=\"card-body p-0\">\n                  <div className=\"row\">\n                      <div className=\"col-lg-5 col-xl-6 d-none d-lg-flex\">\n                          <div className=\"flex-grow-1 align-items-center bg-register-image\" style={{'background-size': 'contain','background-image': `url(${illustration})`, 'background-repeat': 'no-repeat'}}></div>\n                      </div>\n                      <div className=\"col-lg-7 col-xl-6 offset-xl-0\">\n                          <div className=\"align-items-center align-content-center p-5\">\n                              <div className=\"text-center\">\n                                  <h4 className=\"text-dark mb-4\">Verify your Account!</h4>\n                              </div>\n                              <Form className=\"user\" onSubmit={handleVerify} ref={form} style={{margin: '18px'}}>\n                                  <div className=\"mb-3\">\n                                    <PhoneInput\n                                      isValid={(value, country) => {\n                                        return validateNumber(`+${value}`)\n                                      }}\n                                      enableSearch\n                                      disableSearchIcon\n                                      value={phone}\n                                      onChange={onChangePhone}\n                                      inputClass=\"form-control  form-control-user w-100\"\n                                      inputStyle={{paddingLeft: '18%', height: '20%', borderColor: \"#d1d3e2\"}}\n                                      dropdownStyle={{textAlign: 'left', color: 'black'}}\n                                      buttonStyle={{'border-radius': '10rem', color: 'unset !important', 'background-color': 'unset !important', padding: '2%', transition: 'none'}}\n                                      buttonClass=\"btn btn-link btn-sm   :hover{color: unset !important; background-color: unset !important;}\"\n                                      id=\"exampleInputPhone\"\n                                      placeholder=\"Phone\"\n                                    />\n                                    {(() => {\n                                      if (phoneValidMessage != \"\" && phoneValidMessage != \"initial\") {\n                                        return (\n                                          <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n                                          {phoneValidMessage}\n                                        </div>\n                                        )\n                                      } else {\n                                        return \"\"\n                                      }\n                                    })()}\n                                  </div>\n                                  <div className=\"mb-3\">\n                                    <Input\n                                    id=\"exampleInputCode\"\n                                    type=\"text\"\n                                    className=\"form-control  form-control-user\"\n                                    placeholder=\"Code\"\n                                    name=\"code\"\n                                    value={code}\n                                    onChange={onChangeCode}\n                                    validations={[required]}\n                                    />\n                                  </div>\n                                    \n                                  \n                                  <button className=\"btn btn-primary d-block btn-user w-100\" type=\"submit\" disabled={loading}>Verify Account</button>\n                                  {loading && (\n                                    <span className=\"spinner-border spinner-border-sm\" style={{'margin':'auto'}}></span>\n                                  )}\n                                  <hr></hr>\n                                  {message && (\n                                    <div className=\"form-group\">\n                                      <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                                        {message}\n                                      </div>\n                                    </div>\n                                  )}\n                                <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                                </Form>\n                                <div className=\"text-center\"><Link to=\"/forgot-password\" className=\"small\">Forgot Password?</Link></div>\n                                <div className=\"text-center d-xl-flex justify-content-xl-center\"><Link to=\"/login\" className=\"small\">Already have an account? Login!</Link></div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n        </div>\n          <EarlyFooter />                          \n          <script src=\"assets/bootstrap/js/bootstrap.min.js\"></script>\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Swiper/6.4.8/swiper-bundle.min.js\"></script>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Verify;","C:\\Projects\\React\\heycloud-frontend-new\\src\\actions\\message.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\helpers\\history.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Dashboard.js",["201","202"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Register.js",["203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NumberFormat from 'react-number-format';\nimport { Link, Redirect } from \"react-router-dom\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport EarlyFooter from \"../components/EarlyFooter\";\nimport { isEmail } from \"validator\";\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport { register } from \"../actions/auth\";\nimport { setMessage } from \"../actions/message\";\nimport { parsePhoneNumber } from 'libphonenumber-js'\nimport GifLoader from 'react-gif-loader';\nimport Preloader from '../assets/img/logos/logo-preloader.gif'\nimport illustration from './../assets/img/illustrations/cloud1.png'\nimport BarLoader from 'react-bar-loader'\n\n\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst checked = (checked) => {\n  if (!checked) {\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        This field is required!\n      </div>\n    );\n  }\n};\n\n\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 8 || value.length > 40) {\n    passwordcheck = value\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        The password must be between 8 and 40 characters. \n      </div>\n    );\n  }\n};\n\nlet passwordcheck = \"\"\nconst matchcreatepassword = (value) => {\n  if (value != passwordcheck) {\n    passwordcheck = value\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        \n      </div>\n    );\n  }\n};\n\n\nconst matchpassword = (value) =>{\n  if (value.toString() !== passwordcheck) {\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        Passwords dont match!\n      </div> \n    );\n  }\n};\n\n\n\nconst vphone = (value) =>{\n  const regEx = /^\\+[1-9]\\d{10,14}$/;\n  if (regEx.test(value) == false) {\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        Invalid phone number. Use format: +41791111213\n      </div> \n    );\n  }\n};\n\nconst Register = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [phoneValidMessage, setPhoneValidMessage] = useState(\"initial\")\n  const [name, setName] = useState(\"\");\n  const [prename, setPrename] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [phone, setPhone] = useState(null);\n  const [successful, setSuccessful] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const { isLoggedIn } = useSelector(state => state.auth);\n  const { message } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const stateRef = useRef();\n\n  const onChangePhone = value => {\n    setPhone(value)\n  };\n\n  \n\n  const onChangeName = (e) => {\n    const name = e.target.value;\n    setName(name);\n  };\n\n  const onChangePrename = (e) => {\n    const prename = e.target.value;\n    setPrename(prename);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const onChangePassword2 = (e) => {\n    const password2 = e.target.value;\n    setPassword2(password2);\n  };\n\n  \n\n  const validateNumber = (value) => {\n    if(value === '' && phoneValidMessage != \"initial\"){\n      return 'Please enter phone number'\n    }\n    try {\n      const num = parsePhoneNumber(value)\n      if (!num.isValid()) {\n        setPhoneValidMessage('Invalid phone number.')\n        return\n      }\n    } catch (e) {\n      if (phoneValidMessage == \"initial\") {\n        return true;\n      }\n      setPhoneValidMessage('This field is required')\n      return\n    }\n    setPhoneValidMessage('');\n    return true;\n  }\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    setSuccessful(false);\n\n    setLoading(true);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0 && phoneValidMessage == \"\") {\n      dispatch(register(name, prename, email, password, phone))\n        .then(() => {\n          setSuccessful(true);\n          props.history.push({\n            pathname: '/verify',\n            search:'phone=' + phone,\n          });\n        })\n        .catch(() => {\n          setSuccessful(false);\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n    \n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <div className=\"bg-gradient-primary\" style={{'margin': '0','height': '100%','width': '100%','min-height': '100%'}}>\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-9 col-lg-12 col-xl-10\">\n          <div className=\"card shadow-lg o-hidden border-0 my-5\">\n              <div className=\"card-body p-0\">\n                  <div className=\"row\">\n                      <div className=\"col-lg-5 col-xl-6 d-none d-lg-flex\">\n                          <div className=\"flex-grow-1 align-items-center bg-register-image\" style={{'background-size': 'contain','background-image': `url(${illustration})`, 'background-repeat': 'no-repeat'}}></div>\n                      </div>\n                      <div className=\"col-lg-7 col-xl-6 offset-xl-0\">\n                          <div className=\"align-items-center align-content-center p-5\">\n                              <div className=\"text-center\">\n                                  <h4 className=\"text-dark mb-4\">Create your heycloud account.</h4>\n                              </div>\n                              <Form className=\"user\" onSubmit={handleRegister} ref={form} style={{margin: '18px'}}>\n                                  <div className=\"row mb-3\">\n                                    <div className=\"col-sm-6 mb-3 mb-sm-0\">\n                                      <Input\n                                      id=\"exampleFirstName\"\n                                      type=\"text\"\n                                      className=\"form-control  form-control-user\"\n                                      name=\"firstname\"\n                                      placeholder=\"First Name\"\n                                      value={prename}\n                                      onChange={onChangePrename}\n                                      validations={[required]}\n                                      />\n                                    </div> \n                                    <div className=\"col-sm-6\">\n                                      <Input\n                                      id=\"exampleLastName\"\n                                      type=\"text\"\n                                      className=\"form-control form-control-user\"\n                                      placeholder=\"Last Name\"\n                                      name=\"lastname\"\n                                      value={name}\n                                      onChange={onChangeName}\n                                      validations={[required]}\n                                      />\n                                    </div> \n                                  </div>\n                                  <div className=\"mb-3\">\n                                    <Input\n                                    id=\"exampleInputEmail\"\n                                    type=\"email\"\n                                    className=\"form-control form-control-user\"\n                                    placeholder=\"Email\"\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={onChangeEmail}        \n                                    validations={[required]}\n                                    />\n                                  </div>\n                                  <div className=\"mb-3\">\n                                  <PhoneInput\n                                    isValid={(value, country) => {\n                                      return validateNumber(`+${value}`)\n                                    }}\n                                    enableSearch\n                                    disableSearchIcon\n                                    value={phone}\n                                    onChange={onChangePhone}\n                                    inputClass=\"form-control  form-control-user w-100\"\n                                    inputStyle={{paddingLeft: '18%', height: '20%', borderColor: \"#d1d3e2\"}}\n                                    dropdownStyle={{textAlign: 'left', color: 'black'}}\n                                    buttonStyle={{'border-radius': '10rem', color: 'unset !important', 'background-color': 'unset !important', padding: '2%', transition: 'none'}}\n                                    buttonClass=\"btn btn-link btn-sm   :hover{color: unset !important; background-color: unset !important;}\"\n                                    id=\"exampleInputPhone\"\n                                    placeholder=\"Phone\"\n                                  />\n                                  {(() => {\n                                    if (phoneValidMessage != \"\" && phoneValidMessage != \"initial\") {\n                                      return (\n                                        <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n                                        {phoneValidMessage}\n                                      </div>\n                                      )\n                                    } else {\n                                      return \"\"\n                                    }\n                                  })()}\n                                  </div>\n                                  <div className=\"row mb-3\">\n                                      <div className=\"col-sm-6 mb-3 mb-sm-0\">\n                                        <Input\n                                          id=\"exampleInputPassword\"\n                                          type=\"password\"\n                                          className=\"form-control form-control-user\"\n                                          name=\"password\"\n                                          placeholder=\"Password\"\n                                          value={password}\n                                          onChange={onChangePassword}\n                                          validations={[vpassword, matchcreatepassword, required]}\n                                          />\n                                      </div>\n                                      <div className=\"col-sm-6\">\n                                        <Input\n                                        id=\"exampleInputPassword\"\n                                        type=\"password\"\n                                        className=\"form-control form-control-user\"\n                                        name=\"password\"\n                                        value={password2}\n                                        placeholder=\"Repeat password\"\n                                        onChange={onChangePassword2}\n                                        validations={[vpassword, matchpassword, required]}\n                                        />\n                                      </div>\n                                  </div>\n                                  <div className=\"row mb-3\">\n                                      <label>\n                                      I agree to the <a  href=\"https://heycloud.ch/terms\">Terms & Conditions</a> \n                                      </label>\n                                      <Input\n                                        name=\"agree\"            \n                                        type=\"checkbox\"\n                                        required\n                                      />\n                                  </div>\n                                  <button className=\"btn btn-primary d-block btn-user w-100\" type=\"submit\" disabled={loading}>Create account</button>\n                                  {loading && (\n                                    <>\n                                      <BarLoader color=\"#1D8BF1\" height=\"2\" style={{'padding-top':'5px'}}/>\n                                    </>\n                                  )}\n                                  <hr></hr>\n                                  {message && (\n                                    <div className=\"form-group\">\n                                      <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                                        {message}\n                                      </div>\n                                    </div>\n                                  )}\n                                <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                                </Form>\n                                <div className=\"text-center\"><Link to=\"/forgot-password\" className=\"small\">Forgot password?</Link></div>\n                                <div className=\"text-center d-xl-flex justify-content-xl-center\"><Link to=\"/login\" className=\"small\">Already have an account? Login!</Link></div>\n                                <div className=\"text-center d-xl-flex justify-content-xl-center\"><a className=\"small\" href=\"https://heycloud.ch/terms\">Terms & Conditions</a></div>\n                                <div className=\"text-center d-xl-flex justify-content-xl-center\"><a className=\"small\" href=\"https://heycloud.ch/privacy\">Privacy</a></div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n        </div>\n        <EarlyFooter />\n        <script src=\"assets/bootstrap/js/bootstrap.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Swiper/6.4.8/swiper-bundle.min.js\"></script>\n      </div>                              \n    </div>\n  </div>\n  );\n};\n\nexport default Register;","C:\\Projects\\React\\heycloud-frontend-new\\src\\common\\EventBus.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\common\\AuthVerify.js",["218"],"import React from \"react\";\nimport { isExpired, decodeToken } from \"react-jwt\";\nimport moment from 'moment';\n\n\nconst AuthVerify = (props) => {\n  const user = JSON.parse(localStorage.getItem(\"user\")) ;\n  if (user) {\n    const decodedToken = (decodeToken(user.access_token))\n    var now = new Date();\n    var tokenExpire = new Date(decodedToken.exp);\n    console.log(moment(tokenExpire).format('MMMM Do YYYY, h:mm:ss a'))\n    if (tokenExpire < now) {\n      props.logOut();\n    }\n  }\n\n  return <div></div>;\n};\n\nexport default AuthVerify;","C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\ForgotPassword.js",["219","220","221"],"import React from 'react'\nimport SendCode from '../components/SendCode'\nimport ResetPassword from '../components/ResetPassword'\nimport { Link } from \"react-router-dom\";\nimport logo from './../assets/img/logos/logo-white-small.png'\nimport EarlyFooter from '../components/EarlyFooter';\n\nconst ForgotPassword = (view, props) => {\n    return (\n    <div className=\"bg-gradient-primary\" style={{'margin': '0','height': '100%','width': '100%','min-height': '100%'}}>\n        <div className=\"container\">\n            { (() => {\n                if (view.view == \"send-code\") {\n                    return <SendCode props= {props}/>\n                } else {\n                    return <ResetPassword />\n                }\n            })()}\n            <div className=\"text-center d-xl-flex justify-content-xl-center\">\n            <EarlyFooter />\n            <script src=\"assets/bootstrap/js/bootstrap.min.js\"></script>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Swiper/6.4.8/swiper-bundle.min.js\"></script>       \n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default ForgotPassword\n","C:\\Projects\\React\\heycloud-frontend-new\\src\\actions\\auth.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Security.js",["222","223"],"import { React, useCallback, useState } from 'react'\r\nimport NavbarSide from '../components/NavBarSide';\r\nimport NavbarTop from \"../components/NavBarTop\"\r\nimport Footer from '../components/Footer';\r\nimport NgrokPanel from '../components/NgrokPanel';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst VPS = () => {\r\n    const { user: currentUser } = useSelector((state) => state.auth);\r\n    if (!currentUser) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n        <div id=\"wrapper\">\r\n            <NavbarSide/>\r\n            <div class=\"d-flex flex-column\" id=\"content-wrapper\">\r\n                <div id=\"content\">\r\n                    <NavbarTop user={currentUser.user}/>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"d-sm-flex justify-content-between align-items-center mb-4\">\r\n                            <h3 class=\"text-dark mb-0\">Security</h3>\r\n                        </div>\r\n                        <NgrokPanel user={currentUser.user}/>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VPS\r\n","C:\\Projects\\React\\heycloud-frontend-new\\src\\reducers\\index.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\actions\\types.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\Footer.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\NavBarSide.js",["224","225","226"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\ChangePassword.js",["227","228","229","230","231","232","233","234"],"import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport UserService from \"../services/user.service\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changePassword } from \"../actions/auth\";\n\n\n\n    const required = (value) => {\n        if (!value) {\n        return (\n            <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n            This field is required!\n            </div>\n        );\n        }\n    };\n\n\n  const vpassword = (value) => {\n    if (value.length < 8 || value.length > 40) {\n      passwordcheck = value\n      return (\n        <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n          The password must be between 8 and 40 characters. \n        </div>\n      );\n    }\n  };\n  \n  let passwordcheck = \"\"\n  const matchcreatepassword = (value) => {\n    if (value != passwordcheck) {\n      passwordcheck = value\n      return null\n    }\n  };\n  \n  \n  const matchpassword = (value) =>{\n    if (value.toString() !== passwordcheck) {\n      return (\n        <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n          Passwords dont match!\n        </div> \n      );\n    }\n  };\n\nconst ChangePassword = () => {\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const onChangeOldPassword = (e) => {\n        const oldpassword = e.target.value;\n        setOldPassword(oldpassword);\n    };\n\n    const onChangePassword = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    };\n    \n    const onChangePassword2 = (e) => {\n    const password2 = e.target.value;\n    setPassword2(password2);\n    };\n\n    const [oldpassword, setOldPassword] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const [content, setContent] = useState([]);\n    const [reload, setReload] = useState(false);\n    const [successful, setSuccessful] = useState(false);\n    const { isLoggedIn } = useSelector(state => state.auth);\n    const { message } = useSelector(state => state.message);\n    const dispatch = useDispatch();\n    \n    const handleChangepassword = (e) => {\n      e.preventDefault();\n      setSuccessful(false);\n  \n      setLoading(true);\n      form.current.validateAll();\n  \n      if (checkBtn.current.context._errors.length === 0) {\n        dispatch(changePassword(oldpassword, password))\n          .then(() => {\n            setSuccessful(true);\n            setLoading(false);\n          })\n          .catch(() => {\n            setSuccessful(false);\n            setLoading(false);\n          });\n      } else {\n        setLoading(false);\n      }\n        \n      };\n    return (\n        <div className=\"card shadow mb-4\">\n            <div className=\"card-header d-flex justify-content-between align-items-center\">\n                <h6 className=\"text-primary fw-bold m-0\">Password</h6>\n            </div>\n            <div className=\"card-body\">\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <Form onSubmit={handleChangepassword} ref={form}>\n                            <div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <tbody>\n                                        <td><span style={{fontWeight: 'bold'}}>Old password</span></td>\n                                        <td>\n                                            <Input\n                                            id=\"exampleInputPassword\"\n                                            type=\"password\"\n                                            className=\"form-control form-control-user\"\n                                            name=\"password\"\n                                            placeholder=\"Password\"\n                                            value={oldpassword}\n                                            onChange={onChangeOldPassword}\n                                            validations={[required, vpassword]}\n                                            />   \n                                        </td>\n                                        <tr></tr>\n                                        <td><span style={{fontWeight: 'bold'}}>New password</span></td>\n                                        <td><Input\n                                            id=\"exampleInputPassword\"\n                                            type=\"password\"\n                                            className=\"form-control form-control-user\"\n                                            name=\"password\"\n                                            placeholder=\"Password\"\n                                            value={password}\n                                            onChange={onChangePassword}\n                                            validations={[required, vpassword, matchcreatepassword]}\n                                            />\n                                        </td>\n                                        <tr></tr>\n                                        <td><span style={{fontWeight: 'bold'}}>Repeat new password</span></td>\n                                        <td><Input\n                                            id=\"exampleInputPassword\"\n                                            type=\"password\"\n                                            className=\"form-control form-control-user\"\n                                            name=\"password2\"\n                                            value={password2}\n                                            placeholder=\"Repeat password\"\n                                            onChange={onChangePassword2}\n                                            validations={[required, vpassword, matchpassword]}\n                                            />\n                                        </td>\n                                    </tbody>\n                                </table>\n                                <button className=\"btn btn-primary\" type=\"submit\" disabled={loading}>Change password</button>\n                                {message && (\n                                  <div className=\"form-group\">\n                                    {loading && (\n                                        <span className=\"spinner-border spinner-border-sm\"></span>\n                                    )}\n                                    <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\" style={{'margin-top':'5px'}}>\n                                      {message}\n                                    </div>\n                                  </div>\n                                )}  \n                            </div>\n                            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                        </Form>                        \n                    </div>\n                    <div className=\"col-sm\"/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChangePassword\n","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\NavBarTop.js",["235","236"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\EarlyFooter.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\UserInfo.js",["237"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\RecentTasks.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\SendCode.js",["238","239","240","241","242","243","244","245"],"import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { parsePhoneNumber } from 'libphonenumber-js'\nimport { Redirect, Link } from \"react-router-dom\";\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\n\n\nimport { sendCode } from \"../actions/auth\";\n\nimport illustration from './../assets/img/illustrations/cluster1.png'\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        This field is required!\n      </div>\n    );\n  }\n};\n\n\nconst SendCode = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [phone, setPhone] = useState(null);\n  const [successful, setSuccessful] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [phoneValidMessage, setPhoneValidMessage] = useState(\"initial\")\n\n  const { isLoggedIn } = useSelector(state => state.auth);\n  const { message } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const onChangePhone = value => {\n    setPhone(value)\n  };\n\n\n\n  \n\n  \n\n  const handleSendCode = (e) => {\n    e.preventDefault();\n    setSuccessful(false);\n\n    setLoading(true);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0 && phoneValidMessage == \"\") {\n      dispatch(sendCode(phone))\n        .then(() => {\n          setSuccessful(true);\n          setLoading(false);\n          props.history.push({\n            pathname: '/reset-password',\n            search:'phone=' + phone,\n          });\n        })\n        .catch(() => {\n          setSuccessful(true);\n          setLoading(false);\n          <Redirect to=\"/reset-password\"/>\n        })\n    } else {\n      setSuccessful(true)\n      setLoading(false);\n      props.history.push({\n        pathname: '/reset-password',\n        search:'phone=' + phone,\n      });\n    }\n    \n  };\n\n  const validateNumber = (value) => {\n    if(value === '' && phoneValidMessage != \"initial\"){\n      return 'Please enter phone number'\n    }\n    try {\n      const num = parsePhoneNumber(value)\n      if (!num.isValid()) {\n        setPhoneValidMessage('Invalid phone number.')\n        return\n      }\n    } catch (e) {\n      if (phoneValidMessage == \"initial\") {\n        return true;\n      }\n      setPhoneValidMessage('This field is required')\n      return\n    }\n    setPhoneValidMessage('');\n    return true;\n  }\n  \n  return (\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-9 col-lg-12 col-xl-10\">\n          <div className=\"card shadow-lg o-hidden border-0 my-5\">\n              <div className=\"card-body p-0\">\n                  <div className=\"row\">\n                      <div className=\"col-lg-5 col-xl-6 d-none d-lg-flex\">\n                          <div className=\"flex-grow-1 align-items-center bg-register-image\" style={{'background-size': 'contain','background-image': `url(${illustration})`, 'background-repeat': 'no-repeat'}}></div>\n                      </div>\n                      <div className=\"col-lg-7 col-xl-6 offset-xl-0\">\n                          <div className=\"align-items-center align-content-center p-5\">\n                              <div className=\"text-center\">\n                              <h4 class=\"text-dark mb-2\">Forgot Your Password?</h4>\n                                        <p class=\"mb-4\">We get it, stuff happens. Just enter your phone number below and we'll send you a code to start resetting your password!</p>\n                              </div>\n                              <Form className=\"user\" onSubmit={handleSendCode} ref={form} style={{margin: '18px'}}>\n                                  <div className=\"mb-3\">\n                                  <PhoneInput\n                                    isValid={(value, country) => {\n                                      return validateNumber(`+${value}`)\n                                    }}\n                                    enableSearch\n                                    disableSearchIcon\n                                    value={phone}\n                                    onChange={onChangePhone}\n                                    inputClass=\"form-control  form-control-user w-100\"\n                                    inputStyle={{paddingLeft: '18%', height: '20%', borderColor: \"#d1d3e2\"}}\n                                    dropdownStyle={{textAlign: 'left', color: 'black'}}\n                                    buttonStyle={{'border-radius': '10rem', color: 'unset !important', 'background-color': 'unset !important', padding: '2%', transition: 'none'}}\n                                    buttonClass=\"btn btn-link btn-sm   :hover{color: unset !important; background-color: unset !important;}\"\n                                    id=\"exampleInputPhone\"\n                                    placeholder=\"Phone\"\n                                  />\n                                  {(() => {\n                                    if (phoneValidMessage != \"\" && phoneValidMessage != \"initial\") {\n                                      return (\n                                        <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n                                        {phoneValidMessage}\n                                      </div>\n                                      )\n                                    } else {\n                                      return \"\"\n                                    }\n                                  })()}\n                                  </div>\n                                    \n                                  \n                                  <button className=\"btn btn-primary d-block btn-user w-100\" type=\"submit\" disabled={loading}>Send code</button>\n                                  {loading && (\n                                    <span className=\"spinner-border spinner-border-sm\" style={{'margin':'auto'}}></span>\n                                  )}\n                                  <hr></hr>\n                                  {message && (\n                                    <div className=\"form-group\">\n                                      <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                                        {message}\n                                      </div>\n                                    </div>\n                                  )}\n                                <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                                </Form>\n                                <div className=\"text-center d-xl-flex justify-content-xl-center\"><Link to=\"/login\" className=\"small\">Already have an account? Login!</Link></div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n        </div>\n        </div>\n\n  );\n};\n\nexport default SendCode;","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\VpsPanel.js",["246","247","248","249","250"],"import React, { useState, useEffect } from \"react\";\nimport { Dropdown, FormText } from \"react-bootstrap\";\n\nimport UserService from \"../services/user.service\";\nimport VpsPanelEntry from \"./VpsPanelEntry\";\n\nconst VpsPanel = () => {\n  const [content, setContent] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [reload, setReload] = useState(false);\n\n  \n\n  useEffect(() => {\n    setLoading(true);\n    UserService.listVps().then(\n      (response) => {\n        console.log(response.data)\n        setContent(response.data)\n        setLoading(false);\n        setReload(false)\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, [reload]);\n  return (\n    <div className=\"row\">\n        <div className=\"col-lg-11 col-xl-12\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header d-flex justify-content-between align-items-center\">\n                    <h6 className=\"text-primary fw-bold m-0\">My Virtual Private Servers</h6>\n                    <div className=\"dropdown no-arrow\"><button className=\"btn btn-link btn-sm dropdown-toggle\" aria-expanded=\"false\" data-bs-toggle=\"dropdown\" type=\"button\"></button>\n                        <div className=\"dropdown-menu shadow dropdown-menu-end animated--fade-in\">\n                            <p className=\"text-center dropdown-header\">dropdown header:</p><a className=\"dropdown-item\" href=\"#\">&nbsp;Action</a><a className=\"dropdown-item\" href=\"#\">&nbsp;Another action</a>\n                            <div className=\"dropdown-divider\"></div><a className=\"dropdown-item\" href=\"#\">&nbsp;Something else here</a>\n                        </div>\n                    </div><a className=\"btn btn-primary\" role=\"button\" href=\"createvps.html\">Create</a>\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                    <table className=\"table\">\n                            {(() => {\n                            if (content){\n                                return (\n                                  <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Status</th>\n                                        <th>RAM</th>\n                                        <th>CPU</th>\n                                        <th>Disk</th>\n                                        <th>Hourly cost</th>\n                                        <th>Created at</th>\n                                        <th></th>\n                                    </tr>\n                                  </thead>\n                                ) \n                            } else {\n                              return null\n                            }\n                            })()}\n                            <tbody>\n                            {loading && (\n                                      <span className=\"spinner-border spinner-border-sm\"></span>\n                            )}\n                                  {(() => {\n                                    if (content){\n                                        return (\n                                          content.map ((vps => \n                                          <VpsPanelEntry name={vps.name} createdAt={vps.createdAt} power={vps.isOn} is_creating={vps.isCreating} ram={vps.ram} cpu={vps.cpu} storage={vps.storage} costHourly={vps.costHourly}/>\n                                        )))  \n                                    } else {\n                                      return (\n                                      <div>\n                                        <br/>\n                                        <h6 className=\"text-primary fw-bold m-0\">No recent tasks found.</h6>\n                                      </div>\n                                      )\n                                    }\n                                  })()}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  );\n};\n\nexport default VpsPanel;\n","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\NgrokPanel.js",["251","252","253","254","255"],"import React, { useState, useEffect } from \"react\";\nimport { Dropdown, FormText } from \"react-bootstrap\";\n\nimport UserService from \"../services/user.service\";\nimport NgrokPanelEntry from \"./NgrokPanelEntry\";\n\nconst NgrokPanel = () => {\n  const [content, setContent] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [reload, setReload] = useState(false);\n\n  \n\n  useEffect(() => {\n    setLoading(true);\n    UserService.listNgrokTokens().then(\n      (response) => {\n        console.log(response.data)\n        setContent(response.data)\n        setLoading(false);\n        setReload(false)\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, [reload]);\n  return (\n    <div className=\"row\">\n        <div className=\"col-lg-11 col-xl-12\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header d-flex justify-content-between align-items-center\">\n                    <h6 className=\"text-primary fw-bold m-0\">My ngrok tokens</h6>\n                    <div className=\"dropdown no-arrow\"><button className=\"btn btn-link btn-sm dropdown-toggle\" aria-expanded=\"false\" data-bs-toggle=\"dropdown\" type=\"button\"></button>\n                        <div className=\"dropdown-menu shadow dropdown-menu-end animated--fade-in\">\n                            <p className=\"text-center dropdown-header\">dropdown header:</p><a className=\"dropdown-item\" href=\"#\">&nbsp;Action</a><a className=\"dropdown-item\" href=\"#\">&nbsp;Another action</a>\n                            <div className=\"dropdown-divider\"></div><a className=\"dropdown-item\" href=\"#\">&nbsp;Something else here</a>\n                        </div>\n                    </div><a className=\"btn btn-primary\" role=\"button\" href=\"createvps.html\">Create</a>\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                    <table className=\"table\">\n                            {(() => {\n                            if (content){\n                                return (\n                                  <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Assinged controller</th>\n                                        <th>Created at</th>\n                                    </tr>\n                                  </thead>\n                                ) \n                            } else {\n                              return null\n                            }\n                            })()}\n                            <tbody>\n                            {loading && (\n                                      <span className=\"spinner-border spinner-border-sm\"></span>\n                            )}\n                                  {(() => {\n                                    if (!content){\n                                        return (\n                                          content.map ((ngrok_token => \n                                          <NgrokPanelEntry name={ngrok_token.name} createdAt={ngrok_token.createdAt} assingedController={ngrok_token.controllerName}/>\n                                        )))  \n                                    } else {\n                                      return (\n                                      <div>\n                                        <br/>\n                                        <h6 className=\"text-primary fw-bold m-0\">No ngrok tokens found</h6>\n                                      </div>\n                                      )\n                                    }\n                                  })()}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  );\n};\n\nexport default NgrokPanel;\n","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\ResetPassword.js",["256","257","258","259","260","261","262"],"import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Redirect, Link } from \"react-router-dom\";\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { parsePhoneNumber } from 'libphonenumber-js'\nimport querySearch from \"stringquery\";\n\n\nimport { resetPassword } from \"../actions/auth\";\n\nimport illustration from './../assets/img/illustrations/cluster2.png'\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        This field is required!\n      </div>\n    );\n  }\n};\n\nlet passwordcheck = \"\"\nconst matchcreatepassword = (value) => {\n  if (value != passwordcheck) {\n    passwordcheck = value\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        \n      </div>\n    );\n  }\n};\n\n\nconst matchpassword = (value) =>{\n  if (value.toString() !== passwordcheck) {\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        Passwords dont match!\n      </div> \n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 8 || value.length > 40) {\n    passwordcheck = value\n    return (\n      <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n        The password must be between 8 and 40 characters. \n      </div>\n    );\n  }\n};\n\nconst ResetPassword = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [phoneValidMessage, setPhoneValidMessage] = useState(\"initial\")\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [phone, setPhone] = useState((() => {\n    if (querySearch(props.location.search) != \"\") {\n      return querySearch(props.location.search).phone\n    } else {\n      return \"\"\n    }\n  })());\n  const [successful, setSuccessful] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const { isLoggedIn } = useSelector(state => state.auth);\n  const { message } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const onChangePhone = value => {\n    setPhone(value)\n  };\n\n  const onChangeCode = (e) => {\n    const code = e.target.value;\n    setCode(code);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const onChangePassword2 = (e) => {\n    const password2 = e.target.value;\n    setPassword2(password2);\n  };\n\n  const handleResetPassword = (e) => {\n    e.preventDefault();\n    setSuccessful(false);\n\n    setLoading(true);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0 && phoneValidMessage == \"\") {\n      dispatch(resetPassword(phone))\n        .then(() => {\n          setSuccessful(true);\n          global.window && (global.window.location.href = '/dashboard');\n        })\n        .catch(() => {\n          setSuccessful(false);\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n    \n  };\n\n  const validateNumber = (value) => {\n    if(value === '' && phoneValidMessage != \"initial\"){\n      return 'Please enter phone number'\n    }\n    try {\n      const num = parsePhoneNumber(value)\n      if (!num.isValid()) {\n        setPhoneValidMessage('Invalid phone number.')\n        return\n      }\n    } catch (e) {\n      if (phoneValidMessage == \"initial\") {\n        return true;\n      }\n      setPhoneValidMessage('This field is required')\n      return\n    }\n    setPhoneValidMessage('');\n    return true;\n  }\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  \n  return (\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-9 col-lg-12 col-xl-10\">\n          <div className=\"card shadow-lg o-hidden border-0 my-5\">\n              <div className=\"card-body p-0\">\n                  <div className=\"row\">\n                      <div className=\"col-lg-5 col-xl-6 d-none d-lg-flex\">\n                          <div className=\"flex-grow-1 align-items-center bg-register-image\" style={{'background-size': 'contain','background-image': `url(${illustration})`, 'background-repeat': 'no-repeat'}}></div>\n                      </div>\n                      <div className=\"col-lg-7 col-xl-6 offset-xl-0\">\n                          <div className=\"align-items-center align-content-center p-5\">\n                              <div className=\"text-center\">\n                              <h4 class=\"text-dark mb-2\">Reset password</h4>\n                                        <p class=\"mb-4\">Enter your new password, along with the code you recieved per sms.</p>\n                              </div>\n                              <Form className=\"user\" onSubmit={handleResetPassword} ref={form} style={{margin: '18px'}}>\n                                    <div className=\"mb-3\">\n                                    <PhoneInput\n                                    isValid={(value, country) => {\n                                      return validateNumber(`+${value}`)\n                                    }}\n                                    enableSearch\n                                    disableSearchIcon\n                                    value={phone}\n                                    onChange={onChangePhone}\n                                    inputClass=\"form-control  form-control-user w-100\"\n                                    inputStyle={{paddingLeft: '18%', height: '20%', borderColor: \"#d1d3e2\"}}\n                                    dropdownStyle={{textAlign: 'left', color: 'black'}}\n                                    buttonStyle={{'border-radius': '10rem', color: 'unset !important', 'background-color': 'unset !important', padding: '2%'}}\n                                    buttonClass=\"btn btn-link btn-sm   :hover{color: unset !important; background-color: unset !important;}\"\n                                    id=\"exampleInputPhone\"\n                                    placeholder=\"Phone\"\n                                  />\n                                  {(() => {\n                                    if (phoneValidMessage != \"\" && phoneValidMessage != \"initial\") {\n                                      return (\n                                        <div role=\"alert\" style={{\"marginTop\":\"5px\",\"color\":\"red\"}}>\n                                        {phoneValidMessage}\n                                      </div>\n                                      )\n                                    } else {\n                                      return \"\"\n                                    }\n                                  })()}\n                                  </div>\n                                  <div className=\"mb-3\">\n                                    <Input\n                                    id=\"exampleInputCode\"\n                                    type=\"phone\"\n                                    className=\"form-control  form-control-user\"\n                                    placeholder=\"Code\"\n                                    name=\"code\"\n                                    value={code}\n                                    onChange={onChangeCode}\n                                    validations={[required]}\n                                    />\n                                  </div>\n                                    \n                                  <div className=\"row mb-3\">\n                                      <div className=\"col-sm-6 mb-3 mb-sm-0\">\n                                        <Input\n                                          id=\"exampleInputPassword\"\n                                          type=\"password\"\n                                          className=\"form-control form-control-user\"\n                                          name=\"password\"\n                                          placeholder=\"Password\"\n                                          value={password}\n                                          onChange={onChangePassword}\n                                          validations={[vpassword, matchcreatepassword, required]}\n                                          />\n                                      </div>\n                                      <div className=\"col-sm-6\">\n                                        <Input\n                                        id=\"exampleInputPassword\"\n                                        type=\"password\"\n                                        className=\"form-control form-control-user\"\n                                        name=\"password\"\n                                        value={password2}\n                                        placeholder=\"Repeat password\"\n                                        onChange={onChangePassword2}\n                                        validations={[vpassword, matchpassword, required]}\n                                        />\n                                      </div>\n                                  </div>\n                                    \n                                  \n                                  <button className=\"btn btn-primary d-block btn-user w-100\" type=\"submit\" disabled={loading}>Reset password</button>\n                                  {loading && (\n                                    <span className=\"spinner-border spinner-border-sm\" style={{'margin':'auto'}}></span>\n                                  )}\n                                  <hr></hr>\n                                  {message && (\n                                    <div className=\"form-group\">\n                                      <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                                        {message}\n                                      </div>\n                                    </div>\n                                  )}\n                                <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                                </Form>\n                                <div className=\"text-center d-xl-flex justify-content-xl-center\"><Link to=\"/login\" className=\"small\">Already have an account? Login!</Link></div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n        </div>\n        </div>\n\n  );\n};\n\nexport default ResetPassword;","C:\\Projects\\React\\heycloud-frontend-new\\src\\services\\user.service.js",["263"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\services\\auth.service.js",["264"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\reducers\\message.js",["265"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}","C:\\Projects\\React\\heycloud-frontend-new\\src\\reducers\\auth.js",["266"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n  } from \"../actions/types\";\n  \n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  \n  const initialState = user\n    ? { isLoggedIn: true, user }\n    : { isLoggedIn: false, user: null };\n  \n  export default function (state = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case REGISTER_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case REGISTER_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case LOGIN_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: true,\n          user: payload.user,\n        };\n      case LOGIN_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      case LOGOUT:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      default:\n        return state;\n    }\n  }\n  ","C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\RecentTaskEntry.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\VpsPanelEntry.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\NgrokPanelEntry.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\services\\auth-header.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\pages\\Admin.js",["267","268","269","270","271","272","273","274","275","276","277"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\RegionEntry.js",[],"C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\RegionPanel.js",["278","279","280","281","282"],"C:\\Projects\\React\\heycloud-frontend-new\\src\\components\\CreateRegion.js",["283","284","285","286","287","288","289","290"],{"ruleId":"291","severity":1,"message":"292","line":14,"column":10,"nodeType":"293","messageId":"294","endLine":14,"endColumn":20},{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"291","severity":1,"message":"299","line":34,"column":10,"nodeType":"293","messageId":"294","endLine":34,"endColumn":28},{"ruleId":"291","severity":1,"message":"300","line":35,"column":10,"nodeType":"293","messageId":"294","endLine":35,"endColumn":24},{"ruleId":"291","severity":1,"message":"301","line":1,"column":17,"nodeType":"293","messageId":"294","endLine":1,"endColumn":28},{"ruleId":"291","severity":1,"message":"302","line":1,"column":30,"nodeType":"293","messageId":"294","endLine":1,"endColumn":38},{"ruleId":"291","severity":1,"message":"303","line":5,"column":8,"nodeType":"293","messageId":"294","endLine":5,"endColumn":24},{"ruleId":"291","severity":1,"message":"304","line":10,"column":8,"nodeType":"293","messageId":"294","endLine":10,"endColumn":12},{"ruleId":"291","severity":1,"message":"301","line":1,"column":17,"nodeType":"293","messageId":"294","endLine":1,"endColumn":28},{"ruleId":"291","severity":1,"message":"302","line":1,"column":30,"nodeType":"293","messageId":"294","endLine":1,"endColumn":38},{"ruleId":"291","severity":1,"message":"305","line":10,"column":10,"nodeType":"293","messageId":"294","endLine":10,"endColumn":17},{"ruleId":"291","severity":1,"message":"306","line":17,"column":10,"nodeType":"293","messageId":"294","endLine":17,"endColumn":18},{"ruleId":"291","severity":1,"message":"307","line":18,"column":10,"nodeType":"293","messageId":"294","endLine":18,"endColumn":20},{"ruleId":"291","severity":1,"message":"304","line":20,"column":8,"nodeType":"293","messageId":"294","endLine":20,"endColumn":12},{"ruleId":"308","severity":1,"message":"309","line":40,"column":44,"nodeType":"310","messageId":"311","endLine":40,"endColumn":46},{"ruleId":"308","severity":1,"message":"312","line":70,"column":76,"nodeType":"310","messageId":"311","endLine":70,"endColumn":78},{"ruleId":"308","severity":1,"message":"309","line":89,"column":42,"nodeType":"310","messageId":"311","endLine":89,"endColumn":44},{"ruleId":"308","severity":1,"message":"312","line":99,"column":29,"nodeType":"310","messageId":"311","endLine":99,"endColumn":31},{"ruleId":"308","severity":1,"message":"309","line":148,"column":61,"nodeType":"310","messageId":"311","endLine":148,"endColumn":63},{"ruleId":"308","severity":1,"message":"309","line":148,"column":88,"nodeType":"310","messageId":"311","endLine":148,"endColumn":90},{"ruleId":"291","severity":1,"message":"313","line":12,"column":10,"nodeType":"293","messageId":"294","endLine":12,"endColumn":23},{"ruleId":"314","severity":1,"message":"315","line":28,"column":8,"nodeType":"316","endLine":28,"endColumn":10,"suggestions":"317"},{"ruleId":"291","severity":1,"message":"318","line":3,"column":8,"nodeType":"293","messageId":"294","endLine":3,"endColumn":20},{"ruleId":"291","severity":1,"message":"307","line":14,"column":10,"nodeType":"293","messageId":"294","endLine":14,"endColumn":20},{"ruleId":"291","severity":1,"message":"319","line":16,"column":8,"nodeType":"293","messageId":"294","endLine":16,"endColumn":17},{"ruleId":"291","severity":1,"message":"320","line":17,"column":8,"nodeType":"293","messageId":"294","endLine":17,"endColumn":17},{"ruleId":"291","severity":1,"message":"321","line":33,"column":7,"nodeType":"293","messageId":"294","endLine":33,"endColumn":14},{"ruleId":"291","severity":1,"message":"322","line":45,"column":7,"nodeType":"293","messageId":"294","endLine":45,"endColumn":17},{"ruleId":"308","severity":1,"message":"309","line":68,"column":13,"nodeType":"310","messageId":"311","endLine":68,"endColumn":15},{"ruleId":"291","severity":1,"message":"323","line":91,"column":7,"nodeType":"293","messageId":"294","endLine":91,"endColumn":13},{"ruleId":"308","severity":1,"message":"312","line":93,"column":25,"nodeType":"310","messageId":"311","endLine":93,"endColumn":27},{"ruleId":"291","severity":1,"message":"324","line":120,"column":9,"nodeType":"293","messageId":"294","endLine":120,"endColumn":17},{"ruleId":"308","severity":1,"message":"309","line":156,"column":42,"nodeType":"310","messageId":"311","endLine":156,"endColumn":44},{"ruleId":"308","severity":1,"message":"312","line":166,"column":29,"nodeType":"310","messageId":"311","endLine":166,"endColumn":31},{"ruleId":"308","severity":1,"message":"312","line":183,"column":76,"nodeType":"310","messageId":"311","endLine":183,"endColumn":78},{"ruleId":"308","severity":1,"message":"309","line":279,"column":59,"nodeType":"310","messageId":"311","endLine":279,"endColumn":61},{"ruleId":"308","severity":1,"message":"309","line":279,"column":86,"nodeType":"310","messageId":"311","endLine":279,"endColumn":88},{"ruleId":"291","severity":1,"message":"325","line":2,"column":10,"nodeType":"293","messageId":"294","endLine":2,"endColumn":19},{"ruleId":"291","severity":1,"message":"326","line":4,"column":10,"nodeType":"293","messageId":"294","endLine":4,"endColumn":14},{"ruleId":"291","severity":1,"message":"304","line":5,"column":8,"nodeType":"293","messageId":"294","endLine":5,"endColumn":12},{"ruleId":"308","severity":1,"message":"312","line":13,"column":31,"nodeType":"310","messageId":"311","endLine":13,"endColumn":33},{"ruleId":"291","severity":1,"message":"301","line":1,"column":17,"nodeType":"293","messageId":"294","endLine":1,"endColumn":28},{"ruleId":"291","severity":1,"message":"302","line":1,"column":30,"nodeType":"293","messageId":"294","endLine":1,"endColumn":38},{"ruleId":"327","severity":1,"message":"328","line":36,"column":13,"nodeType":"329","endLine":36,"endColumn":108},{"ruleId":"330","severity":1,"message":"331","line":38,"column":21,"nodeType":"329","endLine":38,"endColumn":78},{"ruleId":"308","severity":1,"message":"312","line":51,"column":51,"nodeType":"310","messageId":"311","endLine":51,"endColumn":53},{"ruleId":"291","severity":1,"message":"305","line":5,"column":10,"nodeType":"293","messageId":"294","endLine":5,"endColumn":17},{"ruleId":"291","severity":1,"message":"332","line":6,"column":8,"nodeType":"293","messageId":"294","endLine":6,"endColumn":19},{"ruleId":"308","severity":1,"message":"309","line":36,"column":15,"nodeType":"310","messageId":"311","endLine":36,"endColumn":17},{"ruleId":"291","severity":1,"message":"333","line":77,"column":12,"nodeType":"293","messageId":"294","endLine":77,"endColumn":19},{"ruleId":"291","severity":1,"message":"334","line":77,"column":21,"nodeType":"293","messageId":"294","endLine":77,"endColumn":31},{"ruleId":"291","severity":1,"message":"335","line":78,"column":12,"nodeType":"293","messageId":"294","endLine":78,"endColumn":18},{"ruleId":"291","severity":1,"message":"336","line":78,"column":20,"nodeType":"293","messageId":"294","endLine":78,"endColumn":29},{"ruleId":"291","severity":1,"message":"337","line":80,"column":13,"nodeType":"293","messageId":"294","endLine":80,"endColumn":23},{"ruleId":"291","severity":1,"message":"338","line":2,"column":10,"nodeType":"293","messageId":"294","endLine":2,"endColumn":18},{"ruleId":"327","severity":1,"message":"339","line":21,"column":74,"nodeType":"329","endLine":21,"endColumn":171},{"ruleId":"291","severity":1,"message":"340","line":12,"column":12,"nodeType":"293","messageId":"294","endLine":12,"endColumn":21},{"ruleId":"291","severity":1,"message":"341","line":9,"column":8,"nodeType":"293","messageId":"294","endLine":9,"endColumn":13},{"ruleId":"291","severity":1,"message":"342","line":18,"column":7,"nodeType":"293","messageId":"294","endLine":18,"endColumn":15},{"ruleId":"291","severity":1,"message":"337","line":38,"column":11,"nodeType":"293","messageId":"294","endLine":38,"endColumn":21},{"ruleId":"308","severity":1,"message":"312","line":59,"column":76,"nodeType":"310","messageId":"311","endLine":59,"endColumn":78},{"ruleId":"308","severity":1,"message":"309","line":86,"column":42,"nodeType":"310","messageId":"311","endLine":86,"endColumn":44},{"ruleId":"308","severity":1,"message":"312","line":96,"column":29,"nodeType":"310","messageId":"311","endLine":96,"endColumn":31},{"ruleId":"308","severity":1,"message":"309","line":140,"column":59,"nodeType":"310","messageId":"311","endLine":140,"endColumn":61},{"ruleId":"308","severity":1,"message":"309","line":140,"column":86,"nodeType":"310","messageId":"311","endLine":140,"endColumn":88},{"ruleId":"291","severity":1,"message":"343","line":2,"column":10,"nodeType":"293","messageId":"294","endLine":2,"endColumn":18},{"ruleId":"291","severity":1,"message":"344","line":2,"column":20,"nodeType":"293","messageId":"294","endLine":2,"endColumn":28},{"ruleId":"327","severity":1,"message":"339","line":43,"column":92,"nodeType":"329","endLine":43,"endColumn":130},{"ruleId":"327","severity":1,"message":"339","line":43,"column":146,"nodeType":"329","endLine":43,"endColumn":184},{"ruleId":"327","severity":1,"message":"339","line":44,"column":69,"nodeType":"329","endLine":44,"endColumn":107},{"ruleId":"291","severity":1,"message":"343","line":2,"column":10,"nodeType":"293","messageId":"294","endLine":2,"endColumn":18},{"ruleId":"291","severity":1,"message":"344","line":2,"column":20,"nodeType":"293","messageId":"294","endLine":2,"endColumn":28},{"ruleId":"327","severity":1,"message":"339","line":43,"column":92,"nodeType":"329","endLine":43,"endColumn":130},{"ruleId":"327","severity":1,"message":"339","line":43,"column":146,"nodeType":"329","endLine":43,"endColumn":184},{"ruleId":"327","severity":1,"message":"339","line":44,"column":69,"nodeType":"329","endLine":44,"endColumn":107},{"ruleId":"308","severity":1,"message":"309","line":30,"column":13,"nodeType":"310","messageId":"311","endLine":30,"endColumn":15},{"ruleId":"308","severity":1,"message":"309","line":71,"column":44,"nodeType":"310","messageId":"311","endLine":71,"endColumn":46},{"ruleId":"308","severity":1,"message":"312","line":110,"column":76,"nodeType":"310","messageId":"311","endLine":110,"endColumn":78},{"ruleId":"308","severity":1,"message":"309","line":127,"column":42,"nodeType":"310","messageId":"311","endLine":127,"endColumn":44},{"ruleId":"308","severity":1,"message":"312","line":137,"column":29,"nodeType":"310","messageId":"311","endLine":137,"endColumn":31},{"ruleId":"308","severity":1,"message":"309","line":185,"column":59,"nodeType":"310","messageId":"311","endLine":185,"endColumn":61},{"ruleId":"308","severity":1,"message":"309","line":185,"column":86,"nodeType":"310","messageId":"311","endLine":185,"endColumn":88},{"ruleId":"345","severity":1,"message":"346","line":56,"column":1,"nodeType":"347","endLine":67,"endColumn":3},{"ruleId":"345","severity":1,"message":"346","line":73,"column":1,"nodeType":"347","endLine":80,"endColumn":3},{"ruleId":"345","severity":1,"message":"348","line":5,"column":1,"nodeType":"347","endLine":18,"endColumn":2},{"ruleId":"345","severity":1,"message":"348","line":15,"column":3,"nodeType":"347","endLine":50,"endColumn":4},{"ruleId":"291","severity":1,"message":"349","line":5,"column":8,"nodeType":"293","messageId":"294","endLine":5,"endColumn":19},{"ruleId":"291","severity":1,"message":"303","line":6,"column":8,"nodeType":"293","messageId":"294","endLine":6,"endColumn":24},{"ruleId":"291","severity":1,"message":"319","line":9,"column":8,"nodeType":"293","messageId":"294","endLine":9,"endColumn":17},{"ruleId":"291","severity":1,"message":"320","line":10,"column":8,"nodeType":"293","messageId":"294","endLine":10,"endColumn":17},{"ruleId":"291","severity":1,"message":"350","line":11,"column":8,"nodeType":"293","messageId":"294","endLine":11,"endColumn":19},{"ruleId":"291","severity":1,"message":"313","line":12,"column":10,"nodeType":"293","messageId":"294","endLine":12,"endColumn":23},{"ruleId":"291","severity":1,"message":"333","line":20,"column":12,"nodeType":"293","messageId":"294","endLine":20,"endColumn":19},{"ruleId":"291","severity":1,"message":"351","line":21,"column":12,"nodeType":"293","messageId":"294","endLine":21,"endColumn":19},{"ruleId":"308","severity":1,"message":"309","line":31,"column":45,"nodeType":"310","messageId":"311","endLine":31,"endColumn":47},{"ruleId":"314","severity":1,"message":"352","line":48,"column":10,"nodeType":"316","endLine":48,"endColumn":18,"suggestions":"353"},{"ruleId":"354","severity":1,"message":"355","line":65,"column":29,"nodeType":"356","messageId":"357","endLine":71,"endColumn":30},{"ruleId":"291","severity":1,"message":"343","line":2,"column":10,"nodeType":"293","messageId":"294","endLine":2,"endColumn":18},{"ruleId":"291","severity":1,"message":"344","line":2,"column":20,"nodeType":"293","messageId":"294","endLine":2,"endColumn":28},{"ruleId":"327","severity":1,"message":"339","line":43,"column":92,"nodeType":"329","endLine":43,"endColumn":130},{"ruleId":"327","severity":1,"message":"339","line":43,"column":146,"nodeType":"329","endLine":43,"endColumn":184},{"ruleId":"327","severity":1,"message":"339","line":44,"column":69,"nodeType":"329","endLine":44,"endColumn":107},{"ruleId":"291","severity":1,"message":"343","line":2,"column":10,"nodeType":"293","messageId":"294","endLine":2,"endColumn":18},{"ruleId":"291","severity":1,"message":"344","line":2,"column":20,"nodeType":"293","messageId":"294","endLine":2,"endColumn":28},{"ruleId":"291","severity":1,"message":"358","line":5,"column":8,"nodeType":"293","messageId":"294","endLine":5,"endColumn":19},{"ruleId":"291","severity":1,"message":"333","line":8,"column":12,"nodeType":"293","messageId":"294","endLine":8,"endColumn":19},{"ruleId":"291","severity":1,"message":"351","line":9,"column":12,"nodeType":"293","messageId":"294","endLine":9,"endColumn":19},{"ruleId":"327","severity":1,"message":"339","line":43,"column":94,"nodeType":"329","endLine":43,"endColumn":132},{"ruleId":"327","severity":1,"message":"339","line":43,"column":148,"nodeType":"329","endLine":43,"endColumn":186},{"ruleId":"327","severity":1,"message":"339","line":44,"column":71,"nodeType":"329","endLine":44,"endColumn":109},"no-unused-vars","'datadogRum' is defined but never used.","Identifier","unusedVar","no-native-reassign",["359"],"no-negated-in-lhs",["360"],"'showModeratorBoard' is assigned a value but never used.","'showAdminBoard' is assigned a value but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","'DashboardWidgets' is defined but never used.","'logo' is defined but never used.","'isEmail' is defined but never used.","'register' is defined but never used.","'setMessage' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'CSSTransition' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.search'. Either include it or remove the dependency array.","ArrayExpression",["361"],"'NumberFormat' is defined but never used.","'GifLoader' is defined but never used.","'Preloader' is defined but never used.","'checked' is assigned a value but never used.","'validEmail' is assigned a value but never used.","'vphone' is assigned a value but never used.","'stateRef' is assigned a value but never used.","'isExpired' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'UserService' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'Redirect' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'portalUrl' is assigned a value but never used.","'Input' is defined but never used.","'required' is assigned a value but never used.","'Dropdown' is defined but never used.","'FormText' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function","'RecentTasks' is defined but never used.","'querySearch' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["362"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'RegionEntry' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},"Update the dependencies array to be: [props.location.search]",{"range":"367","text":"368"},"Update the dependencies array to be: [props.history, reload]",{"range":"369","text":"370"},[1001,1003],"[props.location.search]",[1797,1805],"[props.history, reload]"]