"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.calculateRatio = exports.updateProgress = exports.calculatePercentage = exports.truncateNumber = void 0;
var constants_1 = require("./constants");
/**
 * @hidden
 */
var truncateNumber = function (value) {
    var numberParts = value.toString().split('.');
    return numberParts.length === 1 ? "".concat(numberParts[0]) : "".concat(numberParts[0], ".").concat(numberParts[1].substr(0, constants_1.LABEL_DECIMALS));
};
exports.truncateNumber = truncateNumber;
/**
 * @hidden
 */
var calculatePercentage = function (min, max, value) {
    var onePercent = Math.abs((max - min) / 100);
    return Math.abs((value - min) / onePercent);
};
exports.calculatePercentage = calculatePercentage;
/**
 * @hidden
 */
var updateProgress = function (progressRef, progressWrapRef, percentage, isVertical) {
    var progressPercentage = Math.max(percentage, 0.01);
    var progressWrapPercentage = (100 / progressPercentage) * 100;
    if (progressRef.current && progressWrapRef.current) {
        progressRef.current.style.width = !isVertical ? "".concat(progressPercentage, "%") : '100%';
        progressWrapRef.current.style.width = !isVertical ? "".concat(progressWrapPercentage, "%") : '100%';
        progressRef.current.style.height = isVertical ? "".concat(progressPercentage, "%") : '100%';
        progressWrapRef.current.style.height = isVertical ? "".concat(progressWrapPercentage, "%") : '100%';
    }
};
exports.updateProgress = updateProgress;
/**
 * @hidden
 */
var calculateRatio = function (min, max, value) {
    return Math.max((value - min) / (max - min), constants_1.MIN_RATIO);
};
exports.calculateRatio = calculateRatio;
