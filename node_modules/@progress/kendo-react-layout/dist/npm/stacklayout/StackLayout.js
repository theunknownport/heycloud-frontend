"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StackLayout = void 0;
var React = require("react");
var PropTypes = require("prop-types");
var kendo_licensing_1 = require("@progress/kendo-licensing");
var package_metadata_1 = require("../package-metadata");
var kendo_react_common_1 = require("@progress/kendo-react-common");
/**
 * Represents the [KendoReact StackLayout component]({% slug overview_stacklayout %}).
 * Arranges its inner elements horizontally, or vertically in a stack. Nesting stack layouts is supported to build more complex layouts.
 *
 * @example
 * ```jsx
 *
 * const App = () => {
 *   return (
 *     <StackLayout
 *       orientation="vertical"
 *       align={{horizontal: 'stretch', vertical: 'stretch'}}
 *       gap={10}
 *     >
 *       <div>Box</div>
 *       <div>Box</div>
 *       <div>Box</div>
 *       <div>Box</div>
 *     </StackLayout>
 *   );
 * };
 *    ReactDOM.render(<App />, document.querySelector('my-app'));
 * ```
 */
exports.StackLayout = React.forwardRef(function (props, ref) {
    (0, kendo_licensing_1.validatePackage)(package_metadata_1.packageMetadata);
    var elementRef = React.useRef(null);
    var getImperativeHandle = React.useCallback(function () { return ({
        element: elementRef.current
    }); }, []);
    React.useImperativeHandle(ref, getImperativeHandle);
    var className = props.className, style = props.style, id = props.id, children = props.children;
    var layoutId = React.useMemo(function () { return (0, kendo_react_common_1.guid)(); }, []);
    var orientation = React.useMemo(function () { return props.orientation || defaultProps.orientation; }, [props.orientation]);
    var isHorizontal = orientation === 'horizontal';
    var hAlign = React.useMemo(function () { return props.align && props.align.horizontal ? props.align.horizontal : defaultProps.hAlign; }, [props.align]);
    var vAlign = React.useMemo(function () { return props.align && props.align.vertical ? props.align.vertical : defaultProps.vAlign; }, [props.align]);
    var stackLayoutClasses = React.useMemo(function () { return (0, kendo_react_common_1.classNames)('k-stack-layout', {
        'k-hstack': orientation === 'horizontal',
        'k-vstack': orientation === 'vertical',
        'k-justify-content-start': isHorizontal && hAlign === 'start' || !isHorizontal && vAlign === 'top',
        'k-justify-content-center': isHorizontal && hAlign === 'center' || !isHorizontal && vAlign === 'middle',
        'k-justify-content-end': isHorizontal && hAlign === 'end' || !isHorizontal && vAlign === 'bottom',
        'k-justify-content-stretch': isHorizontal && hAlign === 'stretch' || !isHorizontal && vAlign === 'stretch',
        'k-align-items-start': !isHorizontal && hAlign === 'start' || isHorizontal && vAlign === 'top',
        'k-align-items-center': !isHorizontal && hAlign === 'center' || isHorizontal && vAlign === 'middle',
        'k-align-items-end': !isHorizontal && hAlign === 'end' || isHorizontal && vAlign === 'bottom',
        'k-align-items-stretch': !isHorizontal && hAlign === 'stretch' || isHorizontal && vAlign === 'stretch'
    }, className); }, [orientation, isHorizontal, hAlign, vAlign, className]);
    var stackLayoutStyles = __assign({ gap: "".concat(typeof props.gap === 'number' ? props.gap + 'px' : props.gap) }, style);
    return (React.createElement("div", { ref: elementRef, className: stackLayoutClasses, style: stackLayoutStyles, id: id || layoutId }, children));
});
var defaultProps = {
    orientation: 'horizontal',
    hAlign: 'stretch',
    vAlign: 'stretch'
};
exports.StackLayout.propTypes = {
    className: PropTypes.string,
    style: PropTypes.object,
    children: PropTypes.any,
    id: PropTypes.string,
    orientation: PropTypes.oneOf(['horizontal', 'vertical']),
    gap: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    align: PropTypes.shape({
        vertical: PropTypes.oneOf(['top', 'middle', 'bottom', 'stretch']),
        horizontal: PropTypes.oneOf(['start', 'center', 'end', 'stretch'])
    })
};
exports.StackLayout.defaultProps = defaultProps;
exports.StackLayout.displayName = 'KendoReactStackLayout';
