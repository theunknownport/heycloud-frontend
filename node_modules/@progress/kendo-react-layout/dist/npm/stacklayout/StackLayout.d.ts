import * as React from 'react';
import { StackLayoutProps } from './StackLayoutProps';
/**
 * Represents the Object which is passed to the [`ref`](https://reactjs.org/docs/refs-and-the-dom.html)
 * callback of the StackLayout component.
 */
export interface StackLayoutHandle {
    /**
     * Represents the current element. If no current element is present, `element` is `null`.
     */
    element: HTMLDivElement | null;
}
/**
 * Represents the [KendoReact StackLayout component]({% slug overview_stacklayout %}).
 * Arranges its inner elements horizontally, or vertically in a stack. Nesting stack layouts is supported to build more complex layouts.
 *
 * @example
 * ```jsx
 *
 * const App = () => {
 *   return (
 *     <StackLayout
 *       orientation="vertical"
 *       align={{horizontal: 'stretch', vertical: 'stretch'}}
 *       gap={10}
 *     >
 *       <div>Box</div>
 *       <div>Box</div>
 *       <div>Box</div>
 *       <div>Box</div>
 *     </StackLayout>
 *   );
 * };
 *    ReactDOM.render(<App />, document.querySelector('my-app'));
 * ```
 */
export declare const StackLayout: React.ForwardRefExoticComponent<StackLayoutProps & React.RefAttributes<StackLayoutHandle | null>>;
