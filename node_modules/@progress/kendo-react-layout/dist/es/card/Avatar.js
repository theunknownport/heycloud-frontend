import * as React from 'react';
import * as PropTypes from 'prop-types';
import { classNames, kendoThemeMaps } from '@progress/kendo-react-common';
import { avatarType } from './interfaces/Enums';
import { validatePackage } from '@progress/kendo-react-common';
import { packageMetadata } from '../package-metadata';
export var Avatar = function (props) {
    var _a;
    validatePackage(packageMetadata);
    return (React.createElement("div", { style: props.style, className: classNames('k-avatar', (_a = {},
            _a['k-avatar-bordered'] = props.border,
            _a["k-rounded-".concat(kendoThemeMaps.roundedMap[props.rounded] || props.rounded)] = props.rounded,
            _a["k-avatar-".concat(kendoThemeMaps.sizeMap[props.size] || props.size)] = props.size,
            _a["k-avatar-".concat(props.fillMode)] = props.fillMode,
            _a["k-avatar-".concat(props.fillMode, "-").concat(props.themeColor)] = Boolean(props.fillMode && props.themeColor),
            _a), props.className) },
        React.createElement("span", { className: "k-avatar-".concat(props.type) }, props.children)));
};
Avatar.propTypes = {
    className: PropTypes.string,
    type: PropTypes.oneOf(['text', 'image', 'icon']),
    size: PropTypes.oneOf([null, 'small', 'medium', 'large']),
    rounded: PropTypes.oneOf([null, 'small', 'medium', 'large', 'full']),
    fillMode: PropTypes.oneOf([null, 'solid', 'outline']),
    /* eslint-disable max-len */
    themeColor: PropTypes.oneOf([null, 'base', 'dark', 'error', 'info', 'inverse', 'inverse', 'light', 'primary', 'secondary', 'success', 'tertiary', 'warning'])
};
Avatar.defaultProps = {
    type: avatarType.TEXT,
    size: 'medium',
    rounded: 'full',
    fillMode: 'solid',
    themeColor: 'primary'
};
